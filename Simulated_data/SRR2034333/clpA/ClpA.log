
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448152

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_68_1_1.fq
	 the 2nd reads: clpA_68_1_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_68_1_1.aln
	 the 2nd reads: clpA_68_1_2.aln

  SAM Alignment File:
	clpA_68_1_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448152

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_110_1_1.fq
	 the 2nd reads: clpA_110_1_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_110_1_1.aln
	 the 2nd reads: clpA_110_1_2.aln

  SAM Alignment File:
	clpA_110_1_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448152

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_208_1_1.fq
	 the 2nd reads: clpA_208_1_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_208_1_1.aln
	 the 2nd reads: clpA_208_1_2.aln

  SAM Alignment File:
	clpA_208_1_.sam

[u'>clpA_68\n', u'>clpA_110\n', u'>clpA_208\n', u'>clpA_191\n']
['', 'clpA_68']
>clpA_68
AGAGAAAGCATGATAATTGATGAGGAGATTTTATCTGATTTAATATTACACATTAAACTTTTAAGGATTAAATTCCTCTTTAAAAATAACACTCTTGGTATTTTTATTTTGATGGGTTCTTCTGATGTGGATAAGAATAAGCTTTCAGGTATTTTGTCAGAAGAACTTAAGATACCCAAATTGACTTTGGGAGTGAGTGAGTATGGTGATTTTGATGGCATTAATCGATTAATAGGGCCTGTATATGGATCTGAATCTTATGATGAATTTACTACATTTTTTAAATTTTTAAGTAAATCTTCAAGTTCAATTATTTTTCTATCCGATTTTGATAAATCTTCCAAGAGAGTTATAGAATTTTTTTTTGAAGGATTTAATACGGGCAGACTTTTTGATAGTCTTGGTAGGAGTGTAAGCTTATCAGATAGTATAATACTAATAGATATTAATATAGAATATAGAGAACTTGCTAGTATTGGATTTAAAAATGAAACACTAAATGGCAGGAGTTTGTTAGAAAAACGTTTTTCTAGTCAGTTTTTGGATCTTGTGGATCATATTTTTTTCTTT

clpA_68_1_
clpA_68_1_reference.fa
art_illumina -ss HS25 -sam -i clpA_68_1_reference.fa -p -l 76 -c 68 -m 200 -s 30 -o clpA_68_1_
['', 'clpA_110']
>clpA_68
AGAGAAAGCATGATAATTGATGAGGAGATTTTATCTGATTTAATATTACACATTAAACTTTTAAGGATTAAATTCCTCTTTAAAAATAACACTCTTGGTATTTTTATTTTGATGGGTTCTTCTGATGTGGATAAGAATAAGCTTTCAGGTATTTTGTCAGAAGAACTTAAGATACCCAAATTGACTTTGGGAGTGAGTGAGTATGGTGATTTTGATGGCATTAATCGATTAATAGGGCCTGTATATGGATCTGAATCTTATGATGAATTTACTACATTTTTTAAATTTTTAAGTAAATCTTCAAGTTCAATTATTTTTCTATCCGATTTTGATAAATCTTCCAAGAGAGTTATAGAATTTTTTTTTGAAGGATTTAATACGGGCAGACTTTTTGATAGTCTTGGTAGGAGTGTAAGCTTATCAGATAGTATAATACTAATAGATATTAATATAGAATATAGAGAACTTGCTAGTATTGGATTTAAAAATGAAACACTAAATGGCAGGAGTTTGTTAGAAAAACGTTTTTCTAGTCAGTTTTTGGATCTTGTGGATCATATTTTTTTCTTT
>clpA_110
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATGTTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAATGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATATTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT

clpA_110_1_
clpA_110_1_reference.fa
art_illumina -ss HS25 -sam -i clpA_110_1_reference.fa -p -l 76 -c 75 -m 200 -s 30 -o clpA_110_1_
['', 'clpA_208']
>clpA_68
AGAGAAAGCATGATAATTGATGAGGAGATTTTATCTGATTTAATATTACACATTAAACTTTTAAGGATTAAATTCCTCTTTAAAAATAACACTCTTGGTATTTTTATTTTGATGGGTTCTTCTGATGTGGATAAGAATAAGCTTTCAGGTATTTTGTCAGAAGAACTTAAGATACCCAAATTGACTTTGGGAGTGAGTGAGTATGGTGATTTTGATGGCATTAATCGATTAATAGGGCCTGTATATGGATCTGAATCTTATGATGAATTTACTACATTTTTTAAATTTTTAAGTAAATCTTCAAGTTCAATTATTTTTCTATCCGATTTTGATAAATCTTCCAAGAGAGTTATAGAATTTTTTTTTGAAGGATTTAATACGGGCAGACTTTTTGATAGTCTTGGTAGGAGTGTAAGCTTATCAGATAGTATAATACTAATAGATATTAATATAGAATATAGAGAACTTGCTAGTATTGGATTTAAAAATGAAACACTAAATGGCAGGAGTTTGTTAGAAAAACGTTTTTCTAGTCAGTTTTTGGATCTTGTGGATCATATTTTTTTCTTT
>clpA_110
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATGTTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAATGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATATTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT
>clpA_208
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAGGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_208_1_
clpA_208_1_reference.fa
art_illumina -ss HS25 -sam -i clpA_208_1_reference.fa -p -l 76 -c 40 -m 200 -s 30 -o clpA_208_1_
['', 'clpA_191']
>clpA_68
AGAGAAAGCATGATAATTGATGAGGAGATTTTATCTGATTTAATATTA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448152

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_191_1_1.fq
	 the 2nd reads: clpA_191_1_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_191_1_1.aln
	 the 2nd reads: clpA_191_1_2.aln

  SAM Alignment File:
	clpA_191_1_.sam

Settings:
  Output files: "ClpA_1_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_1.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 576
Using parameters --bmax 432 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 432 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 287.5 (target: 431)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 154
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 155
Getting block 2 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 408
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 409
Getting block 3 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 203
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 204
Getting block 4 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 357
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 358
Getting block 5 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 299
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 300
Getting block 6 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 376
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 377
Getting block 7 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 329
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 330
Getting block 8 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 174
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 175
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 787
fchr[G]: 988
fchr[T]: 1404
fchr[$]: 2307
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195316 bytes to primary EBWT file: ClpA_1_bowtie.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_1_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2307
    bwtLen: 2308
    sz: 577
    bwtSz: 577
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 576
Using parameters --bmax 432 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 432 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 2; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 287.5 (target: 431)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 265
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 266
Getting block 2 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 216
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 217
Getting block 3 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 217
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 218
Getting block 4 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 410
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 411
Getting block 5 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 293
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 294
Getting block 6 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 393
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 394
Getting block 7 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 321
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 322
Getting block 8 of 8
  Reserving size (432) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 185
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 186
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 787
fchr[G]: 988
fchr[T]: 1404
fchr[$]: 2307
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195316 bytes to primary EBWT file: ClpA_1_bowtie.rev.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_1_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2307
    bwtLen: 2308
    sz: 577
    bwtSz: 577
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_1 done.

Mapping ClpA_1 sequence to ClpA_1 done.
length variant dictionary is: 4
length read dictionary is: 384
length k_j dictionary is: 384
length proportion dictionary is: 4
total sum is: 384.0
computing proportions of ClpA_1 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448154

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_217_2_1.fq
	 the 2nd reads: clpA_217_2_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_217_2_1.aln
	 the 2nd reads: clpA_217_2_2.aln

  SAM Alignment File:
	clpA_217_2_.sam

CACATTAAACTTTTAAGGATTAAATTCCTCTTTAAAAATAACACTCTTGGTATTTTTATTTTGATGGGTTCTTCTGATGTGGATAAGAATAAGCTTTCAGGTATTTTGTCAGAAGAACTTAAGATACCCAAATTGACTTTGGGAGTGAGTGAGTATGGTGATTTTGATGGCATTAATCGATTAATAGGGCCTGTATATGGATCTGAATCTTATGATGAATTTACTACATTTTTTAAATTTTTAAGTAAATCTTCAAGTTCAATTATTTTTCTATCCGATTTTGATAAATCTTCCAAGAGAGTTATAGAATTTTTTTTTGAAGGATTTAATACGGGCAGACTTTTTGATAGTCTTGGTAGGAGTGTAAGCTTATCAGATAGTATAATACTAATAGATATTAATATAGAATATAGAGAACTTGCTAGTATTGGATTTAAAAATGAAACACTAAATGGCAGGAGTTTGTTAGAAAAACGTTTTTCTAGTCAGTTTTTGGATCTTGTGGATCATATTTTTTTCTTT
>clpA_110
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATGTTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAATGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATATTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT
>clpA_208
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAGGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_191
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_191_1_
clpA_191_1_reference.fa
art_illumina -ss HS25 -sam -i clpA_191_1_reference.fa -p -l 76 -c 17 -m 200 -s 30 -o clpA_191_1_
bash temp.sh ClpA_1 ClpA_1
[68, 75, 40, 17]
[u'>clpA_217\n', u'>clpA_80\n', u'>clpA_125\n']
['', 'clpA_217']
>clpA_217
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTATTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_217_2_
clpA_217_2_reference.fa
art_illumina -ss HS25 -sam -i clpA_217_2_reference.fa -p -l 76 -c 25 -m 200 -s 30 -o clpA_217_2_
['', 'clpA_80']
>clpA_217
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTATTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_80
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTATAATGCTCT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448154

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_80_2_1.fq
	 the 2nd reads: clpA_80_2_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_80_2_1.aln
	 the 2nd reads: clpA_80_2_2.aln

  SAM Alignment File:
	clpA_80_2_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0.01

The random seed for the run: 1486448154

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_125_2_1.fq
	 the 2nd reads: clpA_125_2_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_125_2_1.aln
	 the 2nd reads: clpA_125_2_2.aln

  SAM Alignment File:
	clpA_125_2_.sam

Settings:
  Output files: "ClpA_2_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_2.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 434
Using parameters --bmax 326 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 326 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 3, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 2; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 216.25 (target: 325)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 270
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 271
Getting block 2 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 129
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 130
Getting block 3 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 198
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 199
Getting block 4 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 139
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 140
Getting block 5 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 291
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 292
Getting block 6 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 220
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 221
Getting block 7 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 169
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 170
Getting block 8 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 314
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 315
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 600
fchr[G]: 746
fchr[T]: 1067
fchr[$]: 1737
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195035 bytes to primary EBWT file: ClpA_2_bowtie.1.ebwt
Wrote 224 bytes to secondary EBWT file: ClpA_2_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1737
    bwtLen: 1738
    sz: 435
    bwtSz: 435
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 55
    offsSz: 220
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 4
    numSides: 8
    numLines: 8
    ebwtTotLen: 512
    ebwtTotSz: 512
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 434
Using parameters --bmax 326 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 326 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 216.25 (target: 325)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 250
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 251
Getting block 2 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 173
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 174
Getting block 3 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 213
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 214
Getting block 4 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 125
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 126
Getting block 5 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 256
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 257
Getting block 6 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 308
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 309
Getting block 7 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 155
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 156
Getting block 8 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 250
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 251
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 600
fchr[G]: 746
fchr[T]: 1067
fchr[$]: 1737
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195035 bytes to primary EBWT file: ClpA_2_bowtie.rev.1.ebwt
Wrote 224 bytes to secondary EBWT file: ClpA_2_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1737
    bwtLen: 1738
    sz: 435
    bwtSz: 435
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 55
    offsSz: 220
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 4
    numSides: 8
    numLines: 8
    ebwtTotLen: 512
    ebwtTotSz: 512
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_2 done.

Mapping ClpA_2 sequence to ClpA_2 done.
length variant dictionary is: 3
length read dictionary is: 368
length k_j dictionary is: 368
length proportion dictionary is: 3
total sum is: 368.0
computing proportions of ClpA_2 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448155

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_92_3_1.fq
	 the 2nd reads: clpA_92_3_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_92_3_1.aln
	 the 2nd reads: clpA_92_3_2.aln

  SAM Alignment File:
	clpA_92_3_.sam

TGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAATAATAAGTGTAAATGCTAAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGATTTCCCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT

clpA_80_2_
clpA_80_2_reference.fa
art_illumina -ss HS25 -sam -i clpA_80_2_reference.fa -p -l 76 -c 84 -m 200 -s 30 -o clpA_80_2_
['', 'clpA_125']
>clpA_217
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTATTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_80
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTATAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAATAATAAGTGTAAATGCTAAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGATTTCCCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_125
AAAAAAGAACTTATTATGCATGATAACTTGATATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGCTGACAGATATTTTATCACAAGAGTTTAGAATTCCAAAGTTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGCAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGACAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAAGGGTTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAGTGTGAGTTTATCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGTGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_125_2_
clpA_125_2_reference.fa
art_illumina -ss HS25 -sam -i clpA_125_2_reference.fa -p -l 76 -c 89 -m 200 -s 30 -o clpA_125_2_
bash temp.sh ClpA_2 ClpA_2
[25, 84, 89]
[u'>clpA_92\n', u'>clpA_30\n', u'>clpA_111\n', u'>clpA_31\n', u'>clpA_156\n', u'>clpA_176\n']
['', 'clpA_92']
>clpA_92
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGTCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGCAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTTAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGCTAATAGATCATGTGTTTGTATTT

clpA_92_3_
clpA_92_3_reference.fa
art_illumina -ss HS25 -sam -i clpA_92_3_reference.fa -p -l 76 -c 4 -m 200 -s 30 -o clpA_92_3_
['', 'clpA_30']
>clpA_92
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGTCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGCAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTTAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGCTAATAGATCATGTGTTTGTATTT
>clpA_30
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATCTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448155

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_30_3_1.fq
	 the 2nd reads: clpA_30_3_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_30_3_1.aln
	 the 2nd reads: clpA_30_3_2.aln

  SAM Alignment File:
	clpA_30_3_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448155

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_111_3_1.fq
	 the 2nd reads: clpA_111_3_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_111_3_1.aln
	 the 2nd reads: clpA_111_3_2.aln

  SAM Alignment File:
	clpA_111_3_.sam

GTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAGTAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAAGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_30_3_
clpA_30_3_reference.fa
art_illumina -ss HS25 -sam -i clpA_30_3_reference.fa -p -l 76 -c 46 -m 200 -s 30 -o clpA_30_3_
['', 'clpA_111']
>clpA_92
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGTCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGCAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTTAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGCTAATAGATCATGTGTTTGTATTT
>clpA_30
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATCTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAGTAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAAGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_111
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAAAGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_111_3_
clpA_111_3_reference.fa
art_illumina -ss HS25 -sam -i clpA_111_3_reference.fa -p -l 76 -c 74 -m 200 -s 30 -o clpA_111_3_
['', 'clpA_31']
>clpA_92
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGTCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGCAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTTAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGCTAATAGATCATGTGTTTGTATTT
>clpA_30
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATCTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAGTAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAAGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_111
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448155

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_31_3_1.fq
	 the 2nd reads: clpA_31_3_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_31_3_1.aln
	 the 2nd reads: clpA_31_3_2.aln

  SAM Alignment File:
	clpA_31_3_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448155

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_156_3_1.fq
	 the 2nd reads: clpA_156_3_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_156_3_1.aln
	 the 2nd reads: clpA_156_3_2.aln

  SAM Alignment File:
	clpA_156_3_.sam

AATAGTATTGGCTTTAAAAATAAAAAGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_31
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_31_3_
clpA_31_3_reference.fa
art_illumina -ss HS25 -sam -i clpA_31_3_reference.fa -p -l 76 -c 3 -m 200 -s 30 -o clpA_31_3_
['', 'clpA_156']
>clpA_92
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGTCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGCAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTTAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGCTAATAGATCATGTGTTTGTATTT
>clpA_30
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATCTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAGTAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAAGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_111
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAAAGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_31
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_156
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGCCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGTATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_156_3_
clpA_156_3_reference.fa
art_illumina -ss HS25 -sam -i clpA_156_3_reference.fa -p -l 76 -c 32 -m 200 -s 30 -o clpA_156_3_
['', 'clpA_176']
>clpA_92
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGTCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAAT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448155

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_176_3_1.fq
	 the 2nd reads: clpA_176_3_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_176_3_1.aln
	 the 2nd reads: clpA_176_3_2.aln

  SAM Alignment File:
	clpA_176_3_.sam

Settings:
  Output files: "ClpA_3_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_3.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 868
Using parameters --bmax 651 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 651 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 578.167 (target: 650)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 552
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 553
Getting block 2 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 640
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 641
Getting block 3 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 550
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 551
Getting block 4 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 561
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 562
Getting block 5 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 520
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 521
Getting block 6 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 646
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 647
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1183
fchr[G]: 1468
fchr[T]: 2106
fchr[$]: 3474
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195620 bytes to primary EBWT file: ClpA_3_bowtie.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_3_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3474
    bwtLen: 3475
    sz: 869
    bwtSz: 869
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 868
Using parameters --bmax 651 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 651 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 433.375 (target: 650)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 489
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 490
Getting block 2 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 334
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 335
Getting block 3 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 372
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 373
Getting block 4 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 306
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 307
Getting block 5 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 504
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 505
Getting block 6 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 608
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 609
Getting block 7 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 383
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 384
Getting block 8 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 471
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 472
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1183
fchr[G]: 1468
fchr[T]: 2106
fchr[$]: 3474
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195620 bytes to primary EBWT file: ClpA_3_bowtie.rev.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_3_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3474
    bwtLen: 3475
    sz: 869
    bwtSz: 869
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_3 done.

Mapping ClpA_3 sequence to ClpA_3 done.
length variant dictionary is: 6
length read dictionary is: 390
length k_j dictionary is: 390
length proportion dictionary is: 6
total sum is: 390.0
computing proportions of ClpA_3 done

TGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGCAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTTAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGCTAATAGATCATGTGTTTGTATTT
>clpA_30
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATCTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAGTAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAAGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_111
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAAAGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_31
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_156
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGCCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGTATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_176
AAAAAAGAACTTATTATAAACGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTGTTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGGGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGGTATTATGAATCTACTGGATTTTTTGAATTTTTGAACAAATCTTCCAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTGGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCGGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGTCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCGGGGGTAAATGATTTTAACTTTATATTAGAGAAGAGATTGCCTAATGAATTTTTAGAGTTAATAGATCATGTATTTGTATTT

clpA_176_3_
clpA_176_3_reference.fa
art_illumina -ss HS25 -sam -i clpA_176_3_reference.fa -p -l 76 -c 43 -m 200 -s 30 -o clpA_176_3_
bash temp.sh ClpA_3 ClpA_3
[4, 46, 74, 3, 32, 43]
[u'>clpA_217\n', u'>clpA_157\n', u'>clpA_4\n', u'>clpA_130\n', u'>clpA_173\n', u'>clpA_54\n', u'>clpA_146\n']
['', 'clpA_217']
>clpA_217
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTATTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448156

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_217_4_1.fq
	 the 2nd reads: clpA_217_4_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_217_4_1.aln
	 the 2nd reads: clpA_217_4_2.aln

  SAM Alignment File:
	clpA_217_4_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448156

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_157_4_1.fq
	 the 2nd reads: clpA_157_4_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_157_4_1.aln
	 the 2nd reads: clpA_157_4_2.aln

  SAM Alignment File:
	clpA_157_4_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448156

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_4_4_1.fq
	 the 2nd reads: clpA_4_4_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_4_4_1.aln
	 the 2nd reads: clpA_4_4_2.aln

  SAM Alignment File:
	clpA_4_4_.sam

TTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_217_4_
clpA_217_4_reference.fa
art_illumina -ss HS25 -sam -i clpA_217_4_reference.fa -p -l 76 -c 35 -m 200 -s 30 -o clpA_217_4_
['', 'clpA_157']
>clpA_217
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTATTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_157_4_
clpA_157_4_reference.fa
art_illumina -ss HS25 -sam -i clpA_157_4_reference.fa -p -l 76 -c 8 -m 200 -s 30 -o clpA_157_4_
['', 'clpA_4']
>clpA_217
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTATTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_4
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_4_4_
clpA_4_4_reference.fa
art_illumina -ss HS25 -sam -i clpA_4_4_reference.fa -p -l 76 -c 33 -m 200 -s 30 -o clpA_4_4_
['', 'clpA_130']
>clpA_217
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTATTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448156

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_130_4_1.fq
	 the 2nd reads: clpA_130_4_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_130_4_1.aln
	 the 2nd reads: clpA_130_4_2.aln

  SAM Alignment File:
	clpA_130_4_.sam

ATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_4
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_130
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCCCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGATAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_130_4_
clpA_130_4_reference.fa
art_illumina -ss HS25 -sam -i clpA_130_4_reference.fa -p -l 76 -c 36 -m 200 -s 30 -o clpA_130_4_
['', 'clpA_173']
>clpA_217
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTATTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_4
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_130
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCCCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448156

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_173_4_1.fq
	 the 2nd reads: clpA_173_4_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_173_4_1.aln
	 the 2nd reads: clpA_173_4_2.aln

  SAM Alignment File:
	clpA_173_4_.sam

GATTTTGATAAATGTAACAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGATAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_173
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAGGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAAATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_173_4_
clpA_173_4_reference.fa
art_illumina -ss HS25 -sam -i clpA_173_4_reference.fa -p -l 76 -c 27 -m 200 -s 30 -o clpA_173_4_
['', 'clpA_54']
>clpA_217
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTATTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_4
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_130
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCCCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGATAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_173
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAGGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAAATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_54
AAAAAAGAATTCATTATACCTGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448156

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_54_4_1.fq
	 the 2nd reads: clpA_54_4_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_54_4_1.aln
	 the 2nd reads: clpA_54_4_2.aln

  SAM Alignment File:
	clpA_54_4_.sam

GACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_54_4_
clpA_54_4_reference.fa
art_illumina -ss HS25 -sam -i clpA_54_4_reference.fa -p -l 76 -c 37 -m 200 -s 30 -o clpA_54_4_
['', 'clpA_146']
>clpA_217
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTATTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_4
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_130
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCCCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGATAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_173
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAGGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAAATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_54
AAAAAAGAATTCATTATACCTGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAG
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448156

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_146_4_1.fq
	 the 2nd reads: clpA_146_4_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_146_4_1.aln
	 the 2nd reads: clpA_146_4_2.aln

  SAM Alignment File:
	clpA_146_4_.sam

Settings:
  Output files: "ClpA_4_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_4.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 1013
Using parameters --bmax 760 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 760 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 505.75 (target: 759)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 641
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 642
Getting block 2 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 335
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 336
Getting block 3 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 436
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 437
Getting block 4 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 505
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 506
Getting block 5 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 516
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 517
Getting block 6 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 548
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 549
Getting block 7 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 323
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 324
Getting block 8 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 742
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 743
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1406
fchr[G]: 1760
fchr[T]: 2489
fchr[$]: 4053
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195901 bytes to primary EBWT file: ClpA_4_bowtie.1.ebwt
Wrote 512 bytes to secondary EBWT file: ClpA_4_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 4053
    bwtLen: 4054
    sz: 1014
    bwtSz: 1014
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 127
    offsSz: 508
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 10
    numSides: 20
    numLines: 20
    ebwtTotLen: 1280
    ebwtTotSz: 1280
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 1013
Using parameters --bmax 760 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 760 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 505.75 (target: 759)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 579
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 580
Getting block 2 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 399
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 400
Getting block 3 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 514
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 515
Getting block 4 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 359
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 360
Getting block 5 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 535
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 536
Getting block 6 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 719
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 720
Getting block 7 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 358
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 359
Getting block 8 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 583
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 584
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1406
fchr[G]: 1760
fchr[T]: 2489
fchr[$]: 4053
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195901 bytes to primary EBWT file: ClpA_4_bowtie.rev.1.ebwt
Wrote 512 bytes to secondary EBWT file: ClpA_4_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 4053
    bwtLen: 4054
    sz: 1014
    bwtSz: 1014
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 127
    offsSz: 508
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 10
    numSides: 20
    numLines: 20
    ebwtTotLen: 1280
    ebwtTotSz: 1280
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_4 done.

Mapping ClpA_4 sequence to ClpA_4 done.
length variant dictionary is: 7
length read dictionary is: 400
length k_j dictionary is: 400
length proportion dictionary is: 7
total sum is: 400.0
computing proportions of ClpA_4 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448157

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_36_5_1.fq
	 the 2nd reads: clpA_36_5_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_36_5_1.aln
	 the 2nd reads: clpA_36_5_2.aln

  SAM Alignment File:
	clpA_36_5_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448157

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_140_5_1.fq
	 the 2nd reads: clpA_140_5_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_140_5_1.aln
	 the 2nd reads: clpA_140_5_2.aln

  SAM Alignment File:
	clpA_140_5_.sam

TTAATAGATTATGTGTTTGTATTT
>clpA_146
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGAAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGAGAAAATGATGTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_146_4_
clpA_146_4_reference.fa
art_illumina -ss HS25 -sam -i clpA_146_4_reference.fa -p -l 76 -c 24 -m 200 -s 30 -o clpA_146_4_
bash temp.sh ClpA_4 ClpA_4
[35, 8, 33, 36, 27, 37, 24]
[u'>clpA_36\n', u'>clpA_140\n', u'>clpA_196\n', u'>clpA_171\n', u'>clpA_108\n', u'>clpA_199\n', u'>clpA_60\n']
['', 'clpA_36']
>clpA_36
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_36_5_
clpA_36_5_reference.fa
art_illumina -ss HS25 -sam -i clpA_36_5_reference.fa -p -l 76 -c 11 -m 200 -s 30 -o clpA_36_5_
['', 'clpA_140']
>clpA_36
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_140
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAGTGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_140_5_
clpA_140_5_reference.fa
art_illumina -ss HS25 -sam -i clpA_140_5_reference.fa -p -l 76 -c 27 -m 200 -s 30 -o clpA_140_5_
['', 'clpA_196']
>clpA_36
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_140
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAGTGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAGG
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448157

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_196_5_1.fq
	 the 2nd reads: clpA_196_5_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_196_5_1.aln
	 the 2nd reads: clpA_196_5_2.aln

  SAM Alignment File:
	clpA_196_5_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448157

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_171_5_1.fq
	 the 2nd reads: clpA_171_5_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_171_5_1.aln
	 the 2nd reads: clpA_171_5_2.aln

  SAM Alignment File:
	clpA_171_5_.sam

GGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_196
AAAAGAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTCATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_196_5_
clpA_196_5_reference.fa
art_illumina -ss HS25 -sam -i clpA_196_5_reference.fa -p -l 76 -c 23 -m 200 -s 30 -o clpA_196_5_
['', 'clpA_171']
>clpA_36
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_140
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAGTGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_196
AAAAGAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTCATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_171
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_171_5_
clpA_171_5_reference.fa
art_illumina -ss HS25 -sam -i clpA_171_5_reference.fa -p -l 76 -c 55 -m 200 -s 30 -o clpA_171_5_
['', 'clpA_108']
>clpA_36
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_140
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGC
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448158

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_108_5_1.fq
	 the 2nd reads: clpA_108_5_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_108_5_1.aln
	 the 2nd reads: clpA_108_5_2.aln

  SAM Alignment File:
	clpA_108_5_.sam

TTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAGTGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_196
AAAAGAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTCATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_171
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_108
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_108_5_
clpA_108_5_reference.fa
art_illumina -ss HS25 -sam -i clpA_108_5_reference.fa -p -l 76 -c 31 -m 200 -s 30 -o clpA_108_5_
['', 'clpA_199']
>clpA_36
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_140
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAGTGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_196
AAAAGAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTCATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448158

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_199_5_1.fq
	 the 2nd reads: clpA_199_5_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_199_5_1.aln
	 the 2nd reads: clpA_199_5_2.aln

  SAM Alignment File:
	clpA_199_5_.sam

TTTATTT
>clpA_171
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_108
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_199
AGGGAGCACATGATCATTGATGAAGAGCTTTTATCTGATTTGATATTAAACATAAAACTTTTAAGGATTAGATTTTTATTAAAAAATAACACTCTTGGTATTTTTATTTTAATGGGTTCCTCTGATATAAATAAGAGTAAACTTGTATCTATTTTATCAGAAGAGCTTAAGCTTCCTAAGCTTACTTTGGGAATGAGTGAGTATGGCGATTTTGATGGAATTAATCGATTAATAGGACCTGTATATGGAGCTGAGTTTTATGATGAACCTACTAAATTTTTTAAATTTTTGAGTAAATCATCAAGCTCAATTATTTTCCTAGCAGATTTTGACAAATCTCCAAAGAGAGTCATAGATTTTTTTTTTGAAGGATTTAATACTGGGAAACTTTTTGATAATTTTGGTAGAGGTGTGAGTTTGTCAGATAGTATAATAATAATGGATATTAATGTGGAACATGGAGAACTTAATGGTATTGGATTTAAAAATGAGACAGTAAATAGCAGGAACCTACTAGAAAAACGCTTTTCTAGTAGGTTCCTGGATTTAGTGGATCACATTTTTTTCTTT

clpA_199_5_
clpA_199_5_reference.fa
art_illumina -ss HS25 -sam -i clpA_199_5_reference.fa -p -l 76 -c 37 -m 200 -s 30 -o clpA_199_5_
['', 'clpA_60']
>clpA_36
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_140
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAGTGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_196
AAAAGAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTCATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_171
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGG
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448158

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_60_5_1.fq
	 the 2nd reads: clpA_60_5_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_60_5_1.aln
	 the 2nd reads: clpA_60_5_2.aln

  SAM Alignment File:
	clpA_60_5_.sam

Settings:
  Output files: "ClpA_5_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_5.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 1011
Using parameters --bmax 759 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 759 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 576.857 (target: 758)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 525
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 526
Getting block 2 of 7
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 640
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 641
Getting block 3 of 7
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 544
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 545
Getting block 4 of 7
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 548
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 549
Getting block 5 of 7
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 594
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 595
Getting block 6 of 7
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 640
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 641
Getting block 7 of 7
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 547
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 548
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1394
fchr[G]: 1758
fchr[T]: 2478
fchr[$]: 4044
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195902 bytes to primary EBWT file: ClpA_5_bowtie.1.ebwt
Wrote 512 bytes to secondary EBWT file: ClpA_5_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 4044
    bwtLen: 4045
    sz: 1011
    bwtSz: 1012
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 127
    offsSz: 508
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 10
    numSides: 20
    numLines: 20
    ebwtTotLen: 1280
    ebwtTotSz: 1280
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 1011
Using parameters --bmax 759 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 759 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 504.625 (target: 758)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 533
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 534
Getting block 2 of 8
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 704
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 705
Getting block 3 of 8
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 170
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 171
Getting block 4 of 8
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 724
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 725
Getting block 5 of 8
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 382
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 383
Getting block 6 of 8
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 704
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 705
Getting block 7 of 8
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 621
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 622
Getting block 8 of 8
  Reserving size (759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 199
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 200
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1394
fchr[G]: 1758
fchr[T]: 2478
fchr[$]: 4044
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195902 bytes to primary EBWT file: ClpA_5_bowtie.rev.1.ebwt
Wrote 512 bytes to secondary EBWT file: ClpA_5_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 4044
    bwtLen: 4045
    sz: 1011
    bwtSz: 1012
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 127
    offsSz: 508
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 10
    numSides: 20
    numLines: 20
    ebwtTotLen: 1280
    ebwtTotSz: 1280
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_5 done.

Mapping ClpA_5 sequence to ClpA_5 done.
length variant dictionary is: 7
length read dictionary is: 396
length k_j dictionary is: 396
length proportion dictionary is: 7
total sum is: 396.0
computing proportions of ClpA_5 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448159

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_14_6_1.fq
	 the 2nd reads: clpA_14_6_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_14_6_1.aln
	 the 2nd reads: clpA_14_6_2.aln

  SAM Alignment File:
	clpA_14_6_.sam

TCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_108
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_199
AGGGAGCACATGATCATTGATGAAGAGCTTTTATCTGATTTGATATTAAACATAAAACTTTTAAGGATTAGATTTTTATTAAAAAATAACACTCTTGGTATTTTTATTTTAATGGGTTCCTCTGATATAAATAAGAGTAAACTTGTATCTATTTTATCAGAAGAGCTTAAGCTTCCTAAGCTTACTTTGGGAATGAGTGAGTATGGCGATTTTGATGGAATTAATCGATTAATAGGACCTGTATATGGAGCTGAGTTTTATGATGAACCTACTAAATTTTTTAAATTTTTGAGTAAATCATCAAGCTCAATTATTTTCCTAGCAGATTTTGACAAATCTCCAAAGAGAGTCATAGATTTTTTTTTTGAAGGATTTAATACTGGGAAACTTTTTGATAATTTTGGTAGAGGTGTGAGTTTGTCAGATAGTATAATAATAATGGATATTAATGTGGAACATGGAGAACTTAATGGTATTGGATTTAAAAATGAGACAGTAAATAGCAGGAACCTACTAGAAAAACGCTTTTCTAGTAGGTTCCTGGATTTAGTGGATCACATTTTTTTCTTT
>clpA_60
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGCAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATACTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_60_5_
clpA_60_5_reference.fa
art_illumina -ss HS25 -sam -i clpA_60_5_reference.fa -p -l 76 -c 17 -m 200 -s 30 -o clpA_60_5_
bash temp.sh ClpA_5 ClpA_5
[11, 27, 23, 55, 31, 37, 17]
[u'>clpA_14\n', u'>clpA_157\n', u'>clpA_116\n', u'>clpA_49\n', u'>clpA_191\n']
['', 'clpA_14']
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_14_6_
clpA_14_6_reference.fa
art_illumina -ss HS25 -sam -i clpA_14_6_reference.fa -p -l 76 -c 20 -m 200 -s 30 -o clpA_14_6_
['', 'clpA_157']
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGC
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448159

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_157_6_1.fq
	 the 2nd reads: clpA_157_6_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_157_6_1.aln
	 the 2nd reads: clpA_157_6_2.aln

  SAM Alignment File:
	clpA_157_6_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448159

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_116_6_1.fq
	 the 2nd reads: clpA_116_6_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_116_6_1.aln
	 the 2nd reads: clpA_116_6_2.aln

  SAM Alignment File:
	clpA_116_6_.sam

CCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_157_6_
clpA_157_6_reference.fa
art_illumina -ss HS25 -sam -i clpA_157_6_reference.fa -p -l 76 -c 24 -m 200 -s 30 -o clpA_157_6_
['', 'clpA_116']
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_116
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGCTGAGAGCAACGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_116_6_
clpA_116_6_reference.fa
art_illumina -ss HS25 -sam -i clpA_116_6_reference.fa -p -l 76 -c 24 -m 200 -s 30 -o clpA_116_6_
['', 'clpA_49']
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_116
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGCTGAGAGCAACGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_49
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATGTTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAG
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448159

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_49_6_1.fq
	 the 2nd reads: clpA_49_6_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_49_6_1.aln
	 the 2nd reads: clpA_49_6_2.aln

  SAM Alignment File:
	clpA_49_6_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0.01

The random seed for the run: 1486448159

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_191_6_1.fq
	 the 2nd reads: clpA_191_6_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_191_6_1.aln
	 the 2nd reads: clpA_191_6_2.aln

  SAM Alignment File:
	clpA_191_6_.sam

Settings:
  Output files: "ClpA_6_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_6.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 723
Using parameters --bmax 543 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 543 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 361 (target: 542)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 362
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 363
Getting block 2 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 481
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 482
Getting block 3 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 178
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 179
Getting block 4 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 509
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 510
Getting block 5 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 328
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 329
Getting block 6 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 229
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 230
Getting block 7 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 531
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 532
Getting block 8 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 270
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 271
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1010
fchr[G]: 1258
fchr[T]: 1775
fchr[$]: 2895
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195468 bytes to primary EBWT file: ClpA_6_bowtie.1.ebwt
Wrote 368 bytes to secondary EBWT file: ClpA_6_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2895
    bwtLen: 2896
    sz: 724
    bwtSz: 724
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 91
    offsSz: 364
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 7
    numSides: 14
    numLines: 14
    ebwtTotLen: 896
    ebwtTotSz: 896
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 723
Using parameters --bmax 543 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 543 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 412.714 (target: 542)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 306
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 307
Getting block 2 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 415
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 416
Getting block 3 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 542
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 543
Getting block 4 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 439
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 440
Getting block 5 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 507
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 508
Getting block 6 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 286
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 287
Getting block 7 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 394
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 395
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1010
fchr[G]: 1258
fchr[T]: 1775
fchr[$]: 2895
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195468 bytes to primary EBWT file: ClpA_6_bowtie.rev.1.ebwt
Wrote 368 bytes to secondary EBWT file: ClpA_6_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2895
    bwtLen: 2896
    sz: 724
    bwtSz: 724
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 91
    offsSz: 364
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 7
    numSides: 14
    numLines: 14
    ebwtTotLen: 896
    ebwtTotSz: 896
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_6 done.

Mapping ClpA_6 sequence to ClpA_6 done.
length variant dictionary is: 5
length read dictionary is: 374
length k_j dictionary is: 374
length proportion dictionary is: 5
total sum is: 374.0
computing proportions of ClpA_6 done

CGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGTTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATATTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT

clpA_49_6_
clpA_49_6_reference.fa
art_illumina -ss HS25 -sam -i clpA_49_6_reference.fa -p -l 76 -c 10 -m 200 -s 30 -o clpA_49_6_
['', 'clpA_191']
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_116
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGCTGAGAGCAACGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_49
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATGTTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGTTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATATTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT
>clpA_191
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_191_6_
clpA_191_6_reference.fa
art_illumina -ss HS25 -sam -i clpA_191_6_reference.fa -p -l 76 -c 122 -m 200 -s 30 -o clpA_191_6_
bash temp.sh ClpA_6 ClpA_6
[20, 24, 24, 10, 122]
[u'>clpA_103\n', u'>clpA_159\n', u'>clpA_5\n', u'>clpA_149\n', u'>clpA_171\n', u'>clpA_117\n']
['', 'clpA_103']
>clpA_103
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448160

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_103_7_1.fq
	 the 2nd reads: clpA_103_7_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_103_7_1.aln
	 the 2nd reads: clpA_103_7_2.aln

  SAM Alignment File:
	clpA_103_7_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448160

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_159_7_1.fq
	 the 2nd reads: clpA_159_7_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_159_7_1.aln
	 the 2nd reads: clpA_159_7_2.aln

  SAM Alignment File:
	clpA_159_7_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448160

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_5_7_1.fq
	 the 2nd reads: clpA_5_7_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_5_7_1.aln
	 the 2nd reads: clpA_5_7_2.aln

  SAM Alignment File:
	clpA_5_7_.sam

TCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAAAGAAAAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_103_7_
clpA_103_7_reference.fa
art_illumina -ss HS25 -sam -i clpA_103_7_reference.fa -p -l 76 -c 4 -m 200 -s 30 -o clpA_103_7_
['', 'clpA_159']
>clpA_103
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAAAGAAAAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_159
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGACGGATATTTTAGCAGAAGAGTTTAGAATTCCTAAATTTAGCATTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTCAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_159_7_
clpA_159_7_reference.fa
art_illumina -ss HS25 -sam -i clpA_159_7_reference.fa -p -l 76 -c 20 -m 200 -s 30 -o clpA_159_7_
['', 'clpA_5']
>clpA_103
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAAAGAAAAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_159
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGACGGATATTTTAGCAGAAGAGTTTAGAATTCCTAAATTTAGCATTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTCAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_5
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_5_7_
clpA_5_7_reference.fa
art_illumina -ss HS25 -sam -i clpA_5_7_reference.fa -p -l 76 -c 48 -m 200 -s 30 -o clpA_5_7_
['', 'clpA_149']
>clpA_103
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448160

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_149_7_1.fq
	 the 2nd reads: clpA_149_7_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_149_7_1.aln
	 the 2nd reads: clpA_149_7_2.aln

  SAM Alignment File:
	clpA_149_7_.sam

AATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAAAGAAAAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_159
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGACGGATATTTTAGCAGAAGAGTTTAGAATTCCTAAATTTAGCATTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTCAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_5
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_149
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCCTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAGTGAAGGGTATTATAAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAAGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_149_7_
clpA_149_7_reference.fa
art_illumina -ss HS25 -sam -i clpA_149_7_reference.fa -p -l 76 -c 25 -m 200 -s 30 -o clpA_149_7_
['', 'clpA_171']
>clpA_103
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAAAGAAAAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_159
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGACGGATATTTTAGCAGAAGAGTTTAGAATTCCTAAATTTAGCATTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTCAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_5
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_149
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCCTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAGTGAAG
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448160

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_171_7_1.fq
	 the 2nd reads: clpA_171_7_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_171_7_1.aln
	 the 2nd reads: clpA_171_7_2.aln

  SAM Alignment File:
	clpA_171_7_.sam

GGTATTATAAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAAGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_171
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_171_7_
clpA_171_7_reference.fa
art_illumina -ss HS25 -sam -i clpA_171_7_reference.fa -p -l 76 -c 61 -m 200 -s 30 -o clpA_171_7_
['', 'clpA_117']
>clpA_103
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAAAGAAAAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_159
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGACGGATATTTTAGCAGAAGAGTTTAGAATTCCTAAATTTAGCATTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTCAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_5
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_149
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCCTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAGTGAAGGGTATTATAAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAAGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_171
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_117
AAAAAGGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448160

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_117_7_1.fq
	 the 2nd reads: clpA_117_7_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_117_7_1.aln
	 the 2nd reads: clpA_117_7_2.aln

  SAM Alignment File:
	clpA_117_7_.sam

Settings:
  Output files: "ClpA_7_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_7.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 868
Using parameters --bmax 651 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 651 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 433.375 (target: 650)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 442
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 443
Getting block 2 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 553
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 554
Getting block 3 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 232
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 233
Getting block 4 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 601
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 602
Getting block 5 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 574
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 575
Getting block 6 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 167
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 168
Getting block 7 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 498
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 499
Getting block 8 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 400
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 401
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1215
fchr[G]: 1517
fchr[T]: 2132
fchr[$]: 3474
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195621 bytes to primary EBWT file: ClpA_7_bowtie.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_7_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3474
    bwtLen: 3475
    sz: 869
    bwtSz: 869
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 868
Using parameters --bmax 651 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 651 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 433.375 (target: 650)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 374
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 375
Getting block 2 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 486
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 487
Getting block 3 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 373
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 374
Getting block 4 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 325
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 326
Getting block 5 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 483
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 484
Getting block 6 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 649
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 650
Getting block 7 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 310
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 311
Getting block 8 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 467
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 468
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1215
fchr[G]: 1517
fchr[T]: 2132
fchr[$]: 3474
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195621 bytes to primary EBWT file: ClpA_7_bowtie.rev.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_7_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3474
    bwtLen: 3475
    sz: 869
    bwtSz: 869
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:01
Building index for ClpA_7 done.

Mapping ClpA_7 sequence to ClpA_7 done.
length variant dictionary is: 6
length read dictionary is: 386
length k_j dictionary is: 386
length proportion dictionary is: 6
total sum is: 386.0
computing proportions of ClpA_7 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448161

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_96_8_1.fq
	 the 2nd reads: clpA_96_8_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_96_8_1.aln
	 the 2nd reads: clpA_96_8_2.aln

  SAM Alignment File:
	clpA_96_8_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448161

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_14_8_1.fq
	 the 2nd reads: clpA_14_8_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_14_8_1.aln
	 the 2nd reads: clpA_14_8_2.aln

  SAM Alignment File:
	clpA_14_8_.sam

TGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCCTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_117_7_
clpA_117_7_reference.fa
art_illumina -ss HS25 -sam -i clpA_117_7_reference.fa -p -l 76 -c 41 -m 200 -s 30 -o clpA_117_7_
bash temp.sh ClpA_7 ClpA_7
[4, 20, 48, 25, 61, 41]
[u'>clpA_96\n', u'>clpA_14\n', u'>clpA_8\n']
['', 'clpA_96']
>clpA_96
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTGTTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATGTTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT

clpA_96_8_
clpA_96_8_reference.fa
art_illumina -ss HS25 -sam -i clpA_96_8_reference.fa -p -l 76 -c 54 -m 200 -s 30 -o clpA_96_8_
['', 'clpA_14']
>clpA_96
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTGTTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATGTTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_14_8_
clpA_14_8_reference.fa
art_illumina -ss HS25 -sam -i clpA_14_8_reference.fa -p -l 76 -c 51 -m 200 -s 30 -o clpA_14_8_
['', 'clpA_8']
>clpA_96
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTGTTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATGTTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_8
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0.01

The random seed for the run: 1486448161

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_8_8_1.fq
	 the 2nd reads: clpA_8_8_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_8_8_1.aln
	 the 2nd reads: clpA_8_8_2.aln

  SAM Alignment File:
	clpA_8_8_.sam

Settings:
  Output files: "ClpA_8_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_8.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 434
Using parameters --bmax 326 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 326 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 288.667 (target: 325)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 6
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 279
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 280
Getting block 2 of 6
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 323
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 324
Getting block 3 of 6
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 290
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 291
Getting block 4 of 6
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 236
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 237
Getting block 5 of 6
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 284
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 285
Getting block 6 of 6
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 320
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 321
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 604
fchr[G]: 748
fchr[T]: 1067
fchr[$]: 1737
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195032 bytes to primary EBWT file: ClpA_8_bowtie.1.ebwt
Wrote 224 bytes to secondary EBWT file: ClpA_8_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1737
    bwtLen: 1738
    sz: 435
    bwtSz: 435
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 55
    offsSz: 220
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 4
    numSides: 8
    numLines: 8
    ebwtTotLen: 512
    ebwtTotSz: 512
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 434
Using parameters --bmax 326 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 326 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 216.25 (target: 325)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 188
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 189
Getting block 2 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 253
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 254
Getting block 3 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 194
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 195
Getting block 4 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 300
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 301
Getting block 5 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 83
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 84
Getting block 6 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 303
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 304
Getting block 7 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 157
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 158
Getting block 8 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 252
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 253
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 604
fchr[G]: 748
fchr[T]: 1067
fchr[$]: 1737
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195032 bytes to primary EBWT file: ClpA_8_bowtie.rev.1.ebwt
Wrote 224 bytes to secondary EBWT file: ClpA_8_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1737
    bwtLen: 1738
    sz: 435
    bwtSz: 435
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 55
    offsSz: 220
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 4
    numSides: 8
    numLines: 8
    ebwtTotLen: 512
    ebwtTotSz: 512
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_8 done.

Mapping ClpA_8 sequence to ClpA_8 done.
length variant dictionary is: 3
length read dictionary is: 370
length k_j dictionary is: 370
length proportion dictionary is: 3
total sum is: 370.0
computing proportions of ClpA_8 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448162

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_155_9_1.fq
	 the 2nd reads: clpA_155_9_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_155_9_1.aln
	 the 2nd reads: clpA_155_9_2.aln

  SAM Alignment File:
	clpA_155_9_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448162

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_181_9_1.fq
	 the 2nd reads: clpA_181_9_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_181_9_1.aln
	 the 2nd reads: clpA_181_9_2.aln

  SAM Alignment File:
	clpA_181_9_.sam

ATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_8_8_
clpA_8_8_reference.fa
art_illumina -ss HS25 -sam -i clpA_8_8_reference.fa -p -l 76 -c 93 -m 200 -s 30 -o clpA_8_8_
bash temp.sh ClpA_8 ClpA_8
[54, 51, 93]
[u'>clpA_155\n', u'>clpA_181\n', u'>clpA_76\n', u'>clpA_124\n', u'>clpA_188\n', u'>clpA_49\n', u'>clpA_63\n']
['', 'clpA_155']
>clpA_155
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_155_9_
clpA_155_9_reference.fa
art_illumina -ss HS25 -sam -i clpA_155_9_reference.fa -p -l 76 -c 51 -m 200 -s 30 -o clpA_155_9_
['', 'clpA_181']
>clpA_155
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_181
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGATTTTGGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_181_9_
clpA_181_9_reference.fa
art_illumina -ss HS25 -sam -i clpA_181_9_reference.fa -p -l 76 -c 3 -m 200 -s 30 -o clpA_181_9_
['', 'clpA_76']
>clpA_155
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_181
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGATTTTGGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_76
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448162

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_76_9_1.fq
	 the 2nd reads: clpA_76_9_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_76_9_1.aln
	 the 2nd reads: clpA_76_9_2.aln

  SAM Alignment File:
	clpA_76_9_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448162

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_124_9_1.fq
	 the 2nd reads: clpA_124_9_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_124_9_1.aln
	 the 2nd reads: clpA_124_9_2.aln

  SAM Alignment File:
	clpA_124_9_.sam

AAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTACATTTAATAGATCATGTGTTTGTATTT

clpA_76_9_
clpA_76_9_reference.fa
art_illumina -ss HS25 -sam -i clpA_76_9_reference.fa -p -l 76 -c 12 -m 200 -s 30 -o clpA_76_9_
['', 'clpA_124']
>clpA_155
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_181
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGATTTTGGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_76
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTACATTTAATAGATCATGTGTTTGTATTT
>clpA_124
AAAAAAGAACTTATTATACATGATAACTTGATATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGCTGACAGATATTTTGTCACAAGAGCTTAGAATTCCAAAGTTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGCAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGACAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAAGGGTTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAGTGTGAGTTTATCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGTGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTATTTGTATTT

clpA_124_9_
clpA_124_9_reference.fa
art_illumina -ss HS25 -sam -i clpA_124_9_reference.fa -p -l 76 -c 20 -m 200 -s 30 -o clpA_124_9_
['', 'clpA_188']
>clpA_155
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_181
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTTCTAT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448162

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_188_9_1.fq
	 the 2nd reads: clpA_188_9_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_188_9_1.aln
	 the 2nd reads: clpA_188_9_2.aln

  SAM Alignment File:
	clpA_188_9_.sam

CAGATTTTGATAAATGTAATAAAAGGATTTTGGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_76
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTACATTTAATAGATCATGTGTTTGTATTT
>clpA_124
AAAAAAGAACTTATTATACATGATAACTTGATATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGCTGACAGATATTTTGTCACAAGAGCTTAGAATTCCAAAGTTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGCAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGACAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAAGGGTTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAGTGTGAGTTTATCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGTGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTATTTGTATTT
>clpA_188
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATATTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_188_9_
clpA_188_9_reference.fa
art_illumina -ss HS25 -sam -i clpA_188_9_reference.fa -p -l 76 -c 50 -m 200 -s 30 -o clpA_188_9_
['', 'clpA_49']
>clpA_155
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_181
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGATTTTGGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_76
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTACATTTAATAGATCATGTGTTTGTATTT
>clpA_124
AAAAAAGAACTTATTATACATGATAACTTGATATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448162

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_49_9_1.fq
	 the 2nd reads: clpA_49_9_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_49_9_1.aln
	 the 2nd reads: clpA_49_9_2.aln

  SAM Alignment File:
	clpA_49_9_.sam

GCTGACAGATATTTTGTCACAAGAGCTTAGAATTCCAAAGTTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGCAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGACAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAAGGGTTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAGTGTGAGTTTATCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGTGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTATTTGTATTT
>clpA_188
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATATTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_49
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATGTTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGTTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATATTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT

clpA_49_9_
clpA_49_9_reference.fa
art_illumina -ss HS25 -sam -i clpA_49_9_reference.fa -p -l 76 -c 30 -m 200 -s 30 -o clpA_49_9_
['', 'clpA_63']
>clpA_155
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_181
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGATTTTGGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_76
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTACATTTAATAGATCATGTGTTTGTATTT
>clpA_124
AAAAAAGAACTTATTATACATGATAACTTGATATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGCTGACAGATATTTTGTCACAAGAGCTTAGAATTCCAAAGTTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGCAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGACAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAAGGGTTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAGTGTGAGTTTATCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGTGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448162

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_63_9_1.fq
	 the 2nd reads: clpA_63_9_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_63_9_1.aln
	 the 2nd reads: clpA_63_9_2.aln

  SAM Alignment File:
	clpA_63_9_.sam

Settings:
  Output files: "ClpA_9_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_9.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 1013
Using parameters --bmax 760 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 760 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 578.143 (target: 759)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 704
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 705
Getting block 2 of 7
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 679
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 680
Getting block 3 of 7
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 429
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 430
Getting block 4 of 7
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 578
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 579
Getting block 5 of 7
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 589
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 590
Getting block 6 of 7
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 627
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 628
Getting block 7 of 7
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 441
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 442
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1385
fchr[G]: 1727
fchr[T]: 2471
fchr[$]: 4053
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195901 bytes to primary EBWT file: ClpA_9_bowtie.1.ebwt
Wrote 512 bytes to secondary EBWT file: ClpA_9_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 4053
    bwtLen: 4054
    sz: 1014
    bwtSz: 1014
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 127
    offsSz: 508
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 10
    numSides: 20
    numLines: 20
    ebwtTotLen: 1280
    ebwtTotSz: 1280
    reverse: 0
Total time for call to driver() for forward index: 00:00:01
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 1013
Using parameters --bmax 760 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 760 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 505.75 (target: 759)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 566
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 567
Getting block 2 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 414
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 415
Getting block 3 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 480
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 481
Getting block 4 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 453
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 454
Getting block 5 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 431
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 432
Getting block 6 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 733
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 734
Getting block 7 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 425
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 426
Getting block 8 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 544
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 545
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1385
fchr[G]: 1727
fchr[T]: 2471
fchr[$]: 4053
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195901 bytes to primary EBWT file: ClpA_9_bowtie.rev.1.ebwt
Wrote 512 bytes to secondary EBWT file: ClpA_9_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 4053
    bwtLen: 4054
    sz: 1014
    bwtSz: 1014
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 127
    offsSz: 508
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 10
    numSides: 20
    numLines: 20
    ebwtTotLen: 1280
    ebwtTotSz: 1280
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_9 done.

Mapping ClpA_9 sequence to ClpA_9 done.
length variant dictionary is: 7
length read dictionary is: 386
length k_j dictionary is: 386
length proportion dictionary is: 7
total sum is: 386.0
computing proportions of ClpA_9 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448163

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_33_10_1.fq
	 the 2nd reads: clpA_33_10_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_33_10_1.aln
	 the 2nd reads: clpA_33_10_2.aln

  SAM Alignment File:
	clpA_33_10_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448163

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_100_10_1.fq
	 the 2nd reads: clpA_100_10_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_100_10_1.aln
	 the 2nd reads: clpA_100_10_2.aln

  SAM Alignment File:
	clpA_100_10_.sam

GAGTTAATAGATCATGTATTTGTATTT
>clpA_188
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATATTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_49
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATGTTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGTTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATATTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT
>clpA_63
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATACAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGATTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_63_9_
clpA_63_9_reference.fa
art_illumina -ss HS25 -sam -i clpA_63_9_reference.fa -p -l 76 -c 33 -m 200 -s 30 -o clpA_63_9_
bash temp.sh ClpA_9 ClpA_9
[51, 3, 12, 20, 50, 30, 33]
[u'>clpA_33\n', u'>clpA_100\n']
['', 'clpA_33']
>clpA_33
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAAATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_33_10_
clpA_33_10_reference.fa
art_illumina -ss HS25 -sam -i clpA_33_10_reference.fa -p -l 76 -c 97 -m 200 -s 30 -o clpA_33_10_
['', 'clpA_100']
>clpA_33
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAAATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_100
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGAATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT

clpA_100_10_
clpA_100_10_reference.fa
art_illumina -ss HS25 -sam -i clpA_100_10_reference.fa -p -l 76 -c 101 -m 200 -s 30 -o clpA_100_10_
bash tempSettings:
  Output files: "ClpA_10_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_10.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 289
Using parameters --bmax 217 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 217 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 143.875 (target: 216)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 183
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 184
Getting block 2 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 104
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 105
Getting block 3 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 114
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 115
Getting block 4 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 172
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 173
Getting block 5 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 190
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 191
Getting block 6 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 81
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 82
Getting block 7 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 193
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 194
Getting block 8 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 114
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 115
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 400
fchr[G]: 492
fchr[T]: 703
fchr[$]: 1158
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194882 bytes to primary EBWT file: ClpA_10_bowtie.1.ebwt
Wrote 152 bytes to secondary EBWT file: ClpA_10_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1158
    bwtLen: 1159
    sz: 290
    bwtSz: 290
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 37
    offsSz: 148
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 3
    numSides: 6
    numLines: 6
    ebwtTotLen: 384
    ebwtTotSz: 384
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 289
Using parameters --bmax 217 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 217 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 143.875 (target: 216)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 116
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 117
Getting block 2 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 176
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 177
Getting block 3 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 124
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 125
Getting block 4 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 199
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 200
Getting block 5 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 50
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 51
Getting block 6 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 203
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 204
Getting block 7 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 91
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 92
Getting block 8 of 8
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 192
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 193
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 400
fchr[G]: 492
fchr[T]: 703
fchr[$]: 1158
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194882 bytes to primary EBWT file: ClpA_10_bowtie.rev.1.ebwt
Wrote 152 bytes to secondary EBWT file: ClpA_10_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1158
    bwtLen: 1159
    sz: 290
    bwtSz: 290
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 37
    offsSz: 148
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 3
    numSides: 6
    numLines: 6
    ebwtTotLen: 384
    ebwtTotSz: 384
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_10 done.

Mapping ClpA_10 sequence to ClpA_10 done.
length variant dictionary is: 2
length read dictionary is: 364
length k_j dictionary is: 364
length proportion dictionary is: 2
total sum is: 364.0
computing proportions of ClpA_10 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448165

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_176_11_1.fq
	 the 2nd reads: clpA_176_11_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_176_11_1.aln
	 the 2nd reads: clpA_176_11_2.aln

  SAM Alignment File:
	clpA_176_11_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448165

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_115_11_1.fq
	 the 2nd reads: clpA_115_11_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_115_11_1.aln
	 the 2nd reads: clpA_115_11_2.aln

  SAM Alignment File:
	clpA_115_11_.sam

.sh ClpA_10 ClpA_10
[97, 101]
[u'>clpA_176\n', u'>clpA_115\n', u'>clpA_78\n', u'>clpA_218\n', u'>clpA_62\n', u'>clpA_63\n', u'>clpA_135\n']
['', 'clpA_176']
>clpA_176
AAAAAAGAACTTATTATAAACGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTGTTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGGGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGGTATTATGAATCTACTGGATTTTTTGAATTTTTGAACAAATCTTCCAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTGGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCGGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGTCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCGGGGGTAAATGATTTTAACTTTATATTAGAGAAGAGATTGCCTAATGAATTTTTAGAGTTAATAGATCATGTATTTGTATTT

clpA_176_11_
clpA_176_11_reference.fa
art_illumina -ss HS25 -sam -i clpA_176_11_reference.fa -p -l 76 -c 26 -m 200 -s 30 -o clpA_176_11_
['', 'clpA_115']
>clpA_176
AAAAAAGAACTTATTATAAACGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTGTTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGGGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGGTATTATGAATCTACTGGATTTTTTGAATTTTTGAACAAATCTTCCAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTGGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCGGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGTCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCGGGGGTAAATGATTTTAACTTTATATTAGAGAAGAGATTGCCTAATGAATTTTTAGAGTTAATAGATCATGTATTTGTATTT
>clpA_115
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAACGACTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_115_11_
clpA_115_11_reference.fa
art_illumina -ss HS25 -sam -i clpA_115_11_reference.fa -p -l 76 -c 42 -m 200 -s 30 -o clpA_115_11_
['', 'clpA_78']
>clpA_176
AAAAAAGAACTTATTATAAACGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTGTTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGGGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGGTATTATGAATCTACTGGATTTTTTGAATTTTTGAACAAATCTTCCAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTGGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCGGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGTCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCGGGGGTAAATGATTTTAACTTTATATTAGAGAAGAGATTGCCTAATGAATTTTTAGAGTTAATAGATCATGTATTTGTATTT
>clpA_115
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAACGACTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_78
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTGTTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCAATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT

clpA_78_11_
clpA_78_11_reference.fa
art_illumina -ss HS25 -sam -i clpA_78_11_reference.fa 
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448165

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_78_11_1.fq
	 the 2nd reads: clpA_78_11_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_78_11_1.aln
	 the 2nd reads: clpA_78_11_2.aln

  SAM Alignment File:
	clpA_78_11_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448165

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_218_11_1.fq
	 the 2nd reads: clpA_218_11_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_218_11_1.aln
	 the 2nd reads: clpA_218_11_2.aln

  SAM Alignment File:
	clpA_218_11_.sam

-p -l 76 -c 7 -m 200 -s 30 -o clpA_78_11_
['', 'clpA_218']
>clpA_176
AAAAAAGAACTTATTATAAACGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTGTTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGGGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGGTATTATGAATCTACTGGATTTTTTGAATTTTTGAACAAATCTTCCAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTGGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCGGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGTCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCGGGGGTAAATGATTTTAACTTTATATTAGAGAAGAGATTGCCTAATGAATTTTTAGAGTTAATAGATCATGTATTTGTATTT
>clpA_115
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAACGACTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_78
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTGTTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCAATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_218
AAAAAAGAACTTATTGTACATGATGGCTTGATATTTGATTTGATATTAAATATTAAATTGTTAAAATTTAATTTGCTTGCCAACAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCAGGAAAATGTAAATTAACAGATATTTTATCAGAAGAGTTTGGAATTCCGAAATTTACTCTTAATATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAGTAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCGGAAAGCTTAATAATAATAAGTATTAATGCTAAGAACAAAGAGCTTAATAGTATTGGTTTTAAAAATAAAATGGCAGAGGGAAATGATTTTAACCTTATATTAGAGAAGAGATTCCCTAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_218_11_
clpA_218_11_reference.fa
art_illumina -ss HS25 -sam -i clpA_218_11_reference.fa -p -l 76 -c 37 -m 200 -s 30 -o clpA_218_11_
['', 'clpA_62']
>clpA_176
AAAAAAGAACTTATTATAAACGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTGTTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGGGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGGTATTATGAATCTACTGGATTTTTTGAATTTTTGAACAAATCTTCCAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTGGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCGGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGTCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCGGGGGTAAATGATTTTAACTTTATATTAGAGAAGAGATTGCCTAATGAATTTTTAGAGTTAATAGATCATGTATTTGTATTT
>clpA_115
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAACGACTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_78
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTGTTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCAATCATTTTTTTATCAGATTTTGATAA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448165

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_62_11_1.fq
	 the 2nd reads: clpA_62_11_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_62_11_1.aln
	 the 2nd reads: clpA_62_11_2.aln

  SAM Alignment File:
	clpA_62_11_.sam

ATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_218
AAAAAAGAACTTATTGTACATGATGGCTTGATATTTGATTTGATATTAAATATTAAATTGTTAAAATTTAATTTGCTTGCCAACAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCAGGAAAATGTAAATTAACAGATATTTTATCAGAAGAGTTTGGAATTCCGAAATTTACTCTTAATATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAGTAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCGGAAAGCTTAATAATAATAAGTATTAATGCTAAGAACAAAGAGCTTAATAGTATTGGTTTTAAAAATAAAATGGCAGAGGGAAATGATTTTAACCTTATATTAGAGAAGAGATTCCCTAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_62
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGCACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATACAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_62_11_
clpA_62_11_reference.fa
art_illumina -ss HS25 -sam -i clpA_62_11_reference.fa -p -l 76 -c 27 -m 200 -s 30 -o clpA_62_11_
['', 'clpA_63']
>clpA_176
AAAAAAGAACTTATTATAAACGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTGTTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGGGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGGTATTATGAATCTACTGGATTTTTTGAATTTTTGAACAAATCTTCCAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTGGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCGGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGTCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCGGGGGTAAATGATTTTAACTTTATATTAGAGAAGAGATTGCCTAATGAATTTTTAGAGTTAATAGATCATGTATTTGTATTT
>clpA_115
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAACGACTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_78
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTGTTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCAATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_218
AAAAAAGAACTTATTGTACATGATGGCTTGATATTTGATTTGATATTAAATATTAAATTGTTAAAATTTAATTTGCTTGCCAACAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCAGGAAAATGTAAATTAACAGATATTTTATCAGAAGAGTTTGGAATTCCGAAATTTACTCTTAATATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAGTAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCGGAAAGCTTAATAATAATAAGTATTAATGCTAAGAACAAAGAGCTTAATAGTATTGGTTTTAAAAATAAAATGGCAGAGGGAAATGATTTTAACCTTATATTAGAGAAGAGATTCCCTAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_62
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGCACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATACAAATTGACGGATATTT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448165

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_63_11_1.fq
	 the 2nd reads: clpA_63_11_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_63_11_1.aln
	 the 2nd reads: clpA_63_11_2.aln

  SAM Alignment File:
	clpA_63_11_.sam

TATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_63
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATACAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGATTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_63_11_
clpA_63_11_reference.fa
art_illumina -ss HS25 -sam -i clpA_63_11_reference.fa -p -l 76 -c 48 -m 200 -s 30 -o clpA_63_11_
['', 'clpA_135']
>clpA_176
AAAAAAGAACTTATTATAAACGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTGTTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGGGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGGTATTATGAATCTACTGGATTTTTTGAATTTTTGAACAAATCTTCCAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTGGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCGGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGTCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCGGGGGTAAATGATTTTAACTTTATATTAGAGAAGAGATTGCCTAATGAATTTTTAGAGTTAATAGATCATGTATTTGTATTT
>clpA_115
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAACGACTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_78
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTGTTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCAATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_218
AAAAAAGAACTTATTGTACATGATGGCTTGATATTTGATTTGATATTAAATATTAAATTGTTAAAATTTAATTTGCTTGCCAACAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCAGGAAAATGTAAATTAACAGATATTTTATCAGAAGAGTTTGGAATTCCGAAATTTACTCTTAATATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAGTAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCGGAAAGCTTAATAATAATAAGTATTAATGCTAAGAACAAAGAGCTTAATAGTATTGGTTTTAAAAATAAAATGGCAGAGGGAAATGATTTTAACCTTATATTAGAGAAGAGATTCCCTAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_62
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGCACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATACAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAG
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448165

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_135_11_1.fq
	 the 2nd reads: clpA_135_11_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_135_11_1.aln
	 the 2nd reads: clpA_135_11_2.aln

  SAM Alignment File:
	clpA_135_11_.sam

Settings:
  Output files: "ClpA_11_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_11.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 1013
Using parameters --bmax 760 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 760 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 674.667 (target: 759)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 6
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 618
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 619
Getting block 2 of 6
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 755
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 756
Getting block 3 of 6
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 647
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 648
Getting block 4 of 6
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 577
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 578
Getting block 5 of 6
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 711
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 712
Getting block 6 of 6
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 740
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 741
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1375
fchr[G]: 1725
fchr[T]: 2481
fchr[$]: 4053
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195901 bytes to primary EBWT file: ClpA_11_bowtie.1.ebwt
Wrote 512 bytes to secondary EBWT file: ClpA_11_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 4053
    bwtLen: 4054
    sz: 1014
    bwtSz: 1014
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 127
    offsSz: 508
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 10
    numSides: 20
    numLines: 20
    ebwtTotLen: 1280
    ebwtTotSz: 1280
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 1013
Using parameters --bmax 760 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 760 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 505.75 (target: 759)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 561
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 562
Getting block 2 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 395
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 396
Getting block 3 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 494
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 495
Getting block 4 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 456
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 457
Getting block 5 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 464
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 465
Getting block 6 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 722
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 723
Getting block 7 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 423
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 424
Getting block 8 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 531
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 532
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1375
fchr[G]: 1725
fchr[T]: 2481
fchr[$]: 4053
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195901 bytes to primary EBWT file: ClpA_11_bowtie.rev.1.ebwt
Wrote 512 bytes to secondary EBWT file: ClpA_11_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 4053
    bwtLen: 4054
    sz: 1014
    bwtSz: 1014
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 127
    offsSz: 508
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 10
    numSides: 20
    numLines: 20
    ebwtTotLen: 1280
    ebwtTotSz: 1280
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_11 done.

Mapping ClpA_11 sequence to ClpA_11 done.
length variant dictionary is: 7
length read dictionary is: 394
length k_j dictionary is: 394
length proportion dictionary is: 7
total sum is: 394.0
computing proportions of ClpA_11 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448166

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_198_12_1.fq
	 the 2nd reads: clpA_198_12_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_198_12_1.aln
	 the 2nd reads: clpA_198_12_2.aln

  SAM Alignment File:
	clpA_198_12_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448166

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_96_12_1.fq
	 the 2nd reads: clpA_96_12_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_96_12_1.aln
	 the 2nd reads: clpA_96_12_2.aln

  SAM Alignment File:
	clpA_96_12_.sam

ATTATGTTCTTTTATTT
>clpA_63
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATACAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGATTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_135
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGTCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGAAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_135_11_
clpA_135_11_reference.fa
art_illumina -ss HS25 -sam -i clpA_135_11_reference.fa -p -l 76 -c 14 -m 200 -s 30 -o clpA_135_11_
bash temp.sh ClpA_11 ClpA_11
[26, 42, 7, 37, 27, 48, 14]
[u'>clpA_198\n', u'>clpA_96\n', u'>clpA_196\n', u'>clpA_107\n', u'>clpA_10\n', u'>clpA_142\n']
['', 'clpA_198']
>clpA_198
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTGTTT

clpA_198_12_
clpA_198_12_reference.fa
art_illumina -ss HS25 -sam -i clpA_198_12_reference.fa -p -l 76 -c 49 -m 200 -s 30 -o clpA_198_12_
['', 'clpA_96']
>clpA_198
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTGTTT
>clpA_96
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTGTTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATGTTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT

clpA_96_12_
clpA_96_12_reference.fa
art_illumina -ss HS25 -sam -i clpA_96_12_reference.fa -p -l 76 -c 2 -m 200 -s 30 -o clpA_96_12_
['', 'clpA_196']
>clpA_198
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448166

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_196_12_1.fq
	 the 2nd reads: clpA_196_12_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_196_12_1.aln
	 the 2nd reads: clpA_196_12_2.aln

  SAM Alignment File:
	clpA_196_12_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448166

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_107_12_1.fq
	 the 2nd reads: clpA_107_12_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_107_12_1.aln
	 the 2nd reads: clpA_107_12_2.aln

  SAM Alignment File:
	clpA_107_12_.sam

TTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTGTTT
>clpA_96
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTGTTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATGTTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT
>clpA_196
AAAAGAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTCATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_196_12_
clpA_196_12_reference.fa
art_illumina -ss HS25 -sam -i clpA_196_12_reference.fa -p -l 76 -c 57 -m 200 -s 30 -o clpA_196_12_
['', 'clpA_107']
>clpA_198
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTGTTT
>clpA_96
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTGTTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATGTTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT
>clpA_196
AAAAGAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTCATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_107
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_107_12_
clpA_107_12_reference.fa
art_illumina -ss HS25 -sam -i clpA_107_12_reference.fa -p -l 76 -c 27 -m 200 -s 30 -o clpA_107_12_
['', 'clpA_10']
>clpA_198
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448166

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_10_12_1.fq
	 the 2nd reads: clpA_10_12_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_10_12_1.aln
	 the 2nd reads: clpA_10_12_2.aln

  SAM Alignment File:
	clpA_10_12_.sam

AAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTGTTT
>clpA_96
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTGTTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATGTTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT
>clpA_196
AAAAGAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTCATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_107
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_10
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGACAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_10_12_
clpA_10_12_reference.fa
art_illumina -ss HS25 -sam -i clpA_10_12_reference.fa -p -l 76 -c 47 -m 200 -s 30 -o clpA_10_12_
['', 'clpA_142']
>clpA_198
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTGTTT
>clpA_96
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTGTTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATGTTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448166

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_142_12_1.fq
	 the 2nd reads: clpA_142_12_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_142_12_1.aln
	 the 2nd reads: clpA_142_12_2.aln

  SAM Alignment File:
	clpA_142_12_.sam

Settings:
  Output files: "ClpA_12_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_12.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 868
Using parameters --bmax 651 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 651 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 578.167 (target: 650)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 568
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 569
Getting block 2 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 647
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 648
Getting block 3 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 617
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 618
Getting block 4 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 597
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 598
Getting block 5 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 398
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 399
Getting block 6 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 642
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 643
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1205
fchr[G]: 1503
fchr[T]: 2129
fchr[$]: 3474
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195621 bytes to primary EBWT file: ClpA_12_bowtie.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_12_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3474
    bwtLen: 3475
    sz: 869
    bwtSz: 869
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 868
Using parameters --bmax 651 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 651 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 433.375 (target: 650)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 365
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 366
Getting block 2 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 494
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 495
Getting block 3 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 357
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 358
Getting block 4 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 321
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 322
Getting block 5 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 498
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 499
Getting block 6 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 614
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 615
Getting block 7 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 352
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 353
Getting block 8 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 466
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 467
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1205
fchr[G]: 1503
fchr[T]: 2129
fchr[$]: 3474
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195621 bytes to primary EBWT file: ClpA_12_bowtie.rev.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_12_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3474
    bwtLen: 3475
    sz: 869
    bwtSz: 869
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_12 done.

Mapping ClpA_12 sequence to ClpA_12 done.
length variant dictionary is: 6
length read dictionary is: 384
length k_j dictionary is: 384
length proportion dictionary is: 6
total sum is: 384.0
computing proportions of ClpA_12 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448167

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_79_13_1.fq
	 the 2nd reads: clpA_79_13_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_79_13_1.aln
	 the 2nd reads: clpA_79_13_2.aln

  SAM Alignment File:
	clpA_79_13_.sam

TTT
>clpA_196
AAAAGAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTCATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_107
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_10
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGACAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_142
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCCCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGATTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_142_12_
clpA_142_12_reference.fa
art_illumina -ss HS25 -sam -i clpA_142_12_reference.fa -p -l 76 -c 19 -m 200 -s 30 -o clpA_142_12_
bash temp.sh ClpA_12 ClpA_12
[49, 2, 57, 27, 47, 19]
[u'>clpA_79\n', u'>clpA_128\n', u'>clpA_133\n', u'>clpA_47\n', u'>clpA_162\n', u'>clpA_155\n']
['', 'clpA_79']
>clpA_79
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGGAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT

clpA_79_13_
clpA_79_13_reference.fa
art_illumina -ss HS25 -sam -i clpA_79_13_reference.fa -p -l 76 -c 30 -m 200 -s 30 -o clpA_79_13_
['', 'clpA_128']
>clpA_79
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGGAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_128
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTAC
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448167

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_128_13_1.fq
	 the 2nd reads: clpA_128_13_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_128_13_1.aln
	 the 2nd reads: clpA_128_13_2.aln

  SAM Alignment File:
	clpA_128_13_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448167

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_133_13_1.fq
	 the 2nd reads: clpA_133_13_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_133_13_1.aln
	 the 2nd reads: clpA_133_13_2.aln

  SAM Alignment File:
	clpA_133_13_.sam

TGTTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_128_13_
clpA_128_13_reference.fa
art_illumina -ss HS25 -sam -i clpA_128_13_reference.fa -p -l 76 -c 45 -m 200 -s 30 -o clpA_128_13_
['', 'clpA_133']
>clpA_79
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGGAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_128
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_133
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGGCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_133_13_
clpA_133_13_reference.fa
art_illumina -ss HS25 -sam -i clpA_133_13_reference.fa -p -l 76 -c 4 -m 200 -s 30 -o clpA_133_13_
['', 'clpA_47']
>clpA_79
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGGAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_128
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_133
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGGCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAAT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448167

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_47_13_1.fq
	 the 2nd reads: clpA_47_13_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_47_13_1.aln
	 the 2nd reads: clpA_47_13_2.aln

  SAM Alignment File:
	clpA_47_13_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448167

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_162_13_1.fq
	 the 2nd reads: clpA_162_13_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_162_13_1.aln
	 the 2nd reads: clpA_162_13_2.aln

  SAM Alignment File:
	clpA_162_13_.sam

AAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_47
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTATTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_47_13_
clpA_47_13_reference.fa
art_illumina -ss HS25 -sam -i clpA_47_13_reference.fa -p -l 76 -c 59 -m 200 -s 30 -o clpA_47_13_
['', 'clpA_162']
>clpA_79
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGGAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_128
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_133
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGGCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_47
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTATTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_162
AAAAAAGAATTCATTATACATGATAGTTTAATATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGACAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_162_13_
clpA_162_13_reference.fa
art_illumina -ss HS25 -sam -i clpA_162_13_reference.fa -p -l 76 -c 11 -m 200 -s 30 -o clpA_162_13_
['', 'clpA_155']
>clpA_79
AAAAAA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448167

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_155_13_1.fq
	 the 2nd reads: clpA_155_13_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_155_13_1.aln
	 the 2nd reads: clpA_155_13_2.aln

  SAM Alignment File:
	clpA_155_13_.sam

Settings:
  Output files: "ClpA_13_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_13.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 868
Using parameters --bmax 651 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 651 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 495.429 (target: 650)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 550
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 551
Getting block 2 of 7
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 225
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 226
Getting block 3 of 7
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 429
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 430
Getting block 4 of 7
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 575
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 576
Getting block 5 of 7
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 542
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 543
Getting block 6 of 7
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 500
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 501
Getting block 7 of 7
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 647
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 648
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1200
fchr[G]: 1492
fchr[T]: 2122
fchr[$]: 3474
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195621 bytes to primary EBWT file: ClpA_13_bowtie.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_13_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3474
    bwtLen: 3475
    sz: 869
    bwtSz: 869
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 868
Using parameters --bmax 651 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 651 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 433.375 (target: 650)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 367
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 368
Getting block 2 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 485
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 486
Getting block 3 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 419
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 420
Getting block 4 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 266
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 267
Getting block 5 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 492
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 493
Getting block 6 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 613
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 614
Getting block 7 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 323
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 324
Getting block 8 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 502
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 503
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1200
fchr[G]: 1492
fchr[T]: 2122
fchr[$]: 3474
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195621 bytes to primary EBWT file: ClpA_13_bowtie.rev.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_13_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3474
    bwtLen: 3475
    sz: 869
    bwtSz: 869
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_13 done.

Mapping ClpA_13 sequence to ClpA_13 done.
length variant dictionary is: 6
length read dictionary is: 386
length k_j dictionary is: 386
length proportion dictionary is: 6
total sum is: 386.0
computing proportions of ClpA_13 done

GAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGGAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_128
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_133
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGGCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_47
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTATTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_162
AAAAAAGAATTCATTATACATGATAGTTTAATATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGACAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_155
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_155_13_
clpA_155_13_reference.fa
art_illumina -ss HS25 -sam -i clpA_155_13_reference.fa -p -l 76 -c 52 -m 200 -s 30 -o clpA_155_13_
bash temp.sh ClpA_13 ClpA_13
[30, 45, 4, 59, 11, 52]
[u'>clpA_111\n', u'>clpA_166\n', u'>clpA_147\n', u'>clpA_91\n']
['', 'clpA_111']
>clpA_111
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448168

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_111_14_1.fq
	 the 2nd reads: clpA_111_14_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_111_14_1.aln
	 the 2nd reads: clpA_111_14_2.aln

  SAM Alignment File:
	clpA_111_14_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448168

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_166_14_1.fq
	 the 2nd reads: clpA_166_14_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_166_14_1.aln
	 the 2nd reads: clpA_166_14_2.aln

  SAM Alignment File:
	clpA_166_14_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448168

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_147_14_1.fq
	 the 2nd reads: clpA_147_14_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_147_14_1.aln
	 the 2nd reads: clpA_147_14_2.aln

  SAM Alignment File:
	clpA_147_14_.sam

AACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAAAGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_111_14_
clpA_111_14_reference.fa
art_illumina -ss HS25 -sam -i clpA_111_14_reference.fa -p -l 76 -c 2 -m 200 -s 30 -o clpA_111_14_
['', 'clpA_166']
>clpA_111
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAAAGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_166
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTATATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTATTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_166_14_
clpA_166_14_reference.fa
art_illumina -ss HS25 -sam -i clpA_166_14_reference.fa -p -l 76 -c 65 -m 200 -s 30 -o clpA_166_14_
['', 'clpA_147']
>clpA_111
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAAAGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_166
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTATATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTATTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_147
AAAAAAGAGCTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAATGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_147_14_
clpA_147_14_reference.fa
art_illumina -ss HS25 -sam -i clpA_147_14_reference.fa -p -l 76 -c 52 -m 200 -s 30 -o clpA_147_14_
['', 'clpA_91']
>clpA_111
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGC
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448168

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_91_14_1.fq
	 the 2nd reads: clpA_91_14_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_91_14_1.aln
	 the 2nd reads: clpA_91_14_2.aln

  SAM Alignment File:
	clpA_91_14_.sam

Settings:
  Output files: "ClpA_14_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_14.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 579
Using parameters --bmax 435 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 435 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 288.625 (target: 434)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 326
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 327
Getting block 2 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 187
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 188
Getting block 3 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 287
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 288
Getting block 4 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 408
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 409
Getting block 5 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 168
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 169
Getting block 6 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 291
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 292
Getting block 7 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 383
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 384
Getting block 8 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 259
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 260
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 795
fchr[G]: 995
fchr[T]: 1415
fchr[$]: 2316
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195316 bytes to primary EBWT file: ClpA_14_bowtie.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_14_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2316
    bwtLen: 2317
    sz: 579
    bwtSz: 580
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 579
Using parameters --bmax 435 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 435 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 330 (target: 434)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 245
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 246
Getting block 2 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 316
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 317
Getting block 3 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 398
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 399
Getting block 4 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 391
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 392
Getting block 5 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 409
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 410
Getting block 6 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 242
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 243
Getting block 7 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 309
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 310
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 795
fchr[G]: 995
fchr[T]: 1415
fchr[$]: 2316
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195316 bytes to primary EBWT file: ClpA_14_bowtie.rev.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_14_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2316
    bwtLen: 2317
    sz: 579
    bwtSz: 580
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_14 done.

Mapping ClpA_14 sequence to ClpA_14 done.
length variant dictionary is: 4
length read dictionary is: 372
length k_j dictionary is: 372
length proportion dictionary is: 4
total sum is: 372.0
computing proportions of ClpA_14 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448168

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_203_15_1.fq
	 the 2nd reads: clpA_203_15_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_203_15_1.aln
	 the 2nd reads: clpA_203_15_2.aln

  SAM Alignment File:
	clpA_203_15_.sam

AAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAAAGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_166
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTATATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTATTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_147
AAAAAAGAGCTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAATGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_91
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAAAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGCAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_91_14_
clpA_91_14_reference.fa
art_illumina -ss HS25 -sam -i clpA_91_14_reference.fa -p -l 76 -c 80 -m 200 -s 30 -o clpA_91_14_
bash temp.sh ClpA_14 ClpA_14
[2, 65, 52, 80]
[u'>clpA_203\n', u'>clpA_99\n', u'>clpA_35\n', u'>clpA_61\n']
['', 'clpA_203']
>clpA_203
AGGACAAGTATGATAATTGATGAGGATATTTTATCTGCATTGATTTTACATATCAAACTTTTAAGAATTAAGTTTTTCTTTAAAAATAATACTCTTGGTATTTTTATTTTAGTTGGGCCTTCTGATGTAGATAAGAATAAACTTGCGTGTATTTTATCAGAAGAACTTAATATTCCTAAATTGACTTTGGGAATGAGTGAATATGGTGATTTTGATGGTATTAATCGACTTATAGGACCAATATATGGTTCTGAATCTTATGATGAACCTACTAAATTTTTTAAATTTCTAAATAAGTCTTTAAGTTCAATTATTGTTTTGTCGGATTTTGATAAATCTTCTAAGAGAGTTATAGATTTTTTTTTTGAAGGGTTCAATACTGGTAGGCTTTTTGATAGTCTTGGTAGAAGCGTAAGTTTGGCACACAGCATAGTAATAATTGATATTAATATAGAATATAGAGAGCTTGATAGCATTGGATTTAAAAATGAAATAGTTGACAGCAAAAGTTTATTAGAAAAACGTTTTTCTACTCAGTTTTTGGATCTTGTAGATCATGTTTTTTTCTTT

clpA_203_15_
clpA_203_15_reference.fa
art_illumina -ss HS25 -sam -i clpA_203_15_reference.fa -p -l 76 -c 50 -m 200 -s 30 -o clpA_203_15_
['', 'clpA_99']
>clpA_203
AGGACAAGTATGATAATTGATGAGGATATTTTATCTGCATTGATTTTACATATCAAACTTTTAAGAATTAAGTTTTTCTTTAAAAATAATACTCTTGGTATTTTTATTTTAGTTGGGCCTTCTGATGTAGATAAGAATAAACTTGCGTGTATTTTATCAGAAGAACTTAATATTCCTAAATTGACTTTGGGAATGAGTGAATATGGTGATTTTGATGGTATTAATCGACTTATAGGACCAATATATGGTTCTGAATCTTATGATGAACCTACTAAATTTTTTAAATTTCTAAATAAGTCTTTAAGTTCAATTATTGTTTTGTCGGATTTTGATAAATCTTCTAAGAGAGTTATAGATTTTTTTTTTGAAGGGTTCAATACTGGTAGGCTTTTTGATAGTCTTGGTAGAAGCGTAAGTTTGGCACACAGCATAGTAATAATTGATATTAATATAGAATATAGAGAGCTTGATAGCATTGGATTTAAAAATGAAATAGTTGACAGCAAAAGTTTATTAGAAAAACGTTTTTCTACTCAGTTTTTGGATCTTGTAGATCATGTTTTTTTCTTT
>clpA_99
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448168

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_99_15_1.fq
	 the 2nd reads: clpA_99_15_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_99_15_1.aln
	 the 2nd reads: clpA_99_15_2.aln

  SAM Alignment File:
	clpA_99_15_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448168

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_35_15_1.fq
	 the 2nd reads: clpA_35_15_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_35_15_1.aln
	 the 2nd reads: clpA_35_15_2.aln

  SAM Alignment File:
	clpA_35_15_.sam

TTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_99_15_
clpA_99_15_reference.fa
art_illumina -ss HS25 -sam -i clpA_99_15_reference.fa -p -l 76 -c 18 -m 200 -s 30 -o clpA_99_15_
['', 'clpA_35']
>clpA_203
AGGACAAGTATGATAATTGATGAGGATATTTTATCTGCATTGATTTTACATATCAAACTTTTAAGAATTAAGTTTTTCTTTAAAAATAATACTCTTGGTATTTTTATTTTAGTTGGGCCTTCTGATGTAGATAAGAATAAACTTGCGTGTATTTTATCAGAAGAACTTAATATTCCTAAATTGACTTTGGGAATGAGTGAATATGGTGATTTTGATGGTATTAATCGACTTATAGGACCAATATATGGTTCTGAATCTTATGATGAACCTACTAAATTTTTTAAATTTCTAAATAAGTCTTTAAGTTCAATTATTGTTTTGTCGGATTTTGATAAATCTTCTAAGAGAGTTATAGATTTTTTTTTTGAAGGGTTCAATACTGGTAGGCTTTTTGATAGTCTTGGTAGAAGCGTAAGTTTGGCACACAGCATAGTAATAATTGATATTAATATAGAATATAGAGAGCTTGATAGCATTGGATTTAAAAATGAAATAGTTGACAGCAAAAGTTTATTAGAAAAACGTTTTTCTACTCAGTTTTTGGATCTTGTAGATCATGTTTTTTTCTTT
>clpA_99
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_35
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_35_15_
clpA_35_15_reference.fa
art_illumina -ss HS25 -sam -i clpA_35_15_reference.fa -p -l 76 -c 99 -m 200 -s 30 -o clpA_35_15_
['', 'clpA_61']
>clpA_203
AGGACAAGTATGATAATTGATGAGGATATTTTATCTGCATTGATTTTACATATCAAACTTTTAAGAATTAAGTTTTTCTTTAAAAATAATACTCTTGGTATTTTTATTTTAGTTGGGCCTTCTGATGTAGATAAGAATAAACTTGCGTGTATTTTATCAGAAGAACTTAATATTCCTAAATTGACTTTGGGAATGAGTGAATATGGTGATTTTGATGGTATTAATCGACTTATAGGACCAATATATGGTTCTGAATCTTATGATGAACCTACTAAATTTTTTAAATTTCTAAATAAGTCTTTAAGTTCAATTATTGTTTTGTCGGATTTTGATAAATCTTCTAAGAGAGTTATAGATTTTTTTTTTGAAGGGTTCAATACTGGTAGGCTTTTTGATAGTCTTGGTAGAAGCGTAAGTTTGGCACACAGCATAGTAATAATTGATATTAATATAGAATATAGAGAGCTTGATAGCATTGGATTTAAAAATGAAATAGTTGACAGCAAAAGTTTATTAGAAAAACGTTTTTCTACTCAGTTTTTGGATCTTGTAGATCATGTTTTTTTCTTT
>clpA_99
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_35
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_61
AGAACAAGTATGATAATTGATGAGAGTATTTTATCCGAATTACTTTTGCATATTAAGCTTTTAAGAATTAAATTTTTCTTTAAAAATAGTACTCTTGGTATTTTCATTTTAATTGGATCTTCTGATGTAGATAAGAATAAACTTGCGTGTGTTTTATCAGAAGAACTTAATATGCCTAAACTTACTTTGGGAATGAGTGAATATTGTGATTTTGATGGTATTAATCGATTGATAGGA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448168

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_61_15_1.fq
	 the 2nd reads: clpA_61_15_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_61_15_1.aln
	 the 2nd reads: clpA_61_15_2.aln

  SAM Alignment File:
	clpA_61_15_.sam

Settings:
  Output files: "ClpA_15_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_15.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 574
Using parameters --bmax 431 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 431 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 286.375 (target: 430)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 379
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 380
Getting block 2 of 8
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 197
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 198
Getting block 3 of 8
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 376
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 377
Getting block 4 of 8
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 259
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 260
Getting block 5 of 8
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 374
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 375
Getting block 6 of 8
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 182
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 183
Getting block 7 of 8
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 371
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 372
Getting block 8 of 8
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 153
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 154
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 764
fchr[G]: 968
fchr[T]: 1377
fchr[$]: 2298
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195314 bytes to primary EBWT file: ClpA_15_bowtie.1.ebwt
Wrote 292 bytes to secondary EBWT file: ClpA_15_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2298
    bwtLen: 2299
    sz: 575
    bwtSz: 575
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 72
    offsSz: 288
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 574
Using parameters --bmax 431 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 431 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 327.429 (target: 430)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 405
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 406
Getting block 2 of 7
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 426
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 427
Getting block 3 of 7
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 117
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 118
Getting block 4 of 7
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 386
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 387
Getting block 5 of 7
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 408
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 409
Getting block 6 of 7
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 277
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 278
Getting block 7 of 7
  Reserving size (431) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 273
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 274
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 764
fchr[G]: 968
fchr[T]: 1377
fchr[$]: 2298
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195314 bytes to primary EBWT file: ClpA_15_bowtie.rev.1.ebwt
Wrote 292 bytes to secondary EBWT file: ClpA_15_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2298
    bwtLen: 2299
    sz: 575
    bwtSz: 575
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 72
    offsSz: 288
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_15 done.

Mapping ClpA_15 sequence to ClpA_15 done.
length variant dictionary is: 4
length read dictionary is: 376
length k_j dictionary is: 376
length proportion dictionary is: 4
total sum is: 376.0
computing proportions of ClpA_15 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448169

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_215_16_1.fq
	 the 2nd reads: clpA_215_16_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_215_16_1.aln
	 the 2nd reads: clpA_215_16_2.aln

  SAM Alignment File:
	clpA_215_16_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448169

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_119_16_1.fq
	 the 2nd reads: clpA_119_16_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_119_16_1.aln
	 the 2nd reads: clpA_119_16_2.aln

  SAM Alignment File:
	clpA_119_16_.sam

CCAGTATATGGTTCTGAAGCTTATGATGAACCTACTAAATTCTTTAGATTTTTAAATGAGTCTTTAAATTCAATTATTGTTTTGTCAGATTTTGATAAGTCTTCTAAGAGAGTTATAGATTTTTTTTTTGAAGGATTTAATACAGGTAGACTTTTTGATAATTTTGGTAGAAGTGTCAGTTTGTCAGGTAGCATTATAATTATAGATATTAATATAGAATATAGAGAACTTGATGGTATTGGATTTAAAAATGAAACTGTTGATATCAGAAGTTTATTAGAAAAACGTTTTTCTAATAAATTTCTAGACTTAGTAGATCATGTTTTTTTCTTT

clpA_61_15_
clpA_61_15_reference.fa
art_illumina -ss HS25 -sam -i clpA_61_15_reference.fa -p -l 76 -c 32 -m 200 -s 30 -o clpA_61_15_
bash temp.sh ClpA_15 ClpA_15
[50, 18, 99, 32]
[u'>clpA_215\n', u'>clpA_119\n', u'>clpA_150\n', u'>clpA_161\n', u'>clpA_140\n', u'>clpA_135\n', u'>clpA_216\n']
['', 'clpA_215']
>clpA_215
AGAGAAAATATGATAATTGATGAGGATATCTTATCTGATTTGATATTAAACATCAAACTTTTAAGGATTAAAGTTTGCTTAAACAATAACACTCTTGGCATCTTCATTTTTATGGGTTCTTCTGATTCAGATAAAAATAAGCTTGCATGTATTTTGTCAGAACAGCTTAAGATACCTAAGTTGACTTTGAGGATGAGCGAGTATGGTGATTTTGATGGGATTAATCGATTAATAGGACCTGTATATGGAGCTGAATCTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTGAATCTTCAAGTTCAATTATTTTTTTATCCGATTTTGATAAATCTTCCAAGAGGGTAGTGGATTTTTTTTTTGAAGGGTTTAATACTGGTAAACTTTTTGATAGTATTGGTAGAAGTGTAAGTTTATCAGATAGTATAATAATCATAGATATTGATATAGAATATAGAGAACTTGATAGTATTGGATTTAAAAATGAAACAGTCAATAGCAAGAGTTTGCTAGGGAAACGTTTTTCTTCTCAGTTTTTAGACCTTGTAGATCATATTTTTTTCTTC

clpA_215_16_
clpA_215_16_reference.fa
art_illumina -ss HS25 -sam -i clpA_215_16_reference.fa -p -l 76 -c 1 -m 200 -s 30 -o clpA_215_16_
['', 'clpA_119']
>clpA_215
AGAGAAAATATGATAATTGATGAGGATATCTTATCTGATTTGATATTAAACATCAAACTTTTAAGGATTAAAGTTTGCTTAAACAATAACACTCTTGGCATCTTCATTTTTATGGGTTCTTCTGATTCAGATAAAAATAAGCTTGCATGTATTTTGTCAGAACAGCTTAAGATACCTAAGTTGACTTTGAGGATGAGCGAGTATGGTGATTTTGATGGGATTAATCGATTAATAGGACCTGTATATGGAGCTGAATCTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTGAATCTTCAAGTTCAATTATTTTTTTATCCGATTTTGATAAATCTTCCAAGAGGGTAGTGGATTTTTTTTTTGAAGGGTTTAATACTGGTAAACTTTTTGATAGTATTGGTAGAAGTGTAAGTTTATCAGATAGTATAATAATCATAGATATTGATATAGAATATAGAGAACTTGATAGTATTGGATTTAAAAATGAAACAGTCAATAGCAAGAGTTTGCTAGGGAAACGTTTTTCTTCTCAGTTTTTAGACCTTGTAGATCATATTTTTTTCTTC
>clpA_119
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCCTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_119_16_
clpA_119_16_reference.fa
art_illumina -ss HS25 -sam -i clpA_119_16_reference.fa -p -l 76 -c 50 -m 200 -s 30 -o clpA_119_16_
['', 'clpA_150']
>clpA_215
AGAGAAAATATGATAATTGATGAGGATATCTTATCTGATTTGATATTAAACATCAAACTTTTAAGGATTAAAGTTTGCTTAAACAATAACACTCTTGGCATCTTCATTTTTATGGGTTCTTCTGATTCAGATAAAAATAAGCTTGCATGTATTTTGTCAGAACAGCTTAAGATACCTAAGTTGACTTTGAGGATGAGCGAGTATGGTGATTTTGATGGGATTAATCGATTAATAGGACCTGTATATGGAGCTGAATCTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTGAATCTTCAAGTTCAATTATTTTTTTATCCGATTTTGATAAATCTTCCAAGAGGGTAGTGGATTTTTTTTTTGAAGGGTTTAATACTGGTAAACTTTTTGATAGTATTGGTAGAAGTGTAAGTTTATCAGATAGTATAATAATCATAGATATTGATATAGAATATAGAGAACTTGATAGTATTGGATTTAAAAATGAAACAGTCAATAGCAAGAGTTTGCTAGGGAAACGTTTTTCTTCTCAGTTTTTAGACCTTGTAGATCATATTTTTTTCTTC
>clpA_119
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCCTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_150
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGACTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGAATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGAT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448169

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_150_16_1.fq
	 the 2nd reads: clpA_150_16_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_150_16_1.aln
	 the 2nd reads: clpA_150_16_2.aln

  SAM Alignment File:
	clpA_150_16_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448169

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_161_16_1.fq
	 the 2nd reads: clpA_161_16_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_161_16_1.aln
	 the 2nd reads: clpA_161_16_2.aln

  SAM Alignment File:
	clpA_161_16_.sam

TTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_150_16_
clpA_150_16_reference.fa
art_illumina -ss HS25 -sam -i clpA_150_16_reference.fa -p -l 76 -c 29 -m 200 -s 30 -o clpA_150_16_
['', 'clpA_161']
>clpA_215
AGAGAAAATATGATAATTGATGAGGATATCTTATCTGATTTGATATTAAACATCAAACTTTTAAGGATTAAAGTTTGCTTAAACAATAACACTCTTGGCATCTTCATTTTTATGGGTTCTTCTGATTCAGATAAAAATAAGCTTGCATGTATTTTGTCAGAACAGCTTAAGATACCTAAGTTGACTTTGAGGATGAGCGAGTATGGTGATTTTGATGGGATTAATCGATTAATAGGACCTGTATATGGAGCTGAATCTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTGAATCTTCAAGTTCAATTATTTTTTTATCCGATTTTGATAAATCTTCCAAGAGGGTAGTGGATTTTTTTTTTGAAGGGTTTAATACTGGTAAACTTTTTGATAGTATTGGTAGAAGTGTAAGTTTATCAGATAGTATAATAATCATAGATATTGATATAGAATATAGAGAACTTGATAGTATTGGATTTAAAAATGAAACAGTCAATAGCAAGAGTTTGCTAGGGAAACGTTTTTCTTCTCAGTTTTTAGACCTTGTAGATCATATTTTTTTCTTC
>clpA_119
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCCTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_150
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGACTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGAATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_161
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGTTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATGGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGACAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTACCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_161_16_
clpA_161_16_reference.fa
art_illumina -ss HS25 -sam -i clpA_161_16_reference.fa -p -l 76 -c 28 -m 200 -s 30 -o clpA_161_16_
['', 'clpA_140']
>clpA_215
AGAGAAAATATGATAATTGATGAGGATATCTTATCTGATTTGATATTAAACATCAAACTTTTAAGGATTAAAGTTTGCTTAAACAATAACACTCTTGGCATCTTCATTTTTATGGGTTCTTCTGATTCAGATAAAAATAAGCTTGCATGTATTTTGTCAGAACAGCTTAAGATACCTAAGTTGACTTTGAGGATGAGCGAGTATGGTGATTTTGATGGGATTAATCGATTAATAGGACCTGTATATGGAGCTGAATCTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTGAATCTTCAAGTTCAATTATTTTTTTATCCGATTTTGATAAATCTTCCAAGAGGGTAGTGGATTTTTTTTTTGAAGGGTTTAATACTGGTAAACTTTTTGATAGTATTGGTAGAAGTGTAAGTTTATCAGATAGTATAATAATCATAGATATTGATATAGAATATAGAGAACTTGATAGTATTGGATTTAAAAATGAAACAGTCAATAGCAAGAGTTTGCTAGGGAAACGTTTTTCTTCTCAGTTTTTAGACCTTGTAGATCATATTTTTTTCTTC
>clpA_119
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCCTCAATGTTGAGAGCAAGGAGCTTAATAGT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448169

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_140_16_1.fq
	 the 2nd reads: clpA_140_16_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_140_16_1.aln
	 the 2nd reads: clpA_140_16_2.aln

  SAM Alignment File:
	clpA_140_16_.sam

ATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_150
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGACTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGAATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_161
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGTTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATGGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGACAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTACCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_140
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAGTGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_140_16_
clpA_140_16_reference.fa
art_illumina -ss HS25 -sam -i clpA_140_16_reference.fa -p -l 76 -c 24 -m 200 -s 30 -o clpA_140_16_
['', 'clpA_135']
>clpA_215
AGAGAAAATATGATAATTGATGAGGATATCTTATCTGATTTGATATTAAACATCAAACTTTTAAGGATTAAAGTTTGCTTAAACAATAACACTCTTGGCATCTTCATTTTTATGGGTTCTTCTGATTCAGATAAAAATAAGCTTGCATGTATTTTGTCAGAACAGCTTAAGATACCTAAGTTGACTTTGAGGATGAGCGAGTATGGTGATTTTGATGGGATTAATCGATTAATAGGACCTGTATATGGAGCTGAATCTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTGAATCTTCAAGTTCAATTATTTTTTTATCCGATTTTGATAAATCTTCCAAGAGGGTAGTGGATTTTTTTTTTGAAGGGTTTAATACTGGTAAACTTTTTGATAGTATTGGTAGAAGTGTAAGTTTATCAGATAGTATAATAATCATAGATATTGATATAGAATATAGAGAACTTGATAGTATTGGATTTAAAAATGAAACAGTCAATAGCAAGAGTTTGCTAGGGAAACGTTTTTCTTCTCAGTTTTTAGACCTTGTAGATCATATTTTTTTCTTC
>clpA_119
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCCTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_150
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGACTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGAATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_161
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGTTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATGGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAAC
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448169

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_135_16_1.fq
	 the 2nd reads: clpA_135_16_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_135_16_1.aln
	 the 2nd reads: clpA_135_16_2.aln

  SAM Alignment File:
	clpA_135_16_.sam

AAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGACAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTACCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_140
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAGTGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_135
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGTCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGAAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_135_16_
clpA_135_16_reference.fa
art_illumina -ss HS25 -sam -i clpA_135_16_reference.fa -p -l 76 -c 48 -m 200 -s 30 -o clpA_135_16_
['', 'clpA_216']
>clpA_215
AGAGAAAATATGATAATTGATGAGGATATCTTATCTGATTTGATATTAAACATCAAACTTTTAAGGATTAAAGTTTGCTTAAACAATAACACTCTTGGCATCTTCATTTTTATGGGTTCTTCTGATTCAGATAAAAATAAGCTTGCATGTATTTTGTCAGAACAGCTTAAGATACCTAAGTTGACTTTGAGGATGAGCGAGTATGGTGATTTTGATGGGATTAATCGATTAATAGGACCTGTATATGGAGCTGAATCTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTGAATCTTCAAGTTCAATTATTTTTTTATCCGATTTTGATAAATCTTCCAAGAGGGTAGTGGATTTTTTTTTTGAAGGGTTTAATACTGGTAAACTTTTTGATAGTATTGGTAGAAGTGTAAGTTTATCAGATAGTATAATAATCATAGATATTGATATAGAATATAGAGAACTTGATAGTATTGGATTTAAAAATGAAACAGTCAATAGCAAGAGTTTGCTAGGGAAACGTTTTTCTTCTCAGTTTTTAGACCTTGTAGATCATATTTTTTTCTTC
>clpA_119
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCCTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_150
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGACTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGAATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_161
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGTTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATGGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGACAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTACCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_140
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448169

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_216_16_1.fq
	 the 2nd reads: clpA_216_16_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_216_16_1.aln
	 the 2nd reads: clpA_216_16_2.aln

  SAM Alignment File:
	clpA_216_16_.sam

Settings:
  Output files: "ClpA_16_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_16.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 1008
Using parameters --bmax 756 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 756 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 503.5 (target: 755)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 657
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 658
Getting block 2 of 8
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 727
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 728
Getting block 3 of 8
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 307
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 308
Getting block 4 of 8
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 469
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 470
Getting block 5 of 8
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 489
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 490
Getting block 6 of 8
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 388
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 389
Getting block 7 of 8
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 598
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 599
Getting block 8 of 8
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 393
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 394
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1372
fchr[G]: 1729
fchr[T]: 2450
fchr[$]: 4035
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195904 bytes to primary EBWT file: ClpA_16_bowtie.1.ebwt
Wrote 512 bytes to secondary EBWT file: ClpA_16_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 4035
    bwtLen: 4036
    sz: 1009
    bwtSz: 1009
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 127
    offsSz: 508
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 10
    numSides: 20
    numLines: 20
    ebwtTotLen: 1280
    ebwtTotSz: 1280
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 1008
Using parameters --bmax 756 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 756 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 575.571 (target: 755)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 507
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 508
Getting block 2 of 7
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 486
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 487
Getting block 3 of 7
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 749
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 750
Getting block 4 of 7
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 739
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 740
Getting block 5 of 7
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 536
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 537
Getting block 6 of 7
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 411
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 412
Getting block 7 of 7
  Reserving size (756) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 601
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 602
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1372
fchr[G]: 1729
fchr[T]: 2450
fchr[$]: 4035
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195904 bytes to primary EBWT file: ClpA_16_bowtie.rev.1.ebwt
Wrote 512 bytes to secondary EBWT file: ClpA_16_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 4035
    bwtLen: 4036
    sz: 1009
    bwtSz: 1009
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 127
    offsSz: 508
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 10
    numSides: 20
    numLines: 20
    ebwtTotLen: 1280
    ebwtTotSz: 1280
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_16 done.

Mapping ClpA_16 sequence to ClpA_16 done.
length variant dictionary is: 7
length read dictionary is: 388
length k_j dictionary is: 388
length proportion dictionary is: 7
total sum is: 388.0
computing proportions of ClpA_16 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448169

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_97_17_1.fq
	 the 2nd reads: clpA_97_17_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_97_17_1.aln
	 the 2nd reads: clpA_97_17_2.aln

  SAM Alignment File:
	clpA_97_17_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448169

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_14_17_1.fq
	 the 2nd reads: clpA_14_17_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_14_17_1.aln
	 the 2nd reads: clpA_14_17_2.aln

  SAM Alignment File:
	clpA_14_17_.sam

GGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAGTGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_135
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGTCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGAAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_216
AGAACAAGTATGATAATTGATGAGAGTATTTTATCCGAATTACTTTTGCATATTAAGCTTTTAAGAATTAAATTTTTCTTTAAAAATAGTACTCTTGGTATTTTCATTTTAATTGGATCTTCTGATGTAGATAAGAATAAACTTGCGTGTGTTTTATCAGAAGAACTTAATATGCCTAAACTTACTTTGGGAATGAGTGAATATTGTGATTTTGATGGTATTAATCGATTGATAGGACCAGTATATGGTTCTGAATCTTATGATGAACCTACTAAATTCTTTAAATTTTTAAATGAGTCTTTAAATTCAATTATTGTTTTGTCAGATTTTGATAAGTCTTCTAAGAGAGTTATAGATTTTTTTTTTGAAGGATTTAATACAGGTAGACTTTTTGATAATTTTGGTAGAAGTGTCAGTTTGTCAGGTAGCATTATAATTATAGATATTAATATAGAATATAGAGAACTTGATGGTATTGGATTTAAAAATGAAATTGTTGATATCAGAGGTTTATTAGAAAAACGTTTTTCTAATAAACTTCTAGACTTAGTAGATCATGTTTTTTTCTTT

clpA_216_16_
clpA_216_16_reference.fa
art_illumina -ss HS25 -sam -i clpA_216_16_reference.fa -p -l 76 -c 20 -m 200 -s 30 -o clpA_216_16_
bash temp.sh ClpA_16 ClpA_16
[1, 50, 29, 28, 24, 48, 20]
[u'>clpA_97\n', u'>clpA_14\n', u'>clpA_107\n', u'>clpA_160\n', u'>clpA_127\n', u'>clpA_86\n']
['', 'clpA_97']
>clpA_97
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTACAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_97_17_
clpA_97_17_reference.fa
art_illumina -ss HS25 -sam -i clpA_97_17_reference.fa -p -l 76 -c 6 -m 200 -s 30 -o clpA_97_17_
['', 'clpA_14']
>clpA_97
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTACAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_14_17_
clpA_14_17_reference.fa
art_illumina -ss HS25 -sam -i clpA_14_17_reference.fa -p -l 76 -c 13 -m 200 -s 30 -o clpA_14_17_
['', 'clpA_107']
>clpA_97
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448169

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_107_17_1.fq
	 the 2nd reads: clpA_107_17_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_107_17_1.aln
	 the 2nd reads: clpA_107_17_2.aln

  SAM Alignment File:
	clpA_107_17_.sam

GCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTACAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_107
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_107_17_
clpA_107_17_reference.fa
art_illumina -ss HS25 -sam -i clpA_107_17_reference.fa -p -l 76 -c 6 -m 200 -s 30 -o clpA_107_17_
['', 'clpA_160']
>clpA_97
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTACAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_107
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_160
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGACGGATATTTTAGCAGAAGAGTTTAGAATTCCTAAATTTAGCATTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTCAATAGCATTGGTTTT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448169

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_160_17_1.fq
	 the 2nd reads: clpA_160_17_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_160_17_1.aln
	 the 2nd reads: clpA_160_17_2.aln

  SAM Alignment File:
	clpA_160_17_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448169

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_127_17_1.fq
	 the 2nd reads: clpA_127_17_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_127_17_1.aln
	 the 2nd reads: clpA_127_17_2.aln

  SAM Alignment File:
	clpA_127_17_.sam

AAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_160_17_
clpA_160_17_reference.fa
art_illumina -ss HS25 -sam -i clpA_160_17_reference.fa -p -l 76 -c 72 -m 200 -s 30 -o clpA_160_17_
['', 'clpA_127']
>clpA_97
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTACAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_107
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_160
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGACGGATATTTTAGCAGAAGAGTTTAGAATTCCTAAATTTAGCATTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTCAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_127
AAAAAAGAACTTATTATACATGATAACTTGATATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGCTGACAGATATTTTGTCACAAGAGTTTAGAATTCCAAAGTTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGCAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGACAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAAGGGTTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAGTGTGAGTTTATCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGTGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_127_17_
clpA_127_17_reference.fa
art_illumina -ss HS25 -sam -i clpA_127_17_reference.fa -p -l 76 -c 26 -m 200 -s 30 -o clpA_127_17_
['', 'clpA_86']
>clpA_97
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTACAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTG
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448169

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_86_17_1.fq
	 the 2nd reads: clpA_86_17_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_86_17_1.aln
	 the 2nd reads: clpA_86_17_2.aln

  SAM Alignment File:
	clpA_86_17_.sam

Settings:
  Output files: "ClpA_17_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_17.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 868
Using parameters --bmax 651 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 651 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 578.167 (target: 650)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 560
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 561
Getting block 2 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 638
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 639
Getting block 3 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 621
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 622
Getting block 4 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 603
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 604
Getting block 5 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 416
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 417
Getting block 6 of 6
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 631
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 632
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1192
fchr[G]: 1496
fchr[T]: 2135
fchr[$]: 3474
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195620 bytes to primary EBWT file: ClpA_17_bowtie.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_17_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3474
    bwtLen: 3475
    sz: 869
    bwtSz: 869
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 868
Using parameters --bmax 651 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 651 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 433.375 (target: 650)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 363
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 364
Getting block 2 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 491
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 492
Getting block 3 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 350
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 351
Getting block 4 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 329
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 330
Getting block 5 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 509
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 510
Getting block 6 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 606
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 607
Getting block 7 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 360
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 361
Getting block 8 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 459
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 460
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1192
fchr[G]: 1496
fchr[T]: 2135
fchr[$]: 3474
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195620 bytes to primary EBWT file: ClpA_17_bowtie.rev.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_17_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3474
    bwtLen: 3475
    sz: 869
    bwtSz: 869
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:01
Building index for ClpA_17 done.

Mapping ClpA_17 sequence to ClpA_17 done.
length variant dictionary is: 6
length read dictionary is: 382
length k_j dictionary is: 382
length proportion dictionary is: 6
total sum is: 382.0
computing proportions of ClpA_17 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448170

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_43_18_1.fq
	 the 2nd reads: clpA_43_18_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_43_18_1.aln
	 the 2nd reads: clpA_43_18_2.aln

  SAM Alignment File:
	clpA_43_18_.sam

ATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_107
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_160
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGACGGATATTTTAGCAGAAGAGTTTAGAATTCCTAAATTTAGCATTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTCAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_127
AAAAAAGAACTTATTATACATGATAACTTGATATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGCTGACAGATATTTTGTCACAAGAGTTTAGAATTCCAAAGTTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGCAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGACAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAAGGGTTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAGTGTGAGTTTATCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGTGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_86
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_86_17_
clpA_86_17_reference.fa
art_illumina -ss HS25 -sam -i clpA_86_17_reference.fa -p -l 76 -c 76 -m 200 -s 30 -o clpA_86_17_
bash temp.sh ClpA_17 ClpA_17
[6, 13, 6, 72, 26, 76]
[u'>clpA_43\n', u'>clpA_23\n', u'>clpA_137\n', u'>clpA_127\n']
['', 'clpA_43']
>clpA_43
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_43_18_
clpA_43_18_reference.fa
art_illumina -ss HS25 -sam -i clpA_43_18_reference.fa -p -l 76 -c 83 -m 200 -s 30 -o clpA_43_18_
['', 'clpA_23']
>clpA_43
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448170

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_23_18_1.fq
	 the 2nd reads: clpA_23_18_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_23_18_1.aln
	 the 2nd reads: clpA_23_18_2.aln

  SAM Alignment File:
	clpA_23_18_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448170

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_137_18_1.fq
	 the 2nd reads: clpA_137_18_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_137_18_1.aln
	 the 2nd reads: clpA_137_18_2.aln

  SAM Alignment File:
	clpA_137_18_.sam

TTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_23
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_23_18_
clpA_23_18_reference.fa
art_illumina -ss HS25 -sam -i clpA_23_18_reference.fa -p -l 76 -c 6 -m 200 -s 30 -o clpA_23_18_
['', 'clpA_137']
>clpA_43
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_23
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_137
AAAAAAGAGCTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_137_18_
clpA_137_18_reference.fa
art_illumina -ss HS25 -sam -i clpA_137_18_reference.fa -p -l 76 -c 3 -m 200 -s 30 -o clpA_137_18_
['', 'clpA_127']
>clpA_43
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_23
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448170

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_127_18_1.fq
	 the 2nd reads: clpA_127_18_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_127_18_1.aln
	 the 2nd reads: clpA_127_18_2.aln

  SAM Alignment File:
	clpA_127_18_.sam

Settings:
  Output files: "ClpA_18_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_18.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 579
Using parameters --bmax 435 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 435 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 288.625 (target: 434)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 365
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 366
Getting block 2 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 155
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 156
Getting block 3 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 283
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 284
Getting block 4 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 383
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 384
Getting block 5 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 136
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 137
Getting block 6 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 342
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 343
Getting block 7 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 218
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 219
Getting block 8 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 427
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 428
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 798
fchr[G]: 998
fchr[T]: 1421
fchr[$]: 2316
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195315 bytes to primary EBWT file: ClpA_18_bowtie.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_18_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2316
    bwtLen: 2317
    sz: 579
    bwtSz: 580
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 579
Using parameters --bmax 435 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 435 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 330 (target: 434)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 330
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 331
Getting block 2 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 231
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 232
Getting block 3 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 409
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 410
Getting block 4 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 388
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 389
Getting block 5 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 407
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 408
Getting block 6 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 208
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 209
Getting block 7 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 337
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 338
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 798
fchr[G]: 998
fchr[T]: 1421
fchr[$]: 2316
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195315 bytes to primary EBWT file: ClpA_18_bowtie.rev.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_18_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2316
    bwtLen: 2317
    sz: 579
    bwtSz: 580
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_18 done.

Mapping ClpA_18 sequence to ClpA_18 done.
length variant dictionary is: 4
length read dictionary is: 362
length k_j dictionary is: 362
length proportion dictionary is: 4
total sum is: 362.0
computing proportions of ClpA_18 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448170

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_10_19_1.fq
	 the 2nd reads: clpA_10_19_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_10_19_1.aln
	 the 2nd reads: clpA_10_19_2.aln

  SAM Alignment File:
	clpA_10_19_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448170

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_178_19_1.fq
	 the 2nd reads: clpA_178_19_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_178_19_1.aln
	 the 2nd reads: clpA_178_19_2.aln

  SAM Alignment File:
	clpA_178_19_.sam

GTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_137
AAAAAAGAGCTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_127
AAAAAAGAACTTATTATACATGATAACTTGATATTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGCTGACAGATATTTTGTCACAAGAGTTTAGAATTCCAAAGTTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGCAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGACAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAAGGGTTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAGTGTGAGTTTATCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGTGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_127_18_
clpA_127_18_reference.fa
art_illumina -ss HS25 -sam -i clpA_127_18_reference.fa -p -l 76 -c 107 -m 200 -s 30 -o clpA_127_18_
bash temp.sh ClpA_18 ClpA_18
[83, 6, 3, 107]
[u'>clpA_10\n', u'>clpA_178\n', u'>clpA_132\n']
['', 'clpA_10']
>clpA_10
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGACAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_10_19_
clpA_10_19_reference.fa
art_illumina -ss HS25 -sam -i clpA_10_19_reference.fa -p -l 76 -c 81 -m 200 -s 30 -o clpA_10_19_
['', 'clpA_178']
>clpA_10
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGACAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_178
AAAAAAGAGCTTATTATACAAGATGGTTTGGTATTTGATTTGATATTAAATATCAAACTATTAAAATTTAATATGCTTGCCAACAGAAGTACTATTGGCGTATTTGTCTTTATTGGTGCTTCTGGAGCAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGTCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACGGGCAGACTTTTTGATGGTCTTGGGAAAAAGGTAAGCTTATCAGAAAGTTTAATAATAATAAGTATCAATGCTGAGAGTAATGAGCTTAATGGTATTGGCTTTAAAAATAAAATGGCAGGAGAAAATCATTTTGATCTTACATTGAAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTTTTGTGTTT

clpA_178_19_
clpA_178_19_reference.fa
art_illumina -ss HS25 -sam -i clpA_178_19_reference.fa -p -l 76 -c 46 -m 200 -s 30 -o clpA_178_19_
['', 'clpA_132']
>clpA_10
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGACAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448170

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_132_19_1.fq
	 the 2nd reads: clpA_132_19_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_132_19_1.aln
	 the 2nd reads: clpA_132_19_2.aln

  SAM Alignment File:
	clpA_132_19_.sam

Settings:
  Output files: "ClpA_19_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_19.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 434
Using parameters --bmax 326 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 326 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 247.286 (target: 325)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 274
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 275
Getting block 2 of 7
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 323
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 324
Getting block 3 of 7
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 289
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 290
Getting block 4 of 7
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 144
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 145
Getting block 5 of 7
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 214
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 215
Getting block 6 of 7
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 167
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 168
Getting block 7 of 7
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 320
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 321
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 599
fchr[G]: 745
fchr[T]: 1067
fchr[$]: 1737
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195035 bytes to primary EBWT file: ClpA_19_bowtie.1.ebwt
Wrote 224 bytes to secondary EBWT file: ClpA_19_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1737
    bwtLen: 1738
    sz: 435
    bwtSz: 435
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 55
    offsSz: 220
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 4
    numSides: 8
    numLines: 8
    ebwtTotLen: 512
    ebwtTotSz: 512
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 434
Using parameters --bmax 326 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 326 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 216.25 (target: 325)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 249
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 250
Getting block 2 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 175
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 176
Getting block 3 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 212
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 213
Getting block 4 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 305
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 306
Getting block 5 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 77
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 78
Getting block 6 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 296
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 297
Getting block 7 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 165
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 166
Getting block 8 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 251
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 252
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 599
fchr[G]: 745
fchr[T]: 1067
fchr[$]: 1737
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195035 bytes to primary EBWT file: ClpA_19_bowtie.rev.1.ebwt
Wrote 224 bytes to secondary EBWT file: ClpA_19_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1737
    bwtLen: 1738
    sz: 435
    bwtSz: 435
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 55
    offsSz: 220
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 4
    numSides: 8
    numLines: 8
    ebwtTotLen: 512
    ebwtTotSz: 512
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_19 done.

Mapping ClpA_19 sequence to ClpA_19 done.
length variant dictionary is: 3
length read dictionary is: 370
length k_j dictionary is: 370
length proportion dictionary is: 3
total sum is: 370.0
computing proportions of ClpA_19 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448171

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_99_20_1.fq
	 the 2nd reads: clpA_99_20_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_99_20_1.aln
	 the 2nd reads: clpA_99_20_2.aln

  SAM Alignment File:
	clpA_99_20_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448171

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_148_20_1.fq
	 the 2nd reads: clpA_148_20_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_148_20_1.aln
	 the 2nd reads: clpA_148_20_2.aln

  SAM Alignment File:
	clpA_148_20_.sam

TAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_178
AAAAAAGAGCTTATTATACAAGATGGTTTGGTATTTGATTTGATATTAAATATCAAACTATTAAAATTTAATATGCTTGCCAACAGAAGTACTATTGGCGTATTTGTCTTTATTGGTGCTTCTGGAGCAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGTCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACGGGCAGACTTTTTGATGGTCTTGGGAAAAAGGTAAGCTTATCAGAAAGTTTAATAATAATAAGTATCAATGCTGAGAGTAATGAGCTTAATGGTATTGGCTTTAAAAATAAAATGGCAGGAGAAAATCATTTTGATCTTACATTGAAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTTTTGTGTTT
>clpA_132
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGTTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATGGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGACAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAATAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTACCCAATGAGTTTTTAGAGTTAATAGATCGTGTGTTTGTATTT

clpA_132_19_
clpA_132_19_reference.fa
art_illumina -ss HS25 -sam -i clpA_132_19_reference.fa -p -l 76 -c 71 -m 200 -s 30 -o clpA_132_19_
bash temp.sh ClpA_19 ClpA_19
[81, 46, 71]
[u'>clpA_99\n', u'>clpA_148\n', u'>clpA_31\n', u'>clpA_117\n']
['', 'clpA_99']
>clpA_99
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_99_20_
clpA_99_20_reference.fa
art_illumina -ss HS25 -sam -i clpA_99_20_reference.fa -p -l 76 -c 68 -m 200 -s 30 -o clpA_99_20_
['', 'clpA_148']
>clpA_99
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_148
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAGTGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAGGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_148_20_
clpA_148_20_reference.fa
art_illumina -ss HS25 -sam -i clpA_148_20_reference.fa -p -l 76 -c 20 -m 200 -s 30 -o clpA_148_20_
['', 'clpA_31']
>clpA_99
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448171

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_31_20_1.fq
	 the 2nd reads: clpA_31_20_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_31_20_1.aln
	 the 2nd reads: clpA_31_20_2.aln

  SAM Alignment File:
	clpA_31_20_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448171

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_117_20_1.fq
	 the 2nd reads: clpA_117_20_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_117_20_1.aln
	 the 2nd reads: clpA_117_20_2.aln

  SAM Alignment File:
	clpA_117_20_.sam

Settings:
  Output files: "ClpA_20_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_20.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 579
Using parameters --bmax 435 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 435 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 288.625 (target: 434)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 362
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 363
Getting block 2 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 137
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 138
Getting block 3 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 305
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 306
Getting block 4 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 332
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 333
Getting block 5 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 202
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 203
Getting block 6 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 362
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 363
Getting block 7 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 345
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 346
Getting block 8 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 264
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 265
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 797
fchr[G]: 991
fchr[T]: 1406
fchr[$]: 2316
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195315 bytes to primary EBWT file: ClpA_20_bowtie.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_20_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2316
    bwtLen: 2317
    sz: 579
    bwtSz: 580
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 579
Using parameters --bmax 435 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 435 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 330 (target: 434)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 214
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 215
Getting block 2 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 349
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 350
Getting block 3 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 391
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 392
Getting block 4 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 387
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 388
Getting block 5 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 403
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 404
Getting block 6 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 173
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 174
Getting block 7 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 393
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 394
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 797
fchr[G]: 991
fchr[T]: 1406
fchr[$]: 2316
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195315 bytes to primary EBWT file: ClpA_20_bowtie.rev.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_20_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2316
    bwtLen: 2317
    sz: 579
    bwtSz: 580
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_20 done.

Mapping ClpA_20 sequence to ClpA_20 done.
length variant dictionary is: 4
length read dictionary is: 376
length k_j dictionary is: 376
length proportion dictionary is: 4
total sum is: 376.0
computing proportions of ClpA_20 done

ATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_148
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAGTGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAGGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_31
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_31_20_
clpA_31_20_reference.fa
art_illumina -ss HS25 -sam -i clpA_31_20_reference.fa -p -l 76 -c 102 -m 200 -s 30 -o clpA_31_20_
['', 'clpA_117']
>clpA_99
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_148
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAGTGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAGGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_31
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_117
AAAAAGGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCCTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_117_20_
clpA_117_20_reference.fa
art_illumina -ss HS25 -sam -i clpA_117_20_reference.fa -p -l 76 -c 10 -m 200 -s 30 -o clpA_117_20_
bash temp.sh ClpA_20 ClpA_20
[68, 20, 102, 10]
[u'>clpA_85\n', u'>clpA_15\n', u'>clpA_123\n', u'>clpA_163\n', u'>clpA_195\n', u'>clpA_56\n']
['', 'clpA_85']
>clpA_85
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATTCTAAATATAAAACTATTAAAATT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448171

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_85_21_1.fq
	 the 2nd reads: clpA_85_21_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_85_21_1.aln
	 the 2nd reads: clpA_85_21_2.aln

  SAM Alignment File:
	clpA_85_21_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448171

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_15_21_1.fq
	 the 2nd reads: clpA_15_21_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_15_21_1.aln
	 the 2nd reads: clpA_15_21_2.aln

  SAM Alignment File:
	clpA_15_21_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448171

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_123_21_1.fq
	 the 2nd reads: clpA_123_21_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_123_21_1.aln
	 the 2nd reads: clpA_123_21_2.aln

  SAM Alignment File:
	clpA_123_21_.sam

TAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_85_21_
clpA_85_21_reference.fa
art_illumina -ss HS25 -sam -i clpA_85_21_reference.fa -p -l 76 -c 1 -m 200 -s 30 -o clpA_85_21_
['', 'clpA_15']
>clpA_85
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATTCTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_15
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGCCTTAACATGGGTGAGTATAATGATTTTAATTCCCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_15_21_
clpA_15_21_reference.fa
art_illumina -ss HS25 -sam -i clpA_15_21_reference.fa -p -l 76 -c 58 -m 200 -s 30 -o clpA_15_21_
['', 'clpA_123']
>clpA_85
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATTCTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_15
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGCCTTAACATGGGTGAGTATAATGATTTTAATTCCCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_123
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTACCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTGAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTCAATATTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTCTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_123_21_
clpA_123_21_reference.fa
art_illumina -ss HS25 -sam -i clpA_123_21_reference.fa -p -l 76 -c 27 -m 200 -s 30 -o clpA_123_21_
['', 'clpA_163']
>clpA_85
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATTCTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448171

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_163_21_1.fq
	 the 2nd reads: clpA_163_21_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_163_21_1.aln
	 the 2nd reads: clpA_163_21_2.aln

  SAM Alignment File:
	clpA_163_21_.sam

CAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_15
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGCCTTAACATGGGTGAGTATAATGATTTTAATTCCCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_123
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTACCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTGAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTCAATATTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTCTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_163
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTATTATTGGTATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGACAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_163_21_
clpA_163_21_reference.fa
art_illumina -ss HS25 -sam -i clpA_163_21_reference.fa -p -l 76 -c 44 -m 200 -s 30 -o clpA_163_21_
['', 'clpA_195']
>clpA_85
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATTCTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_15
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGCCTTAACATGGGTGAGTATAATGATTTTAATTCCCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_123
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTACCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTGAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTCAATATTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTCTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448171

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_195_21_1.fq
	 the 2nd reads: clpA_195_21_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_195_21_1.aln
	 the 2nd reads: clpA_195_21_2.aln

  SAM Alignment File:
	clpA_195_21_.sam

T
>clpA_163
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTATTATTGGTATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGACAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_195
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_195_21_
clpA_195_21_reference.fa
art_illumina -ss HS25 -sam -i clpA_195_21_reference.fa -p -l 76 -c 59 -m 200 -s 30 -o clpA_195_21_
['', 'clpA_56']
>clpA_85
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATTCTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGCATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_15
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGCCTTAACATGGGTGAGTATAATGATTTTAATTCCCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_123
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTACCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTGAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTCAATATTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTCTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_163
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTATTATTGGTATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGACAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_195
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448171

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_56_21_1.fq
	 the 2nd reads: clpA_56_21_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_56_21_1.aln
	 the 2nd reads: clpA_56_21_2.aln

  SAM Alignment File:
	clpA_56_21_.sam

Settings:
  Output files: "ClpA_21_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_21.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 868
Using parameters --bmax 651 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 651 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 495.429 (target: 650)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 594
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 595
Getting block 2 of 7
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 611
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 612
Getting block 3 of 7
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 612
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 613
Getting block 4 of 7
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 260
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 261
Getting block 5 of 7
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 493
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 494
Getting block 6 of 7
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 517
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 518
Getting block 7 of 7
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 381
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 382
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1197
fchr[G]: 1498
fchr[T]: 2126
fchr[$]: 3474
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195620 bytes to primary EBWT file: ClpA_21_bowtie.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_21_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3474
    bwtLen: 3475
    sz: 869
    bwtSz: 869
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 868
Using parameters --bmax 651 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 651 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 433.375 (target: 650)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 365
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 366
Getting block 2 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 481
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 482
Getting block 3 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 362
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 363
Getting block 4 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 325
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 326
Getting block 5 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 504
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 505
Getting block 6 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 555
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 556
Getting block 7 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 408
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 409
Getting block 8 of 8
  Reserving size (651) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 467
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 468
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1197
fchr[G]: 1498
fchr[T]: 2126
fchr[$]: 3474
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195620 bytes to primary EBWT file: ClpA_21_bowtie.rev.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_21_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3474
    bwtLen: 3475
    sz: 869
    bwtSz: 869
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_21 done.

Mapping ClpA_21 sequence to ClpA_21 done.
length variant dictionary is: 6
length read dictionary is: 384
length k_j dictionary is: 384
length proportion dictionary is: 6
total sum is: 384.0
computing proportions of ClpA_21 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448172

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_96_22_1.fq
	 the 2nd reads: clpA_96_22_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_96_22_1.aln
	 the 2nd reads: clpA_96_22_2.aln

  SAM Alignment File:
	clpA_96_22_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448172

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_106_22_1.fq
	 the 2nd reads: clpA_106_22_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_106_22_1.aln
	 the 2nd reads: clpA_106_22_2.aln

  SAM Alignment File:
	clpA_106_22_.sam

TGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_56
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATGCTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGGGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCGACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGAGAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_56_21_
clpA_56_21_reference.fa
art_illumina -ss HS25 -sam -i clpA_56_21_reference.fa -p -l 76 -c 10 -m 200 -s 30 -o clpA_56_21_
bash temp.sh ClpA_21 ClpA_21
[1, 58, 27, 44, 59, 10]
[u'>clpA_96\n', u'>clpA_106\n', u'>clpA_139\n']
['', 'clpA_96']
>clpA_96
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTGTTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATGTTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT

clpA_96_22_
clpA_96_22_reference.fa
art_illumina -ss HS25 -sam -i clpA_96_22_reference.fa -p -l 76 -c 3 -m 200 -s 30 -o clpA_96_22_
['', 'clpA_106']
>clpA_96
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTGTTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATGTTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT
>clpA_106
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGACTTAATAGATCATGTGTTTGTATTT

clpA_106_22_
clpA_106_22_reference.fa
art_illumina -ss HS25 -sam -i clpA_106_22_reference.fa -p -l 76 -c 145 -m 200 -s 30 -o clpA_106_22_
['', 'clpA_139']
>clpA_96
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTGTTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATGTTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT
>clpA_106
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448172

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_139_22_1.fq
	 the 2nd reads: clpA_139_22_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_139_22_1.aln
	 the 2nd reads: clpA_139_22_2.aln

  SAM Alignment File:
	clpA_139_22_.sam

Settings:
  Output files: "ClpA_22_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_22.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 434
Using parameters --bmax 326 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 326 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 9; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
Avg bucket size: 216.25 (target: 325)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 284
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 285
Getting block 2 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 132
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 133
Getting block 3 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 195
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 196
Getting block 4 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 232
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 233
Getting block 5 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 313
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 314
Getting block 6 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 22
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 23
Getting block 7 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 227
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 228
Getting block 8 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 325
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 326
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 607
fchr[G]: 754
fchr[T]: 1065
fchr[$]: 1737
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195035 bytes to primary EBWT file: ClpA_22_bowtie.1.ebwt
Wrote 224 bytes to secondary EBWT file: ClpA_22_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1737
    bwtLen: 1738
    sz: 435
    bwtSz: 435
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 55
    offsSz: 220
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 4
    numSides: 8
    numLines: 8
    ebwtTotLen: 512
    ebwtTotSz: 512
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 434
Using parameters --bmax 326 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 326 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 216.25 (target: 325)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 187
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 188
Getting block 2 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 250
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 251
Getting block 3 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 212
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 213
Getting block 4 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 122
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 123
Getting block 5 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 246
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 247
Getting block 6 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 305
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 306
Getting block 7 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 153
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 154
Getting block 8 of 8
  Reserving size (326) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 255
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 256
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 607
fchr[G]: 754
fchr[T]: 1065
fchr[$]: 1737
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195035 bytes to primary EBWT file: ClpA_22_bowtie.rev.1.ebwt
Wrote 224 bytes to secondary EBWT file: ClpA_22_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1737
    bwtLen: 1738
    sz: 435
    bwtSz: 435
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 55
    offsSz: 220
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 4
    numSides: 8
    numLines: 8
    ebwtTotLen: 512
    ebwtTotSz: 512
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_22 done.

Mapping ClpA_22 sequence to ClpA_22 done.
length variant dictionary is: 3
length read dictionary is: 362
length k_j dictionary is: 362
length proportion dictionary is: 3
total sum is: 362.0
computing proportions of ClpA_22 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448172

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_111_23_1.fq
	 the 2nd reads: clpA_111_23_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_111_23_1.aln
	 the 2nd reads: clpA_111_23_2.aln

  SAM Alignment File:
	clpA_111_23_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448172

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_67_23_1.fq
	 the 2nd reads: clpA_67_23_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_67_23_1.aln
	 the 2nd reads: clpA_67_23_2.aln

  SAM Alignment File:
	clpA_67_23_.sam

TGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGACTTAATAGATCATGTGTTTGTATTT
>clpA_139
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_139_22_
clpA_139_22_reference.fa
art_illumina -ss HS25 -sam -i clpA_139_22_reference.fa -p -l 76 -c 51 -m 200 -s 30 -o clpA_139_22_
bash temp.sh ClpA_22 ClpA_22
[3, 145, 51]
[u'>clpA_111\n', u'>clpA_67\n', u'>clpA_34\n', u'>clpA_56\n', u'>clpA_122\n', u'>clpA_216\n']
['', 'clpA_111']
>clpA_111
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAAAGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_111_23_
clpA_111_23_reference.fa
art_illumina -ss HS25 -sam -i clpA_111_23_reference.fa -p -l 76 -c 104 -m 200 -s 30 -o clpA_111_23_
['', 'clpA_67']
>clpA_111
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAAAGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_67
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_67_23_
clpA_67_23_reference.fa
art_illumina -ss HS25 -sam -i clpA_67_23_reference.fa -p -l 76 -c 9 -m 200 -s 30 -o clpA_67_23_
['', 'clpA_34']
>clpA_111
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAAAGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_67
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448172

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_34_23_1.fq
	 the 2nd reads: clpA_34_23_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_34_23_1.aln
	 the 2nd reads: clpA_34_23_2.aln

  SAM Alignment File:
	clpA_34_23_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448172

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_56_23_1.fq
	 the 2nd reads: clpA_56_23_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_56_23_1.aln
	 the 2nd reads: clpA_56_23_2.aln

  SAM Alignment File:
	clpA_56_23_.sam

TTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_34
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGATTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCAGTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_34_23_
clpA_34_23_reference.fa
art_illumina -ss HS25 -sam -i clpA_34_23_reference.fa -p -l 76 -c 34 -m 200 -s 30 -o clpA_34_23_
['', 'clpA_56']
>clpA_111
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAAAGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_67
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_34
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGATTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCAGTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_56
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATGCTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGGGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCGACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGAGAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_56_23_
clpA_56_23_reference.fa
art_illumina -ss HS25 -sam -i clpA_56_23_reference.fa -p -l 76 -c 19 -m 200 -s 30 -o clpA_56_23_
['', 'clpA_122']
>clpA_111
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAAAGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_67
AAAAAAGAACTTATTATACATGATAGTT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448172

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_122_23_1.fq
	 the 2nd reads: clpA_122_23_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_122_23_1.aln
	 the 2nd reads: clpA_122_23_2.aln

  SAM Alignment File:
	clpA_122_23_.sam

TAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_34
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGATTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCAGTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_56
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATGCTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGGGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCGACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGAGAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_122
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTCTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_122_23_
clpA_122_23_reference.fa
art_illumina -ss HS25 -sam -i clpA_122_23_reference.fa -p -l 76 -c 16 -m 200 -s 30 -o clpA_122_23_
['', 'clpA_216']
>clpA_111
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAAAGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_67
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_34
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGATTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCAGTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448172

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_216_23_1.fq
	 the 2nd reads: clpA_216_23_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_216_23_1.aln
	 the 2nd reads: clpA_216_23_2.aln

  SAM Alignment File:
	clpA_216_23_.sam

Settings:
  Output files: "ClpA_23_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_23.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 866
Using parameters --bmax 650 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 650 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 576.667 (target: 649)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 6
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 641
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 642
Getting block 2 of 6
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 474
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 475
Getting block 3 of 6
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 607
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 608
Getting block 4 of 6
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 588
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 589
Getting block 5 of 6
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 612
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 613
Getting block 6 of 6
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 538
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 539
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1179
fchr[G]: 1471
fchr[T]: 2093
fchr[$]: 3465
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195620 bytes to primary EBWT file: ClpA_23_bowtie.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_23_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3465
    bwtLen: 3466
    sz: 867
    bwtSz: 867
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 866
Using parameters --bmax 650 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 650 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 494.143 (target: 649)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 514
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 515
Getting block 2 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 637
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 638
Getting block 3 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 426
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 427
Getting block 4 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 597
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 598
Getting block 5 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 572
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 573
Getting block 6 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 326
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 327
Getting block 7 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 387
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 388
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1179
fchr[G]: 1471
fchr[T]: 2093
fchr[$]: 3465
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195620 bytes to primary EBWT file: ClpA_23_bowtie.rev.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_23_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3465
    bwtLen: 3466
    sz: 867
    bwtSz: 867
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_23 done.

Mapping ClpA_23 sequence to ClpA_23 done.
length variant dictionary is: 6
length read dictionary is: 380
length k_j dictionary is: 380
length proportion dictionary is: 6
total sum is: 380.0
computing proportions of ClpA_23 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448173

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_128_24_1.fq
	 the 2nd reads: clpA_128_24_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_128_24_1.aln
	 the 2nd reads: clpA_128_24_2.aln

  SAM Alignment File:
	clpA_128_24_.sam

TAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_56
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATGCTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGGGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCGACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGAGAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_122
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTCTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_216
AGAACAAGTATGATAATTGATGAGAGTATTTTATCCGAATTACTTTTGCATATTAAGCTTTTAAGAATTAAATTTTTCTTTAAAAATAGTACTCTTGGTATTTTCATTTTAATTGGATCTTCTGATGTAGATAAGAATAAACTTGCGTGTGTTTTATCAGAAGAACTTAATATGCCTAAACTTACTTTGGGAATGAGTGAATATTGTGATTTTGATGGTATTAATCGATTGATAGGACCAGTATATGGTTCTGAATCTTATGATGAACCTACTAAATTCTTTAAATTTTTAAATGAGTCTTTAAATTCAATTATTGTTTTGTCAGATTTTGATAAGTCTTCTAAGAGAGTTATAGATTTTTTTTTTGAAGGATTTAATACAGGTAGACTTTTTGATAATTTTGGTAGAAGTGTCAGTTTGTCAGGTAGCATTATAATTATAGATATTAATATAGAATATAGAGAACTTGATGGTATTGGATTTAAAAATGAAATTGTTGATATCAGAGGTTTATTAGAAAAACGTTTTTCTAATAAACTTCTAGACTTAGTAGATCATGTTTTTTTCTTT

clpA_216_23_
clpA_216_23_reference.fa
art_illumina -ss HS25 -sam -i clpA_216_23_reference.fa -p -l 76 -c 17 -m 200 -s 30 -o clpA_216_23_
bash temp.sh ClpA_23 ClpA_23
[104, 9, 34, 19, 16, 17]
[u'>clpA_128\n', u'>clpA_163\n']
['', 'clpA_128']
>clpA_128
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_128_24_
clpA_128_24_reference.fa
art_illumina -ss HS25 -sam -i clpA_128_24_reference.fa -p -l 76 -c 6 -m 200 -s 30 -o clpA_128_24_
['', 'clpA_163']
>clpA_128
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_163
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTATTATTGGTATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGACAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_163_24_
clpA_163_
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448173

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_163_24_1.fq
	 the 2nd reads: clpA_163_24_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_163_24_1.aln
	 the 2nd reads: clpA_163_24_2.aln

  SAM Alignment File:
	clpA_163_24_.sam

Settings:
  Output files: "ClpA_24_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_24.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 289
Using parameters --bmax 217 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 217 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 2; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 164.571 (target: 216)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 190
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 191
Getting block 2 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 206
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 207
Getting block 3 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 183
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 184
Getting block 4 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 108
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 109
Getting block 5 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 182
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 183
Getting block 6 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 69
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 70
Getting block 7 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 214
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 215
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 395
fchr[G]: 495
fchr[T]: 709
fchr[$]: 1158
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194883 bytes to primary EBWT file: ClpA_24_bowtie.1.ebwt
Wrote 152 bytes to secondary EBWT file: ClpA_24_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1158
    bwtLen: 1159
    sz: 290
    bwtSz: 290
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 37
    offsSz: 148
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 3
    numSides: 6
    numLines: 6
    ebwtTotLen: 384
    ebwtTotSz: 384
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 289
Using parameters --bmax 217 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 217 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 164.571 (target: 216)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 161
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 162
Getting block 2 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 117
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 118
Getting block 3 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 199
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 200
Getting block 4 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 200
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 201
Getting block 5 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 205
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 206
Getting block 6 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 105
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 106
Getting block 7 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 165
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 166
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 395
fchr[G]: 495
fchr[T]: 709
fchr[$]: 1158
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194883 bytes to primary EBWT file: ClpA_24_bowtie.rev.1.ebwt
Wrote 152 bytes to secondary EBWT file: ClpA_24_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1158
    bwtLen: 1159
    sz: 290
    bwtSz: 290
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 37
    offsSz: 148
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 3
    numSides: 6
    numLines: 6
    ebwtTotLen: 384
    ebwtTotSz: 384
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_24 done.

Mapping ClpA_24 sequence to ClpA_24 done.
length variant dictionary is: 2
length read dictionary is: 364
length k_j dictionary is: 364
length proportion dictionary is: 2
total sum is: 364.0
computing proportions of ClpA_24 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448173

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_116_25_1.fq
	 the 2nd reads: clpA_116_25_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_116_25_1.aln
	 the 2nd reads: clpA_116_25_2.aln

  SAM Alignment File:
	clpA_116_25_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448173

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_168_25_1.fq
	 the 2nd reads: clpA_168_25_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_168_25_1.aln
	 the 2nd reads: clpA_168_25_2.aln

  SAM Alignment File:
	clpA_168_25_.sam

24_reference.fa
art_illumina -ss HS25 -sam -i clpA_163_24_reference.fa -p -l 76 -c 192 -m 200 -s 30 -o clpA_163_24_
bash temp.sh ClpA_24 ClpA_24
[6, 192]
[u'>clpA_116\n', u'>clpA_168\n', u'>clpA_117\n', u'>clpA_5\n', u'>clpA_128\n', u'>clpA_58\n', u'>clpA_210\n']
['', 'clpA_116']
>clpA_116
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGCTGAGAGCAACGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_116_25_
clpA_116_25_reference.fa
art_illumina -ss HS25 -sam -i clpA_116_25_reference.fa -p -l 76 -c 7 -m 200 -s 30 -o clpA_116_25_
['', 'clpA_168']
>clpA_116
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGCTGAGAGCAACGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_168
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGCCTTAATATGGGCGAGTATGACGGTTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAAAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_168_25_
clpA_168_25_reference.fa
art_illumina -ss HS25 -sam -i clpA_168_25_reference.fa -p -l 76 -c 44 -m 200 -s 30 -o clpA_168_25_
['', 'clpA_117']
>clpA_116
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGCTGAGAGCAACGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_168
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGCCTTAATATGGGCGAGTATGACGGTTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAAAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_117
AAAAAGGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCCTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAG
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448173

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_117_25_1.fq
	 the 2nd reads: clpA_117_25_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_117_25_1.aln
	 the 2nd reads: clpA_117_25_2.aln

  SAM Alignment File:
	clpA_117_25_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448173

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_5_25_1.fq
	 the 2nd reads: clpA_5_25_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_5_25_1.aln
	 the 2nd reads: clpA_5_25_2.aln

  SAM Alignment File:
	clpA_5_25_.sam

TTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_117_25_
clpA_117_25_reference.fa
art_illumina -ss HS25 -sam -i clpA_117_25_reference.fa -p -l 76 -c 5 -m 200 -s 30 -o clpA_117_25_
['', 'clpA_5']
>clpA_116
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGCTGAGAGCAACGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_168
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGCCTTAATATGGGCGAGTATGACGGTTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAAAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_117
AAAAAGGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCCTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_5
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_5_25_
clpA_5_25_reference.fa
art_illumina -ss HS25 -sam -i clpA_5_25_reference.fa -p -l 76 -c 28 -m 200 -s 30 -o clpA_5_25_
['', 'clpA_128']
>clpA_116
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGCTGAGAGCAACGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_168
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGCCTTAATATGGGCGAGTATGACGGTTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAAAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_117
AAAAAGGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448173

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_128_25_1.fq
	 the 2nd reads: clpA_128_25_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_128_25_1.aln
	 the 2nd reads: clpA_128_25_2.aln

  SAM Alignment File:
	clpA_128_25_.sam

TTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCCTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_5
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_128
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_128_25_
clpA_128_25_reference.fa
art_illumina -ss HS25 -sam -i clpA_128_25_reference.fa -p -l 76 -c 33 -m 200 -s 30 -o clpA_128_25_
['', 'clpA_58']
>clpA_116
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGCTGAGAGCAACGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_168
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGCCTTAATATGGGCGAGTATGACGGTTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAAAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_117
AAAAAGGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCCTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_5
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_128
AAAAAAGAACTTATTATACATGATAACTTGG
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448173

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_58_25_1.fq
	 the 2nd reads: clpA_58_25_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_58_25_1.aln
	 the 2nd reads: clpA_58_25_2.aln

  SAM Alignment File:
	clpA_58_25_.sam

TACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_58
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGACACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTGTTT

clpA_58_25_
clpA_58_25_reference.fa
art_illumina -ss HS25 -sam -i clpA_58_25_reference.fa -p -l 76 -c 34 -m 200 -s 30 -o clpA_58_25_
['', 'clpA_210']
>clpA_116
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGCTGAGAGCAACGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_168
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGCCTTAATATGGGCGAGTATGACGGTTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAAAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_117
AAAAAGGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTAAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCCTCAATGTTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTTTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_5
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_128
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448173

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_210_25_1.fq
	 the 2nd reads: clpA_210_25_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_210_25_1.aln
	 the 2nd reads: clpA_210_25_2.aln

  SAM Alignment File:
	clpA_210_25_.sam

Settings:
  Output files: "ClpA_25_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_25.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 1013
Using parameters --bmax 760 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 760 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 578.143 (target: 759)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 702
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 703
Getting block 2 of 7
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 721
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 722
Getting block 3 of 7
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 678
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 679
Getting block 4 of 7
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 332
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 333
Getting block 5 of 7
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 566
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 567
Getting block 6 of 7
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 583
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 584
Getting block 7 of 7
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 465
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 466
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1410
fchr[G]: 1766
fchr[T]: 2489
fchr[$]: 4053
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195901 bytes to primary EBWT file: ClpA_25_bowtie.1.ebwt
Wrote 512 bytes to secondary EBWT file: ClpA_25_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 4053
    bwtLen: 4054
    sz: 1014
    bwtSz: 1014
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 127
    offsSz: 508
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 10
    numSides: 20
    numLines: 20
    ebwtTotLen: 1280
    ebwtTotSz: 1280
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 1013
Using parameters --bmax 760 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 760 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 505.75 (target: 759)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 437
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 438
Getting block 2 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 565
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 566
Getting block 3 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 384
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 385
Getting block 4 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 480
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 481
Getting block 5 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 516
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 517
Getting block 6 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 706
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 707
Getting block 7 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 409
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 410
Getting block 8 of 8
  Reserving size (760) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 549
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 550
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1410
fchr[G]: 1766
fchr[T]: 2489
fchr[$]: 4053
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195901 bytes to primary EBWT file: ClpA_25_bowtie.rev.1.ebwt
Wrote 512 bytes to secondary EBWT file: ClpA_25_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 4053
    bwtLen: 4054
    sz: 1014
    bwtSz: 1014
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 127
    offsSz: 508
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 10
    numSides: 20
    numLines: 20
    ebwtTotLen: 1280
    ebwtTotSz: 1280
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_25 done.

Mapping ClpA_25 sequence to ClpA_25 done.
length variant dictionary is: 7
length read dictionary is: 392
length k_j dictionary is: 392
length proportion dictionary is: 7
total sum is: 392.0
computing proportions of ClpA_25 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448174

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_46_26_1.fq
	 the 2nd reads: clpA_46_26_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_46_26_1.aln
	 the 2nd reads: clpA_46_26_2.aln

  SAM Alignment File:
	clpA_46_26_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448174

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_153_26_1.fq
	 the 2nd reads: clpA_153_26_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_153_26_1.aln
	 the 2nd reads: clpA_153_26_2.aln

  SAM Alignment File:
	clpA_153_26_.sam

Settings:
  Output files: "ClpA_26_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_26.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 290
Using parameters --bmax 218 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 218 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 165 (target: 217)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (218) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 204
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 205
Getting block 2 of 7
  Reserving size (218) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 98
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 99
Getting block 3 of 7
  Reserving size (218) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 178
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 179
Getting block 4 of 7
  Reserving size (218) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 155
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 156
Getting block 5 of 7
  Reserving size (218) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 169
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 170
Getting block 6 of 7
  Reserving size (218) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 180
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 181
Getting block 7 of 7
  Reserving size (218) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 171
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 172
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 403
fchr[G]: 505
fchr[T]: 712
fchr[$]: 1161
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194882 bytes to primary EBWT file: ClpA_26_bowtie.1.ebwt
Wrote 152 bytes to secondary EBWT file: ClpA_26_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1161
    bwtLen: 1162
    sz: 291
    bwtSz: 291
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 37
    offsSz: 148
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 3
    numSides: 6
    numLines: 6
    ebwtTotLen: 384
    ebwtTotSz: 384
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 290
Using parameters --bmax 218 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 218 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 165 (target: 217)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (218) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 94
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 95
Getting block 2 of 7
  Reserving size (218) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 131
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 132
Getting block 3 of 7
  Reserving size (218) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 195
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 196
Getting block 4 of 7
  Reserving size (218) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 195
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 196
Getting block 5 of 7
  Reserving size (218) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 187
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 188
Getting block 6 of 7
  Reserving size (218) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 139
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 140
Getting block 7 of 7
  Reserving size (218) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 214
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 215
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 403
fchr[G]: 505
fchr[T]: 712
fchr[$]: 1161
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194882 bytes to primary EBWT file: ClpA_26_bowtie.rev.1.ebwt
Wrote 152 bytes to secondary EBWT file: ClpA_26_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1161
    bwtLen: 1162
    sz: 291
    bwtSz: 291
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 37
    offsSz: 148
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 3
    numSides: 6
    numLines: 6
    ebwtTotLen: 384
    ebwtTotSz: 384
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_26 done.

Mapping ClpA_26 sequence to ClpA_26 done.
length variant dictionary is: 2
length read dictionary is: 364
length k_j dictionary is: 364
length proportion dictionary is: 2
total sum is: 364.0
computing proportions of ClpA_26 done

TAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_58
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGACACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTGTTT
>clpA_210
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTAGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGGGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTGTTC

clpA_210_25_
clpA_210_25_reference.fa
art_illumina -ss HS25 -sam -i clpA_210_25_reference.fa -p -l 76 -c 49 -m 200 -s 30 -o clpA_210_25_
bash temp.sh ClpA_25 ClpA_25
[7, 44, 5, 28, 33, 34, 49]
[u'>clpA_46\n', u'>clpA_153\n']
['', 'clpA_46']
>clpA_46
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_46_26_
clpA_46_26_reference.fa
art_illumina -ss HS25 -sam -i clpA_46_26_reference.fa -p -l 76 -c 62 -m 200 -s 30 -o clpA_46_26_
['', 'clpA_153']
>clpA_46
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_153
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGTAAATTAACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGCAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTGGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_153_26_
clpA_153_26_reference.fa
art_illumina -ss HS25 -sam -i clpA_153_26_reference.fa -p -l 76 -c 136 -m 200 -s 30 -o clpA_153_26_
bash temp.sh ClpA_26 ClpA_26
[62, 136]
[u'>clpA_14\n', u'>clpA_151\n', u'>clpA_201\n', u'>clpA_115\n', u'>clpA_55\n', u'>clpA_172\n']
['', 'clpA_14']
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTAT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448174

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_14_27_1.fq
	 the 2nd reads: clpA_14_27_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_14_27_1.aln
	 the 2nd reads: clpA_14_27_2.aln

  SAM Alignment File:
	clpA_14_27_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448174

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_151_27_1.fq
	 the 2nd reads: clpA_151_27_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_151_27_1.aln
	 the 2nd reads: clpA_151_27_2.aln

  SAM Alignment File:
	clpA_151_27_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448174

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_201_27_1.fq
	 the 2nd reads: clpA_201_27_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_201_27_1.aln
	 the 2nd reads: clpA_201_27_2.aln

  SAM Alignment File:
	clpA_201_27_.sam

TTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_14_27_
clpA_14_27_reference.fa
art_illumina -ss HS25 -sam -i clpA_14_27_reference.fa -p -l 76 -c 50 -m 200 -s 30 -o clpA_14_27_
['', 'clpA_151']
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_151
AAAAAAGAACTTATTATGCATGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATGCAATTTGCTTGCCAACAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGTTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAATATAGTGATTTTAATTCTCTGGATAGATTGATTGGTCCTGTTTTAAACAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTGAACAAGTCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAAGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACAGGAAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAATAATAAGTGTTAATGCGGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCTGGGGGTAATGATTTTAGTTATATTTTAGAAAAAAGATTGCCCACTGAGTTTTTAGAGTTAATAGATCATGTTTTTGTATTT

clpA_151_27_
clpA_151_27_reference.fa
art_illumina -ss HS25 -sam -i clpA_151_27_reference.fa -p -l 76 -c 25 -m 200 -s 30 -o clpA_151_27_
['', 'clpA_201']
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_151
AAAAAAGAACTTATTATGCATGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATGCAATTTGCTTGCCAACAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGTTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAATATAGTGATTTTAATTCTCTGGATAGATTGATTGGTCCTGTTTTAAACAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTGAACAAGTCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAAGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACAGGAAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAATAATAAGTGTTAATGCGGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCTGGGGGTAATGATTTTAGTTATATTTTAGAAAAAAGATTGCCCACTGAGTTTTTAGAGTTAATAGATCATGTTTTTGTATTT
>clpA_201
AGAGAGCATATGATCATTGATGAAGAGCTTTTATCTGATTTGATATTAAACATAAAACTTTTAAGGATTAGATTTTTATTAAAAAATAATACTCTTGGTATTTTTATTTTAATGGGTTCCTCTGATATAAATAAGAGTAAACTTGCATCTATTTTATCAGAAGAGCTTAAGCTTCCTAAGTTTACTTTGGGAATGAGTGAGTATGGCGATTTTGATGGAATTAATAGATTAATAGGACCTGTATATGGAGCTGAGTTTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTAAAACTTCAAGCTCAATTATTTTCCTAGCAGATTTTGATAAATCTCCAAAGAGAGTCATAGATTTTTTTTTTGAAGGATTTAAGACTGGGAAACTTTTTGATAATTTTGGTAGAGATGTAAGTTTGTCAGATAGTATAATAATAATAGATATTAATGTGGATCACGGAGAACTTAATGGTATTGGATTTAAAAATGAGACAGTAAATAGCAGGAACCTACTAGAAAAGCGTTTTTCTAGTAGGTTCCTGGATTTAGTGGATCACATTTTTTTCTTT

clpA_201_27_
clpA_201_27_reference.fa
art_illumina -ss HS25 -sam -i clpA_201_27_reference.fa -p -l 76 -c 30 -m 200 -s 30 -o clpA_201_27_
['', 'clpA_115']
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTAT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448174

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_115_27_1.fq
	 the 2nd reads: clpA_115_27_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_115_27_1.aln
	 the 2nd reads: clpA_115_27_2.aln

  SAM Alignment File:
	clpA_115_27_.sam

CAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_151
AAAAAAGAACTTATTATGCATGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATGCAATTTGCTTGCCAACAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGTTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAATATAGTGATTTTAATTCTCTGGATAGATTGATTGGTCCTGTTTTAAACAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTGAACAAGTCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAAGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACAGGAAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAATAATAAGTGTTAATGCGGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCTGGGGGTAATGATTTTAGTTATATTTTAGAAAAAAGATTGCCCACTGAGTTTTTAGAGTTAATAGATCATGTTTTTGTATTT
>clpA_201
AGAGAGCATATGATCATTGATGAAGAGCTTTTATCTGATTTGATATTAAACATAAAACTTTTAAGGATTAGATTTTTATTAAAAAATAATACTCTTGGTATTTTTATTTTAATGGGTTCCTCTGATATAAATAAGAGTAAACTTGCATCTATTTTATCAGAAGAGCTTAAGCTTCCTAAGTTTACTTTGGGAATGAGTGAGTATGGCGATTTTGATGGAATTAATAGATTAATAGGACCTGTATATGGAGCTGAGTTTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTAAAACTTCAAGCTCAATTATTTTCCTAGCAGATTTTGATAAATCTCCAAAGAGAGTCATAGATTTTTTTTTTGAAGGATTTAAGACTGGGAAACTTTTTGATAATTTTGGTAGAGATGTAAGTTTGTCAGATAGTATAATAATAATAGATATTAATGTGGATCACGGAGAACTTAATGGTATTGGATTTAAAAATGAGACAGTAAATAGCAGGAACCTACTAGAAAAGCGTTTTTCTAGTAGGTTCCTGGATTTAGTGGATCACATTTTTTTCTTT
>clpA_115
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAACGACTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_115_27_
clpA_115_27_reference.fa
art_illumina -ss HS25 -sam -i clpA_115_27_reference.fa -p -l 76 -c 44 -m 200 -s 30 -o clpA_115_27_
['', 'clpA_55']
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_151
AAAAAAGAACTTATTATGCATGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATGCAATTTGCTTGCCAACAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGTTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAATATAGTGATTTTAATTCTCTGGATAGATTGATTGGTCCTGTTTTAAACAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTGAACAAGTCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAAGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACAGGAAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAATAATAAGTGTTAATGCGGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCTGGGGGTAATGATTTTAGTTATATTTTAGAAAAAAGATTGCCCACTGAGTTTTTAGAGTTAATAGATCATGTTTTTGTATTT
>clpA_201
AGAGAGCATATGATCATTGATGAAGAGCTTTTATCTGATTTGATATTAAACATAAAACTTTTAAGGATTAGATTTTTATTAAAAAATAATACTCTTGGTATTTTTATTTTAATGGGTTCCTCTGATATAAATAAGAGTAAACTTGCATCTATTTTATCAGAAGAGCTTAAGCTTCCTAAGTTTACTTTGGGAATGAGTGAGTATGGCGATTTTGATGGAATTAATAGATTAATAGGACCTGTATATGGAGCTGAGTTTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTAAAACTTCAAGCTCAATTATTTTCCTAGCAGATTTTGATAAATCTCCAAAGAGAGTCATAGATTTTTTTTTTGAAGGATTTAAGACTGGGAAACTTTTTGATAATTTTGGTAGAGATGTAAGTTTGTCAGATAGTATAATAATAATAGATATTAATGTGGATCACGGAGAACTTAATGGTATTGGATTTAAAAATGAGACAGTAAATAGCAGGAACCTACTAGAAAAGCGTTTTTCTAGTAGGTTCCTGGATTTAGTGGATCACATTTTTTTCTTT
>clpA_115
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAAT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448174

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_55_27_1.fq
	 the 2nd reads: clpA_55_27_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_55_27_1.aln
	 the 2nd reads: clpA_55_27_2.aln

  SAM Alignment File:
	clpA_55_27_.sam

GATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAACGACTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_55
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAGGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_55_27_
clpA_55_27_reference.fa
art_illumina -ss HS25 -sam -i clpA_55_27_reference.fa -p -l 76 -c 33 -m 200 -s 30 -o clpA_55_27_
['', 'clpA_172']
>clpA_14
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_151
AAAAAAGAACTTATTATGCATGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATGCAATTTGCTTGCCAACAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGTTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAATATAGTGATTTTAATTCTCTGGATAGATTGATTGGTCCTGTTTTAAACAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTGAACAAGTCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAAGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACAGGAAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAATAATAAGTGTTAATGCGGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCTGGGGGTAATGATTTTAGTTATATTTTAGAAAAAAGATTGCCCACTGAGTTTTTAGAGTTAATAGATCATGTTTTTGTATTT
>clpA_201
AGAGAGCATATGATCATTGATGAAGAGCTTTTATCTGATTTGATATTAAACATAAAACTTTTAAGGATTAGATTTTTATTAAAAAATAATACTCTTGGTATTTTTATTTTAATGGGTTCCTCTGATATAAATAAGAGTAAACTTGCATCTATTTTATCAGAAGAGCTTAAGCTTCCTAAGTTTACTTTGGGAATGAGTGAGTATGGCGATTTTGATGGAATTAATAGATTAATAGGACCTGTATATGGAGCTGAGTTTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTAAAACTTCAAGCTCAATTATTTTCCTAGCAGATTTTGATAAATCTCCAAAGAGAGTCATAGATTTTTTTTTTGAAGGATTTAAGACTGGGAAACTTTTTGATAATTTTGGTAGAGATGTAAGTTTGTCAGATAGTATAATAATAATAGATATTAATGTGGATCACGGAGAACTTAATGGTATTGGATTTAAAAATGAGACAGTAAATAGCAGGAACCTACTAGAAAAGCGTTTTTCTAGTAGGTTCCTGGATTTAGTGGATCACATTTTTTTCTTT
>clpA_115
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAACGACTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_55
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAGGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_172
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTG
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448174

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_172_27_1.fq
	 the 2nd reads: clpA_172_27_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_172_27_1.aln
	 the 2nd reads: clpA_172_27_2.aln

  SAM Alignment File:
	clpA_172_27_.sam

Settings:
  Output files: "ClpA_27_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_27.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 866
Using parameters --bmax 650 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 650 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 494.143 (target: 649)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 637
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 638
Getting block 2 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 250
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 251
Getting block 3 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 601
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 602
Getting block 4 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 573
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 574
Getting block 5 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 427
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 428
Getting block 6 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 419
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 420
Getting block 7 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 552
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 553
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1169
fchr[G]: 1479
fchr[T]: 2125
fchr[$]: 3465
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195621 bytes to primary EBWT file: ClpA_27_bowtie.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_27_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3465
    bwtLen: 3466
    sz: 867
    bwtSz: 867
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 866
Using parameters --bmax 650 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 650 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 494.143 (target: 649)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 520
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 521
Getting block 2 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 584
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 585
Getting block 3 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 477
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 478
Getting block 4 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 640
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 641
Getting block 5 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 552
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 553
Getting block 6 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 597
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 598
Getting block 7 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 89
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 90
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1169
fchr[G]: 1479
fchr[T]: 2125
fchr[$]: 3465
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195621 bytes to primary EBWT file: ClpA_27_bowtie.rev.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_27_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3465
    bwtLen: 3466
    sz: 867
    bwtSz: 867
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_27 done.

Mapping ClpA_27 sequence to ClpA_27 done.
length variant dictionary is: 6
length read dictionary is: 392
length k_j dictionary is: 392
length proportion dictionary is: 6
total sum is: 392.0
computing proportions of ClpA_27 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448174

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_44_28_1.fq
	 the 2nd reads: clpA_44_28_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_44_28_1.aln
	 the 2nd reads: clpA_44_28_2.aln

  SAM Alignment File:
	clpA_44_28_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448175

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_136_28_1.fq
	 the 2nd reads: clpA_136_28_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_136_28_1.aln
	 the 2nd reads: clpA_136_28_2.aln

  SAM Alignment File:
	clpA_136_28_.sam

CCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_172_27_
clpA_172_27_reference.fa
art_illumina -ss HS25 -sam -i clpA_172_27_reference.fa -p -l 76 -c 18 -m 200 -s 30 -o clpA_172_27_
bash temp.sh ClpA_27 ClpA_27
[50, 25, 30, 44, 33, 18]
[u'>clpA_44\n', u'>clpA_136\n', u'>clpA_70\n', u'>clpA_139\n']
['', 'clpA_44']
>clpA_44
AAAAAAGAACTTATTATAAATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_44_28_
clpA_44_28_reference.fa
art_illumina -ss HS25 -sam -i clpA_44_28_reference.fa -p -l 76 -c 16 -m 200 -s 30 -o clpA_44_28_
['', 'clpA_136']
>clpA_44
AAAAAAGAACTTATTATAAATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_136
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATCCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_136_28_
clpA_136_28_reference.fa
art_illumina -ss HS25 -sam -i clpA_136_28_reference.fa -p -l 76 -c 48 -m 200 -s 30 -o clpA_136_28_
['', 'clpA_70']
>clpA_44
AAAAAAGAACTTATTATAAATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_136
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATCCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_70
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448175

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_70_28_1.fq
	 the 2nd reads: clpA_70_28_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_70_28_1.aln
	 the 2nd reads: clpA_70_28_2.aln

  SAM Alignment File:
	clpA_70_28_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448175

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_139_28_1.fq
	 the 2nd reads: clpA_139_28_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_139_28_1.aln
	 the 2nd reads: clpA_139_28_2.aln

  SAM Alignment File:
	clpA_139_28_.sam

Settings:
  Output files: "ClpA_28_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_28.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 579
Using parameters --bmax 435 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 435 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 2; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 330 (target: 434)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 382
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 383
Getting block 2 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 433
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 434
Getting block 3 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 402
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 403
Getting block 4 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 161
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 162
Getting block 5 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 285
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 286
Getting block 6 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 428
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 429
Getting block 7 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 219
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 220
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 805
fchr[G]: 1004
fchr[T]: 1410
fchr[$]: 2316
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195315 bytes to primary EBWT file: ClpA_28_bowtie.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_28_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2316
    bwtLen: 2317
    sz: 579
    bwtSz: 580
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 579
Using parameters --bmax 435 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 435 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 288.625 (target: 434)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 245
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 246
Getting block 2 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 320
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 321
Getting block 3 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 231
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 232
Getting block 4 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 259
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 260
Getting block 5 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 286
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 287
Getting block 6 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 415
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 416
Getting block 7 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 241
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 242
Getting block 8 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 312
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 313
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 805
fchr[G]: 1004
fchr[T]: 1410
fchr[$]: 2316
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195315 bytes to primary EBWT file: ClpA_28_bowtie.rev.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_28_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2316
    bwtLen: 2317
    sz: 579
    bwtSz: 580
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_28 done.

Mapping ClpA_28 sequence to ClpA_28 done.
length variant dictionary is: 4
length read dictionary is: 378
length k_j dictionary is: 378
length proportion dictionary is: 4
total sum is: 378.0
computing proportions of ClpA_28 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448175

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_213_29_1.fq
	 the 2nd reads: clpA_213_29_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_213_29_1.aln
	 the 2nd reads: clpA_213_29_2.aln

  SAM Alignment File:
	clpA_213_29_.sam

AAATTTAATTTACTTGCCAACAGAAGCACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAATGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_70_28_
clpA_70_28_reference.fa
art_illumina -ss HS25 -sam -i clpA_70_28_reference.fa -p -l 76 -c 41 -m 200 -s 30 -o clpA_70_28_
['', 'clpA_139']
>clpA_44
AAAAAAGAACTTATTATAAATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_136
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATCCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_70
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGCACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAATGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_139
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_139_28_
clpA_139_28_reference.fa
art_illumina -ss HS25 -sam -i clpA_139_28_reference.fa -p -l 76 -c 94 -m 200 -s 30 -o clpA_139_28_
bash temp.sh ClpA_28 ClpA_28
[16, 48, 41, 94]
[u'>clpA_213\n', u'>clpA_43\n', u'>clpA_25\n', u'>clpA_155\n', u'>clpA_210\n', u'>clpA_161\n']
['', 'clpA_213']
>clpA_213
AGAACAAGTATGATAATTGATGAGAGTATTTTATCCGAATTACTTTTGCATATTAAGCTTTTAAGAATTAAATTTTTCTTTAAAAATAGTACTCTTGGTATTTTCATTTTAATTGGATCTTCTGATGTAGATAAGAATAAACTTGCGTGTGTTTTATCAGAAGAACTTAATATGCCTAAACTTACTTTGGGAATGAGTGAATATTGTGATTTTGATGGTATTAATCGATTGATAGGACCAGTATATGGTTCTGAAGCTTATGATGAACCTACTAAATTCTTTAAATTTTTAAATGAGTCTTTAAATTCAATTATTGTTTTGTCAGATTTTGATAAGTCTTCTAAGAGAGTTATAGATTTTTTTTTGAAGGATTTAATACAGGTAGACTTTTTGATAATTTTGGTAGAAGTGTCAGTTTGTCAGGTAGCATTATAATTATAGATATTAATATAGAATATAGAGAACTTGATGGTATTATTGGATTTAAAAATGAAACTGTTGATATCAGAAGTTTATTAGAAAAACGTTTTTCTAATAAACTTCTAGACTTAGTAGATCATGTTTTTTTCTTT

clpA_213_29_
clpA_213_29_reference.fa
art_illumina -ss HS25 -sam -i clpA_213_29_reference.fa -p -l 76 -c 35 -m 200 -s 30 -o clpA_213_29_
['', 'clpA_43']
>clpA_213
AGAACAAGTATGATAATTGATGAGAGT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448175

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_43_29_1.fq
	 the 2nd reads: clpA_43_29_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_43_29_1.aln
	 the 2nd reads: clpA_43_29_2.aln

  SAM Alignment File:
	clpA_43_29_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448175

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_25_29_1.fq
	 the 2nd reads: clpA_25_29_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_25_29_1.aln
	 the 2nd reads: clpA_25_29_2.aln

  SAM Alignment File:
	clpA_25_29_.sam

ATTTTATCCGAATTACTTTTGCATATTAAGCTTTTAAGAATTAAATTTTTCTTTAAAAATAGTACTCTTGGTATTTTCATTTTAATTGGATCTTCTGATGTAGATAAGAATAAACTTGCGTGTGTTTTATCAGAAGAACTTAATATGCCTAAACTTACTTTGGGAATGAGTGAATATTGTGATTTTGATGGTATTAATCGATTGATAGGACCAGTATATGGTTCTGAAGCTTATGATGAACCTACTAAATTCTTTAAATTTTTAAATGAGTCTTTAAATTCAATTATTGTTTTGTCAGATTTTGATAAGTCTTCTAAGAGAGTTATAGATTTTTTTTTGAAGGATTTAATACAGGTAGACTTTTTGATAATTTTGGTAGAAGTGTCAGTTTGTCAGGTAGCATTATAATTATAGATATTAATATAGAATATAGAGAACTTGATGGTATTATTGGATTTAAAAATGAAACTGTTGATATCAGAAGTTTATTAGAAAAACGTTTTTCTAATAAACTTCTAGACTTAGTAGATCATGTTTTTTTCTTT
>clpA_43
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_43_29_
clpA_43_29_reference.fa
art_illumina -ss HS25 -sam -i clpA_43_29_reference.fa -p -l 76 -c 23 -m 200 -s 30 -o clpA_43_29_
['', 'clpA_25']
>clpA_213
AGAACAAGTATGATAATTGATGAGAGTATTTTATCCGAATTACTTTTGCATATTAAGCTTTTAAGAATTAAATTTTTCTTTAAAAATAGTACTCTTGGTATTTTCATTTTAATTGGATCTTCTGATGTAGATAAGAATAAACTTGCGTGTGTTTTATCAGAAGAACTTAATATGCCTAAACTTACTTTGGGAATGAGTGAATATTGTGATTTTGATGGTATTAATCGATTGATAGGACCAGTATATGGTTCTGAAGCTTATGATGAACCTACTAAATTCTTTAAATTTTTAAATGAGTCTTTAAATTCAATTATTGTTTTGTCAGATTTTGATAAGTCTTCTAAGAGAGTTATAGATTTTTTTTTGAAGGATTTAATACAGGTAGACTTTTTGATAATTTTGGTAGAAGTGTCAGTTTGTCAGGTAGCATTATAATTATAGATATTAATATAGAATATAGAGAACTTGATGGTATTATTGGATTTAAAAATGAAACTGTTGATATCAGAAGTTTATTAGAAAAACGTTTTTCTAATAAACTTCTAGACTTAGTAGATCATGTTTTTTTCTTT
>clpA_43
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_25
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_25_29_
clpA_25_29_reference.fa
art_illumina -ss HS25 -sam -i clpA_25_29_reference.fa -p -l 76 -c 41 -m 200 -s 30 -o clpA_25_29_
['', 'clpA_155']
>clpA_213
AGAACAAGTATGATAATTGATGAGAGTATTTTATCCGAATTACTTTTGCATATTAAGCTTTTAAGAATTAAATTTTTCTTTAAAAATAGTACTCTTGGTATTTTCATTTTAATTGGATCTTCTGATGTAGATAAGAATAAACTTGCGTGTGTTTTATCAGAAGAACTTAATATGCCTAAACTTACTTTGGGAATGAGTGAATATTGTGATTTTGATGGTATTAATCGATTGATAGGACCAGTATATGGTTCTGAAGCTTATGATGAACCTACTAAATTCTTTAAATTTTTAAATGAGTCTTTAAATTCAATTATTGTTTTGTCAGATTTTGATAAGTCTTCTAAGAGAGTTATAGATTTTTTTTTGAAGGATTTAATACAGGTAGACTTTTTGATAATTTTGGTAGAAGTGTCAGTTTGTCAGGTAGCATTATAATTATAGATATTAATATAGAATATAGAGAACTTGATGGTATTATTGGATTTAAAAATGAAACTGTTGATATCAGAAGTTTATTAGAAAAACGTTTTTCTAATAAACTTCTAGACTTAGTAGATCATGTTTTTTTCTTT
>clpA_43
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448175

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_155_29_1.fq
	 the 2nd reads: clpA_155_29_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_155_29_1.aln
	 the 2nd reads: clpA_155_29_2.aln

  SAM Alignment File:
	clpA_155_29_.sam

CTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_25
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_155
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_155_29_
clpA_155_29_reference.fa
art_illumina -ss HS25 -sam -i clpA_155_29_reference.fa -p -l 76 -c 27 -m 200 -s 30 -o clpA_155_29_
['', 'clpA_210']
>clpA_213
AGAACAAGTATGATAATTGATGAGAGTATTTTATCCGAATTACTTTTGCATATTAAGCTTTTAAGAATTAAATTTTTCTTTAAAAATAGTACTCTTGGTATTTTCATTTTAATTGGATCTTCTGATGTAGATAAGAATAAACTTGCGTGTGTTTTATCAGAAGAACTTAATATGCCTAAACTTACTTTGGGAATGAGTGAATATTGTGATTTTGATGGTATTAATCGATTGATAGGACCAGTATATGGTTCTGAAGCTTATGATGAACCTACTAAATTCTTTAAATTTTTAAATGAGTCTTTAAATTCAATTATTGTTTTGTCAGATTTTGATAAGTCTTCTAAGAGAGTTATAGATTTTTTTTTGAAGGATTTAATACAGGTAGACTTTTTGATAATTTTGGTAGAAGTGTCAGTTTGTCAGGTAGCATTATAATTATAGATATTAATATAGAATATAGAGAACTTGATGGTATTATTGGATTTAAAAATGAAACTGTTGATATCAGAAGTTTATTAGAAAAACGTTTTTCTAATAAACTTCTAGACTTAGTAGATCATGTTTTTTTCTTT
>clpA_43
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_25
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_155
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_210
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGC
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448175

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_210_29_1.fq
	 the 2nd reads: clpA_210_29_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_210_29_1.aln
	 the 2nd reads: clpA_210_29_2.aln

  SAM Alignment File:
	clpA_210_29_.sam

GGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTAGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGGGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTGTTC

clpA_210_29_
clpA_210_29_reference.fa
art_illumina -ss HS25 -sam -i clpA_210_29_reference.fa -p -l 76 -c 50 -m 200 -s 30 -o clpA_210_29_
['', 'clpA_161']
>clpA_213
AGAACAAGTATGATAATTGATGAGAGTATTTTATCCGAATTACTTTTGCATATTAAGCTTTTAAGAATTAAATTTTTCTTTAAAAATAGTACTCTTGGTATTTTCATTTTAATTGGATCTTCTGATGTAGATAAGAATAAACTTGCGTGTGTTTTATCAGAAGAACTTAATATGCCTAAACTTACTTTGGGAATGAGTGAATATTGTGATTTTGATGGTATTAATCGATTGATAGGACCAGTATATGGTTCTGAAGCTTATGATGAACCTACTAAATTCTTTAAATTTTTAAATGAGTCTTTAAATTCAATTATTGTTTTGTCAGATTTTGATAAGTCTTCTAAGAGAGTTATAGATTTTTTTTTGAAGGATTTAATACAGGTAGACTTTTTGATAATTTTGGTAGAAGTGTCAGTTTGTCAGGTAGCATTATAATTATAGATATTAATATAGAATATAGAGAACTTGATGGTATTATTGGATTTAAAAATGAAACTGTTGATATCAGAAGTTTATTAGAAAAACGTTTTTCTAATAAACTTCTAGACTTAGTAGATCATGTTTTTTTCTTT
>clpA_43
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATCTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_25
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_155
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_210
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTAGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGGGAAGAGATTTCCTAATAAATTTTTAGAGTTAATAGATTATGTTCTTTTGTTC
>clpA_161
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGTTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATGGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGACAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTAC
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448175

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_161_29_1.fq
	 the 2nd reads: clpA_161_29_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_161_29_1.aln
	 the 2nd reads: clpA_161_29_2.aln

  SAM Alignment File:
	clpA_161_29_.sam

Settings:
  Output files: "ClpA_29_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_29.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 866
Using parameters --bmax 650 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 650 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 494.429 (target: 649)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 465
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 466
Getting block 2 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 645
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 646
Getting block 3 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 634
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 635
Getting block 4 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 207
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 208
Getting block 5 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 639
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 640
Getting block 6 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 263
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 264
Getting block 7 of 7
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 608
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 609
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1197
fchr[G]: 1495
fchr[T]: 2112
fchr[$]: 3467
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195621 bytes to primary EBWT file: ClpA_29_bowtie.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_29_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3467
    bwtLen: 3468
    sz: 867
    bwtSz: 867
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 866
Using parameters --bmax 650 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 650 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 432.5 (target: 649)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 197
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 198
Getting block 2 of 8
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 625
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 626
Getting block 3 of 8
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 271
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 272
Getting block 4 of 8
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 602
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 603
Getting block 5 of 8
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 530
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 531
Getting block 6 of 8
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 310
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 311
Getting block 7 of 8
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 601
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 602
Getting block 8 of 8
  Reserving size (650) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 324
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 325
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1197
fchr[G]: 1495
fchr[T]: 2112
fchr[$]: 3467
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195621 bytes to primary EBWT file: ClpA_29_bowtie.rev.1.ebwt
Wrote 440 bytes to secondary EBWT file: ClpA_29_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 3467
    bwtLen: 3468
    sz: 867
    bwtSz: 867
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 109
    offsSz: 436
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 8
    numSides: 16
    numLines: 16
    ebwtTotLen: 1024
    ebwtTotSz: 1024
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_29 done.

Mapping ClpA_29 sequence to ClpA_29 done.
length variant dictionary is: 6
length read dictionary is: 394
length k_j dictionary is: 394
length proportion dictionary is: 6
total sum is: 394.0
computing proportions of ClpA_29 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448175

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_157_30_1.fq
	 the 2nd reads: clpA_157_30_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_157_30_1.aln
	 the 2nd reads: clpA_157_30_2.aln

  SAM Alignment File:
	clpA_157_30_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448175

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_84_30_1.fq
	 the 2nd reads: clpA_84_30_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_84_30_1.aln
	 the 2nd reads: clpA_84_30_2.aln

  SAM Alignment File:
	clpA_84_30_.sam

CCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_161_29_
clpA_161_29_reference.fa
art_illumina -ss HS25 -sam -i clpA_161_29_reference.fa -p -l 76 -c 24 -m 200 -s 30 -o clpA_161_29_
bash temp.sh ClpA_29 ClpA_29
[35, 23, 41, 27, 50, 24]
[u'>clpA_157\n', u'>clpA_84\n', u'>clpA_12\n', u'>clpA_44\n', u'>clpA_63\n']
['', 'clpA_157']
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_157_30_
clpA_157_30_reference.fa
art_illumina -ss HS25 -sam -i clpA_157_30_reference.fa -p -l 76 -c 43 -m 200 -s 30 -o clpA_157_30_
['', 'clpA_84']
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_84
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTATTATTGGTTTGTTTGCCTTTATTGGTGCTTCTGGGGTTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGGTTTTTCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT

clpA_84_30_
clpA_84_30_reference.fa
art_illumina -ss HS25 -sam -i clpA_84_30_reference.fa -p -l 76 -c 40 -m 200 -s 30 -o clpA_84_30_
['', 'clpA_12']
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_84
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTATTATTGGTTTGTTTGCCTTTATTGGTGCTTCTGGGGTTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGGTTTTTCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_12
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAAT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448175

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_12_30_1.fq
	 the 2nd reads: clpA_12_30_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_12_30_1.aln
	 the 2nd reads: clpA_12_30_2.aln

  SAM Alignment File:
	clpA_12_30_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448176

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_44_30_1.fq
	 the 2nd reads: clpA_44_30_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_44_30_1.aln
	 the 2nd reads: clpA_44_30_2.aln

  SAM Alignment File:
	clpA_44_30_.sam

GATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_12_30_
clpA_12_30_reference.fa
art_illumina -ss HS25 -sam -i clpA_12_30_reference.fa -p -l 76 -c 40 -m 200 -s 30 -o clpA_12_30_
['', 'clpA_44']
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_84
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTATTATTGGTTTGTTTGCCTTTATTGGTGCTTCTGGGGTTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGGTTTTTCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_12
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_44
AAAAAAGAACTTATTATAAATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_44_30_
clpA_44_30_reference.fa
art_illumina -ss HS25 -sam -i clpA_44_30_reference.fa -p -l 76 -c 34 -m 200 -s 30 -o clpA_44_30_
['', 'clpA_63']
>clpA_157
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTATTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_84
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTATTATTGGTTTGTTTGCCTTTATTGGTGCTTCTGGGGTTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGGTTTTTCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_12
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGCTGGATATTTTATCAGAAGAGTTTAAAATTCCGA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448176

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_63_30_1.fq
	 the 2nd reads: clpA_63_30_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_63_30_1.aln
	 the 2nd reads: clpA_63_30_2.aln

  SAM Alignment File:
	clpA_63_30_.sam

Settings:
  Output files: "ClpA_30_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_30.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 723
Using parameters --bmax 543 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 543 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 361 (target: 542)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 414
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 415
Getting block 2 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 421
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 422
Getting block 3 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 176
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 177
Getting block 4 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 511
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 512
Getting block 5 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 173
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 174
Getting block 6 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 389
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 390
Getting block 7 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 274
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 275
Getting block 8 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 530
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 531
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1003
fchr[G]: 1250
fchr[T]: 1776
fchr[$]: 2895
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195466 bytes to primary EBWT file: ClpA_30_bowtie.1.ebwt
Wrote 368 bytes to secondary EBWT file: ClpA_30_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2895
    bwtLen: 2896
    sz: 724
    bwtSz: 724
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 91
    offsSz: 364
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 7
    numSides: 14
    numLines: 14
    ebwtTotLen: 896
    ebwtTotSz: 896
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 723
Using parameters --bmax 543 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 543 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 412.714 (target: 542)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 309
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 310
Getting block 2 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 411
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 412
Getting block 3 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 534
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 535
Getting block 4 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 441
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 442
Getting block 5 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 517
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 518
Getting block 6 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 260
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 261
Getting block 7 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 417
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 418
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1003
fchr[G]: 1250
fchr[T]: 1776
fchr[$]: 2895
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195466 bytes to primary EBWT file: ClpA_30_bowtie.rev.1.ebwt
Wrote 368 bytes to secondary EBWT file: ClpA_30_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2895
    bwtLen: 2896
    sz: 724
    bwtSz: 724
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 91
    offsSz: 364
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 7
    numSides: 14
    numLines: 14
    ebwtTotLen: 896
    ebwtTotSz: 896
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_30 done.

Mapping ClpA_30 sequence to ClpA_30 done.
length variant dictionary is: 5
length read dictionary is: 394
length k_j dictionary is: 394
length proportion dictionary is: 5
total sum is: 394.0
computing proportions of ClpA_30 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448176

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_15_31_1.fq
	 the 2nd reads: clpA_15_31_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_15_31_1.aln
	 the 2nd reads: clpA_15_31_2.aln

  SAM Alignment File:
	clpA_15_31_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448176

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_90_31_1.fq
	 the 2nd reads: clpA_90_31_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_90_31_1.aln
	 the 2nd reads: clpA_90_31_2.aln

  SAM Alignment File:
	clpA_90_31_.sam

AATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATAGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGACGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_44
AAAAAAGAACTTATTATAAATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_63
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATACAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGATTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTCCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_63_30_
clpA_63_30_reference.fa
art_illumina -ss HS25 -sam -i clpA_63_30_reference.fa -p -l 76 -c 42 -m 200 -s 30 -o clpA_63_30_
bash temp.sh ClpA_30 ClpA_30
[43, 40, 40, 34, 42]
[u'>clpA_15\n', u'>clpA_90\n', u'>clpA_46\n']
['', 'clpA_15']
>clpA_15
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGCCTTAACATGGGTGAGTATAATGATTTTAATTCCCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_15_31_
clpA_15_31_reference.fa
art_illumina -ss HS25 -sam -i clpA_15_31_reference.fa -p -l 76 -c 87 -m 200 -s 30 -o clpA_15_31_
['', 'clpA_90']
>clpA_15
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGCCTTAACATGGGTGAGTATAATGATTTTAATTCCCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_90
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTAACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGCAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTGGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_90_31_
clpA_90_31_reference.fa
art_illumina -ss HS25 -sam -i clpA_90_31_reference.fa -p -l 76 -c 57 -m 200 -s 30 -o clpA_90_31_
['', 'clpA_46']
>clpA_15
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGCCTTAA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448176

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_46_31_1.fq
	 the 2nd reads: clpA_46_31_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_46_31_1.aln
	 the 2nd reads: clpA_46_31_2.aln

  SAM Alignment File:
	clpA_46_31_.sam

Settings:
  Output files: "ClpA_31_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_31.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 435
Using parameters --bmax 327 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 327 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 247.714 (target: 326)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 319
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 320
Getting block 2 of 7
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 249
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 250
Getting block 3 of 7
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 154
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 155
Getting block 4 of 7
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 245
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 246
Getting block 5 of 7
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 291
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 292
Getting block 6 of 7
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 251
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 252
Getting block 7 of 7
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 225
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 226
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 605
fchr[G]: 758
fchr[T]: 1070
fchr[$]: 1740
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195033 bytes to primary EBWT file: ClpA_31_bowtie.1.ebwt
Wrote 224 bytes to secondary EBWT file: ClpA_31_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1740
    bwtLen: 1741
    sz: 435
    bwtSz: 436
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 55
    offsSz: 220
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 4
    numSides: 8
    numLines: 8
    ebwtTotLen: 512
    ebwtTotSz: 512
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 435
Using parameters --bmax 327 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 327 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
Avg bucket size: 216.625 (target: 326)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 326
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 327
Getting block 2 of 8
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 301
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 302
Getting block 3 of 8
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 160
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 161
Getting block 4 of 8
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 351
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 352
Getting block 5 of 8
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 15
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 16
Getting block 6 of 8
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 107
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 108
Getting block 7 of 8
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 306
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 307
Getting block 8 of 8
  Reserving size (327) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 167
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 168
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 605
fchr[G]: 758
fchr[T]: 1070
fchr[$]: 1740
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195033 bytes to primary EBWT file: ClpA_31_bowtie.rev.1.ebwt
Wrote 224 bytes to secondary EBWT file: ClpA_31_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1740
    bwtLen: 1741
    sz: 435
    bwtSz: 436
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 55
    offsSz: 220
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 4
    numSides: 8
    numLines: 8
    ebwtTotLen: 512
    ebwtTotSz: 512
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_31 done.

Mapping ClpA_31 sequence to ClpA_31 done.
length variant dictionary is: 3
length read dictionary is: 370
length k_j dictionary is: 370
length proportion dictionary is: 3
total sum is: 370.0
computing proportions of ClpA_31 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448176

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_151_32_1.fq
	 the 2nd reads: clpA_151_32_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_151_32_1.aln
	 the 2nd reads: clpA_151_32_2.aln

  SAM Alignment File:
	clpA_151_32_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448176

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_123_32_1.fq
	 the 2nd reads: clpA_123_32_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_123_32_1.aln
	 the 2nd reads: clpA_123_32_2.aln

  SAM Alignment File:
	clpA_123_32_.sam

CATGGGTGAGTATAATGATTTTAATTCCCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_90
AAAAAAGAACTTATTATACATGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTAACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGCAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTGGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_46
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_46_31_
clpA_46_31_reference.fa
art_illumina -ss HS25 -sam -i clpA_46_31_reference.fa -p -l 76 -c 54 -m 200 -s 30 -o clpA_46_31_
bash temp.sh ClpA_31 ClpA_31
[87, 57, 54]
[u'>clpA_151\n', u'>clpA_123\n', u'>clpA_170\n', u'>clpA_110\n']
['', 'clpA_151']
>clpA_151
AAAAAAGAACTTATTATGCATGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATGCAATTTGCTTGCCAACAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGTTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAATATAGTGATTTTAATTCTCTGGATAGATTGATTGGTCCTGTTTTAAACAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTGAACAAGTCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAAGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACAGGAAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAATAATAAGTGTTAATGCGGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCTGGGGGTAATGATTTTAGTTATATTTTAGAAAAAAGATTGCCCACTGAGTTTTTAGAGTTAATAGATCATGTTTTTGTATTT

clpA_151_32_
clpA_151_32_reference.fa
art_illumina -ss HS25 -sam -i clpA_151_32_reference.fa -p -l 76 -c 53 -m 200 -s 30 -o clpA_151_32_
['', 'clpA_123']
>clpA_151
AAAAAAGAACTTATTATGCATGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATGCAATTTGCTTGCCAACAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGTTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAATATAGTGATTTTAATTCTCTGGATAGATTGATTGGTCCTGTTTTAAACAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTGAACAAGTCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAAGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACAGGAAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAATAATAAGTGTTAATGCGGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCTGGGGGTAATGATTTTAGTTATATTTTAGAAAAAAGATTGCCCACTGAGTTTTTAGAGTTAATAGATCATGTTTTTGTATTT
>clpA_123
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTACCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTGAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTCAATATTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTCTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_123_32_
clpA_123_32_reference.fa
art_illumina -ss HS25 -sam -i clpA_123_32_reference.fa -p -l 76 -c 73 -m 200 -s 30 -o clpA_123_32_
['', 'clpA_170']
>clpA_151
AAAAAAGAACTTATTATGCATGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATGCAATTTGCTTGCCAACAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGTTGACGGATATTTTATCACAAGAGTTTAAAATTCCGA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448176

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_170_32_1.fq
	 the 2nd reads: clpA_170_32_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_170_32_1.aln
	 the 2nd reads: clpA_170_32_2.aln

  SAM Alignment File:
	clpA_170_32_.sam

AATTTAGTCTTAATATGGGTGAATATAGTGATTTTAATTCTCTGGATAGATTGATTGGTCCTGTTTTAAACAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTGAACAAGTCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAAGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACAGGAAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAATAATAAGTGTTAATGCGGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCTGGGGGTAATGATTTTAGTTATATTTTAGAAAAAAGATTGCCCACTGAGTTTTTAGAGTTAATAGATCATGTTTTTGTATTT
>clpA_123
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTACCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTGAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTCAATATTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTCTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_170
AAAAAAGAACTCATTGTGCACGATAGTTTGGTATTTGATTTGATGTTAAATATCAAGCTATTAAAATTTAATTTGCTTGCTAACAGAAGTACTATTGGAATATTTGCTTTTGTTGGTTCTTCTGGAGTGGGTAAGGGTAAGTTGACAGATATTTTGTCAGAAGAGTTTAAAATTCCAAAATTTAATATTAATATGGGCGAGTATAGTGATTTTAGTTCTCTTGATAGATTGATTGGTCCTGTTTTAAATAATGATGGTCACTATGAATCTGCTCGATTTTTCAAATTTTTGAATAAATCTACTAATTCTATAATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGGTTTAAAACAGGTAGAATTTTTGATGGTCTTGGTAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTGATAGGTATTAATGTTGAGAACAAAGAACTTAATAGTATTGGTTTTAAAAATAGAATGAGAATGGGAGATGATTTTAATCTTGTATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATCATGTGTTTGTTTTT

clpA_170_32_
clpA_170_32_reference.fa
art_illumina -ss HS25 -sam -i clpA_170_32_reference.fa -p -l 76 -c 36 -m 200 -s 30 -o clpA_170_32_
['', 'clpA_110']
>clpA_151
AAAAAAGAACTTATTATGCATGATAACTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATGCAATTTGCTTGCCAACAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGATCAGGAAAATGCAAGTTGACGGATATTTTATCACAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAATATAGTGATTTTAATTCTCTGGATAGATTGATTGGTCCTGTTTTAAACAATGAAGGGTATTATGAATCTACTAGATTTTTTAAATTTTTGAACAAGTCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAAGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACAGGAAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAATAATAAGTGTTAATGCGGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCTGGGGGTAATGATTTTAGTTATATTTTAGAAAAAAGATTGCCCACTGAGTTTTTAGAGTTAATAGATCATGTTTTTGTATTT
>clpA_123
AAAAAAGAACTTATTATACATGATAACTTAGTATTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTACCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTGCTTCTGGATCAGGAAAATGCAAATTGACGAATATTTTGTCACAAGAGTTTGAAATTCCAAAGTTTAGTCTTAACATGGGTGAATATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGGTTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGCGATAAAAGGGTTTTTGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTCAATATTGAGAGCAAGGAGCTTAATAGTATTGGCTTTAAAAATAAAATGATGGGGGAAAATGATTTTAACTCTATATTAGAGAAGAGATTTTCTAATAAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_170
AAAAAAGAACTCATTGTGCACGATAGTTTGGTATTTGATTTGATGTTAAATATCAAGCTATTAAAATTTAATTTGCTTGCTAACAGAAGTACTATTGGAATATTTGCTTTTGTTGGTTCTTCTGGAGTGGGTAAGGGTAAGTTGACAGATATTTTGTCAGAAGAGTTTAAAATTCCAAAATTTAATATTAATATGGGCGAGTATAGTGATTTTAGTTCTCTTGATAGATTGATTGGTCCTGTTTTAAATAATGATGGTCACTATGAATCTGCTCGATTTTTCAAATTTTTGAATAAATCTACTAATTCTATAATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGGTTTAAAACAGGTAGAATTTTTGATGGTCTTGGTAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTGATAGGTATTAATGTTGAGAACAAAGAACTTAATAGTATTGGTTTTAAAAATAGAATGAGAATGGGAGATGATTTTAATCTTGTATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATCATGTGTTTGTTTTT
>clpA_110
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATGTTAAATATTAAATTATTAAAATTTAATTTGCTTACCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGCGCTTCTGGAGCTGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGAATGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAGGGATATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATACTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAGGAAATGATGTTAATTTTATATTAAAGAAAAGATTTCCCAATGAATTTTTGGATTTAATAGATCATGTGTTTGTATTT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448176

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_110_32_1.fq
	 the 2nd reads: clpA_110_32_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_110_32_1.aln
	 the 2nd reads: clpA_110_32_2.aln

  SAM Alignment File:
	clpA_110_32_.sam

Settings:
  Output files: "ClpA_32_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_32.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 579
Using parameters --bmax 435 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 435 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 330 (target: 434)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 318
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 319
Getting block 2 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 411
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 412
Getting block 3 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 380
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 381
Getting block 4 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 330
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 331
Getting block 5 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 256
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 257
Getting block 6 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 335
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 336
Getting block 7 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 280
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 281
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 791
fchr[G]: 977
fchr[T]: 1408
fchr[$]: 2316
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195317 bytes to primary EBWT file: ClpA_32_bowtie.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_32_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2316
    bwtLen: 2317
    sz: 579
    bwtSz: 580
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 579
Using parameters --bmax 435 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 435 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 288.625 (target: 434)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 219
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 220
Getting block 2 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 380
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 381
Getting block 3 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 198
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 199
Getting block 4 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 283
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 284
Getting block 5 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 255
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 256
Getting block 6 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 429
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 430
Getting block 7 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 123
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 124
Getting block 8 of 8
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 422
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 423
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 791
fchr[G]: 977
fchr[T]: 1408
fchr[$]: 2316
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195317 bytes to primary EBWT file: ClpA_32_bowtie.rev.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_32_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2316
    bwtLen: 2317
    sz: 579
    bwtSz: 580
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:01
Building index for ClpA_32 done.

Mapping ClpA_32 sequence to ClpA_32 done.
length variant dictionary is: 4
length read dictionary is: 384
length k_j dictionary is: 384
length proportion dictionary is: 4
total sum is: 384.0
computing proportions of ClpA_32 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448177

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_212_33_1.fq
	 the 2nd reads: clpA_212_33_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_212_33_1.aln
	 the 2nd reads: clpA_212_33_2.aln

  SAM Alignment File:
	clpA_212_33_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448177

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_137_33_1.fq
	 the 2nd reads: clpA_137_33_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_137_33_1.aln
	 the 2nd reads: clpA_137_33_2.aln

  SAM Alignment File:
	clpA_137_33_.sam



clpA_110_32_
clpA_110_32_reference.fa
art_illumina -ss HS25 -sam -i clpA_110_32_reference.fa -p -l 76 -c 37 -m 200 -s 30 -o clpA_110_32_
bash temp.sh ClpA_32 ClpA_32
[53, 73, 36, 37]
[u'>clpA_212\n', u'>clpA_137\n', u'>clpA_201\n']
['', 'clpA_212']
>clpA_212
AGAAAAGGCATAATAATTGATGAGGAGATTTTATCTGATTTGATATTGAACATCAAACTTTTAAGGATTAAATTTCTCTTTCAAAGTAATTCCCTTGGTATTTTCGCTTTAATAGGTTCTCCAGATGTAGATAAGAGTAAGCTTGCATGTATTTTATCAGAAGAACTTAAGATTCCTAAATTGACTTTGGGAATGAGTGAGTATAGTGATTTTGATGGCATTAATAGATTAATAGGGCCTATGTATGGCTCTGAATCTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTAAATCTTCAAGTTCAATTATTTTTCTTTCCGATTTTGATAAATCTTCCAAGAGGGTTATAGATTTTTTTTTTGAGGGGTTTAATACAGGTAAACTTTATGATAGTCTTGGTAGAAGTGTGAGCTTGTCGGATAGTATAATAATAATAGATATTAATATAGAATATAGGGAACTTGCTGGTATTGGATTTAAAAGTGAAACAGTAAATTGCAGAAGTTTGCTAGAAAAACGTTTTTCTAGTCAATTTTTAGATCTTATAGATCATATTTTCTTCTTT

clpA_212_33_
clpA_212_33_reference.fa
art_illumina -ss HS25 -sam -i clpA_212_33_reference.fa -p -l 76 -c 54 -m 200 -s 30 -o clpA_212_33_
['', 'clpA_137']
>clpA_212
AGAAAAGGCATAATAATTGATGAGGAGATTTTATCTGATTTGATATTGAACATCAAACTTTTAAGGATTAAATTTCTCTTTCAAAGTAATTCCCTTGGTATTTTCGCTTTAATAGGTTCTCCAGATGTAGATAAGAGTAAGCTTGCATGTATTTTATCAGAAGAACTTAAGATTCCTAAATTGACTTTGGGAATGAGTGAGTATAGTGATTTTGATGGCATTAATAGATTAATAGGGCCTATGTATGGCTCTGAATCTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTAAATCTTCAAGTTCAATTATTTTTCTTTCCGATTTTGATAAATCTTCCAAGAGGGTTATAGATTTTTTTTTTGAGGGGTTTAATACAGGTAAACTTTATGATAGTCTTGGTAGAAGTGTGAGCTTGTCGGATAGTATAATAATAATAGATATTAATATAGAATATAGGGAACTTGCTGGTATTGGATTTAAAAGTGAAACAGTAAATTGCAGAAGTTTGCTAGAAAAACGTTTTTCTAGTCAATTTTTAGATCTTATAGATCATATTTTCTTCTTT
>clpA_137
AAAAAAGAGCTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_137_33_
clpA_137_33_reference.fa
art_illumina -ss HS25 -sam -i clpA_137_33_reference.fa -p -l 76 -c 61 -m 200 -s 30 -o clpA_137_33_
['', 'clpA_201']
>clpA_212
AGAAAAGGCATAATAATTGATGAGGAGATTTTATCTGATTTGATATTGAACATCAAACTTTTAAGGATTAAATTTCTCTTTCAAAGTAATTCCCTTGGTATTTTCGCTTTAATAGGTTCTCCAGATGTAGATAAGAGTAAGCTTGCATGTATTTTATCAGAAGAACTTAAGATTCCTAAATTGACTTTGGGAATGAGTGAGTATAGTGATTTTGATGGCATTAATAGATTAATAGGGCCTATGTATGGCTCTGAATCTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTAAATCTTCAAGTTCAATTATTTTTCTTTCCGATTTTGATAAATCTTCCAAGAGGGTTATAGATTTTTTTTTTGAGGGGTTTAATACAGGTAAACTTTATGATAGTCTTGGTAGAAGTGTGAGCTTGTCGGATAGTATAATAATAATAGATATTAATATAGAATATAGGGAACTTGCTGGTATTGGATTTAAAAGTGAAACAGTAAATTGCAGAAGTTTGCTAGAAAAACGTTTTTCTAGTCAATTTTTAGATCTTATAGATCATATTTTCTTCTTT
>clpA_137
AAAAAAGAGCTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_201
AGAGAGCATATGATCATTGATGAAGAGCTTTTATCTGATTTGATATTAAACATAAAACTTTTAAGGATTAGATTTTTATTAAAAAATAATACTCTTGGTATTTTTATTTTAATGGGTTCCTCTGATATAAATAAGAGTAAACTTGCATCTATTTTATCAGAAGAGCTTAAGCTTCCTAAGTTTACTTTGGGAATGAGTGAGTATGGCGATTTTGATGGAATTAATAGATTAATAGGACCTGTATATGGAGCTGAGTTTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTAAAACTTCAAGCTCAATTATTTTCCTAGCAGATTTTGATAAATCTCCAAAGAGAGTCATAGATTTTTTTTTTGAAGGATTTAAGACTGGGAAACTTTTTGATAATTTTGGTAGAGATGTAAGTTTGTCAGATAGTATAATAATAATAGATATTAATGTGGATCACGGAGAACTTAATGGTATTGGATTTAAAAATGAGACAGTAAATAGCAGGAACCTACTAGAAAAGCGTTTTTCTAGTAGGTTCCTGGATTTAGTGGATCACATTTTTTTCTTT

clpA_201_33_
clpA_201_33_refer
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448177

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_201_33_1.fq
	 the 2nd reads: clpA_201_33_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_201_33_1.aln
	 the 2nd reads: clpA_201_33_2.aln

  SAM Alignment File:
	clpA_201_33_.sam

Settings:
  Output files: "ClpA_33_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_33.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 429
Using parameters --bmax 322 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 322 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
Avg bucket size: 214 (target: 321)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 249
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 250
Getting block 2 of 8
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 302
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 303
Getting block 3 of 8
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 301
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 302
Getting block 4 of 8
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 215
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 216
Getting block 5 of 8
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 180
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 181
Getting block 6 of 8
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 126
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 127
Getting block 7 of 8
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 231
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 232
Getting block 8 of 8
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 108
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 109
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 577
fchr[G]: 740
fchr[T]: 1055
fchr[$]: 1719
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195036 bytes to primary EBWT file: ClpA_33_bowtie.1.ebwt
Wrote 220 bytes to secondary EBWT file: ClpA_33_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1719
    bwtLen: 1720
    sz: 430
    bwtSz: 430
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 54
    offsSz: 216
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 4
    numSides: 8
    numLines: 8
    ebwtTotLen: 512
    ebwtTotSz: 512
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 429
Using parameters --bmax 322 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 322 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 190.111 (target: 321)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 105
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 106
Getting block 2 of 9
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 263
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 264
Getting block 3 of 9
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 197
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 198
Getting block 4 of 9
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 171
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 172
Getting block 5 of 9
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 180
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 181
Getting block 6 of 9
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 284
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 285
Getting block 7 of 9
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 155
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 156
Getting block 8 of 9
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 260
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 261
Getting block 9 of 9
  Reserving size (322) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 96
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 97
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 577
fchr[G]: 740
fchr[T]: 1055
fchr[$]: 1719
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195036 bytes to primary EBWT file: ClpA_33_bowtie.rev.1.ebwt
Wrote 220 bytes to secondary EBWT file: ClpA_33_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1719
    bwtLen: 1720
    sz: 430
    bwtSz: 430
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 54
    offsSz: 216
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 4
    numSides: 8
    numLines: 8
    ebwtTotLen: 512
    ebwtTotSz: 512
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_33 done.

Mapping ClpA_33 sequence to ClpA_33 done.
length variant dictionary is: 3
length read dictionary is: 370
length k_j dictionary is: 370
length proportion dictionary is: 3
total sum is: 370.0
computing proportions of ClpA_33 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448177

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_185_34_1.fq
	 the 2nd reads: clpA_185_34_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_185_34_1.aln
	 the 2nd reads: clpA_185_34_2.aln

  SAM Alignment File:
	clpA_185_34_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448177

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_70_34_1.fq
	 the 2nd reads: clpA_70_34_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_70_34_1.aln
	 the 2nd reads: clpA_70_34_2.aln

  SAM Alignment File:
	clpA_70_34_.sam

ence.fa
art_illumina -ss HS25 -sam -i clpA_201_33_reference.fa -p -l 76 -c 83 -m 200 -s 30 -o clpA_201_33_
bash temp.sh ClpA_33 ClpA_33
[54, 61, 83]
[u'>clpA_185\n', u'>clpA_70\n', u'>clpA_64\n', u'>clpA_23\n']
['', 'clpA_185']
>clpA_185
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTGGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_185_34_
clpA_185_34_reference.fa
art_illumina -ss HS25 -sam -i clpA_185_34_reference.fa -p -l 76 -c 50 -m 200 -s 30 -o clpA_185_34_
['', 'clpA_70']
>clpA_185
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTGGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_70
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGCACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAATGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_70_34_
clpA_70_34_reference.fa
art_illumina -ss HS25 -sam -i clpA_70_34_reference.fa -p -l 76 -c 74 -m 200 -s 30 -o clpA_70_34_
['', 'clpA_64']
>clpA_185
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTGGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_70
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGCACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAATGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_64
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGCCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAATAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTTCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_64_34_
clpA_64_34_ref
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448177

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_64_34_1.fq
	 the 2nd reads: clpA_64_34_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_64_34_1.aln
	 the 2nd reads: clpA_64_34_2.aln

  SAM Alignment File:
	clpA_64_34_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448177

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_23_34_1.fq
	 the 2nd reads: clpA_23_34_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_23_34_1.aln
	 the 2nd reads: clpA_23_34_2.aln

  SAM Alignment File:
	clpA_23_34_.sam

Settings:
  Output files: "ClpA_34_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_34.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 579
Using parameters --bmax 435 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 435 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 330 (target: 434)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 333
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 334
Getting block 2 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 388
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 389
Getting block 3 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 372
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 373
Getting block 4 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 354
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 355
Getting block 5 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 261
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 262
Getting block 6 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 335
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 336
Getting block 7 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 267
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 268
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 806
fchr[G]: 1007
fchr[T]: 1419
fchr[$]: 2316
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195314 bytes to primary EBWT file: ClpA_34_bowtie.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_34_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2316
    bwtLen: 2317
    sz: 579
    bwtSz: 580
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 579
Using parameters --bmax 435 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 435 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 330 (target: 434)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 243
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 244
Getting block 2 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 322
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 323
Getting block 3 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 410
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 411
Getting block 4 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 384
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 385
Getting block 5 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 411
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 412
Getting block 6 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 228
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 229
Getting block 7 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 312
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 313
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 806
fchr[G]: 1007
fchr[T]: 1419
fchr[$]: 2316
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195314 bytes to primary EBWT file: ClpA_34_bowtie.rev.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_34_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2316
    bwtLen: 2317
    sz: 579
    bwtSz: 580
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_34 done.

Mapping ClpA_34 sequence to ClpA_34 done.
length variant dictionary is: 4
length read dictionary is: 376
length k_j dictionary is: 376
length proportion dictionary is: 4
total sum is: 376.0
computing proportions of ClpA_34 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448178

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_201_35_1.fq
	 the 2nd reads: clpA_201_35_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_201_35_1.aln
	 the 2nd reads: clpA_201_35_2.aln

  SAM Alignment File:
	clpA_201_35_.sam

erence.fa
art_illumina -ss HS25 -sam -i clpA_64_34_reference.fa -p -l 76 -c 7 -m 200 -s 30 -o clpA_64_34_
['', 'clpA_23']
>clpA_185
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTGGGAAGGATTTAAAACAGGTAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAACTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTGATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_70
AAAAAAGAACTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGCACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGTGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAATGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_64
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGCCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAATAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGATGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTTCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_23
AAAAAAGAACTTATTATGCATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTACTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_23_34_
clpA_23_34_reference.fa
art_illumina -ss HS25 -sam -i clpA_23_34_reference.fa -p -l 76 -c 68 -m 200 -s 30 -o clpA_23_34_
bash temp.sh ClpA_34 ClpA_34
[50, 74, 7, 68]
[u'>clpA_201\n', u'>clpA_152\n']
['', 'clpA_201']
>clpA_201
AGAGAGCATATGATCATTGATGAAGAGCTTTTATCTGATTTGATATTAAACATAAAACTTTTAAGGATTAGATTTTTATTAAAAAATAATACTCTTGGTATTTTTATTTTAATGGGTTCCTCTGATATAAATAAGAGTAAACTTGCATCTATTTTATCAGAAGAGCTTAAGCTTCCTAAGTTTACTTTGGGAATGAGTGAGTATGGCGATTTTGATGGAATTAATAGATTAATAGGACCTGTATATGGAGCTGAGTTTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTAAAACTTCAAGCTCAATTATTTTCCTAGCAGATTTTGATAAATCTCCAAAGAGAGTCATAGATTTTTTTTTTGAAGGATTTAAGACTGGGAAACTTTTTGATAATTTTGGTAGAGATGTAAGTTTGTCAGATAGTATAATAATAATAGATATTAATGTGGATCACGGAGAACTTAATGGTATTGGATTTAAAAATGAGACAGTAAATAGCAGGAACCTACTAGAAAAGCGTTTTTCTAGTAGGTTCCTGGATTTAGTGGATCACATTTTTTTCTTT

clpA_201_35_
clpA_201_35_reference.fa
art_illumina -ss HS25 -sam -i clpA_201_35_reference.fa -p -l 76 -c 59 -m 200 -s 30 -o clpA_201_35_
['', 'clpA_152']
>clpA_201
AGAGAGCATATGATCATTGATGAAGAGCTTTTATCTGATTTGATATTAAACATAAAACTTTTAAGGATTAGATTTTTATTAAAAAATAATACTCTTGGTATTTTTATTTTAATGGGTTCCTCTGATATAAATAAGAGTAAACTTGCATCTATTTTATCAGAAGAGCTTAAGCTTCCTAAGTTTACTTTGGGAATGAGTGAGTATGGCGATTTTGATGGAATTAATAGATTAATAGGACCTGTATATGGAGCTGAGTTTTATGATGAACCTACTAAATTTTTTAAATTTTTAAGTAAAACTTCAAGCTCAATTATTTTCCTAGCAGATTTTGATAAATCTCCAAAGAGAGTCATAGATTTTTTTTTTGAAGGATTTAAGACTGGGAAACTTTTTGATAATTTTGGTAGAGATGTAAGTTTGTCAGATAGTATAATAATAATAGATATTAATGTGGATCACGGAGAACTTAATGGTATTGGATTTAAAAATGAGACAGTAAATAGCAGGAACCTACTAGAAAAGCGTTTTTCTAGTAGGTTCCTGGATTTAGTGGATCACATTTTTTTCTTT
>clpA_152
AAAAAAGAGCTTGTTATACATGACGGTTTGATATTCGATTTGATATTAAATATCAAATTAT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448178

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_152_35_1.fq
	 the 2nd reads: clpA_152_35_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_152_35_1.aln
	 the 2nd reads: clpA_152_35_2.aln

  SAM Alignment File:
	clpA_152_35_.sam

Settings:
  Output files: "ClpA_35_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_35.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 287
Using parameters --bmax 216 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 216 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 142.75 (target: 215)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 173
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 174
Getting block 2 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 60
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 61
Getting block 3 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 211
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 212
Getting block 4 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 128
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 129
Getting block 5 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 166
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 167
Getting block 6 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 161
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 162
Getting block 7 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 215
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 216
Getting block 8 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 28
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 29
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 391
fchr[G]: 502
fchr[T]: 713
fchr[$]: 1149
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194883 bytes to primary EBWT file: ClpA_35_bowtie.1.ebwt
Wrote 148 bytes to secondary EBWT file: ClpA_35_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1149
    bwtLen: 1150
    sz: 288
    bwtSz: 288
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 36
    offsSz: 144
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 3
    numSides: 6
    numLines: 6
    ebwtTotLen: 384
    ebwtTotSz: 384
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 287
Using parameters --bmax 216 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 216 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 142.75 (target: 215)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 138
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 139
Getting block 2 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 122
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 123
Getting block 3 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 178
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 179
Getting block 4 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 48
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 49
Getting block 5 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 204
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 205
Getting block 6 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 207
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 208
Getting block 7 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 142
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 143
Getting block 8 of 8
  Reserving size (216) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 103
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 104
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 391
fchr[G]: 502
fchr[T]: 713
fchr[$]: 1149
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194883 bytes to primary EBWT file: ClpA_35_bowtie.rev.1.ebwt
Wrote 148 bytes to secondary EBWT file: ClpA_35_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1149
    bwtLen: 1150
    sz: 288
    bwtSz: 288
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 36
    offsSz: 144
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 3
    numSides: 6
    numLines: 6
    ebwtTotLen: 384
    ebwtTotSz: 384
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_35 done.

Mapping ClpA_35 sequence to ClpA_35 done.
length variant dictionary is: 2
length read dictionary is: 364
length k_j dictionary is: 364
length proportion dictionary is: 2
total sum is: 364.0
computing proportions of ClpA_35 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448178

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_135_36_1.fq
	 the 2nd reads: clpA_135_36_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_135_36_1.aln
	 the 2nd reads: clpA_135_36_2.aln

  SAM Alignment File:
	clpA_135_36_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448178

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_160_36_1.fq
	 the 2nd reads: clpA_160_36_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_160_36_1.aln
	 the 2nd reads: clpA_160_36_2.aln

  SAM Alignment File:
	clpA_160_36_.sam

TAAAATTTAATTTGCTAGCCAATAGGAGTACTATTGGTATATTTGCTTTTATTGGTGCTTCTGGGGCAGGAAAATGTAAATTAACGGATATTTTATCACAAGAGTTTAAAATTCCTAAATTTAATCTTAATATGGGTGAGTATGGAGATTTTAATTCTCTTGATAGATTGATTGGTCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGGTTTTTCAAATTTTTGAACAAATCTTCCAACTCTATTATTTTTCTATCAGATTTTGATAAATGCAATAAAAGGGTTTTAGATTTTTTTATGGAAGGATTTAAAACGGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGCTTATCAGAAAGCTTAATAATAATAAGTATCAATGCCGAGAGTAACGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGAGGAGATGATTATAATCTTATATTGAAGAAGAGATTTCCCAATGAACTTTTAGAGTTAATTGATTATGTTTTTGTATTT

clpA_152_35_
clpA_152_35_reference.fa
art_illumina -ss HS25 -sam -i clpA_152_35_reference.fa -p -l 76 -c 139 -m 200 -s 30 -o clpA_152_35_
bash temp.sh ClpA_35 ClpA_35
[59, 139]
[u'>clpA_135\n', u'>clpA_160\n', u'>clpA_25\n', u'>clpA_109\n', u'>clpA_136\n']
['', 'clpA_135']
>clpA_135
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGTCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGAAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_135_36_
clpA_135_36_reference.fa
art_illumina -ss HS25 -sam -i clpA_135_36_reference.fa -p -l 76 -c 26 -m 200 -s 30 -o clpA_135_36_
['', 'clpA_160']
>clpA_135
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGTCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGAAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_160
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGACGGATATTTTAGCAGAAGAGTTTAGAATTCCTAAATTTAGCATTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTCAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_160_36_
clpA_160_36_reference.fa
art_illumina -ss HS25 -sam -i clpA_160_36_reference.fa -p -l 76 -c 27 -m 200 -s 30 -o clpA_160_36_
['', 'clpA_25']
>clpA_135
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGTCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGAAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_160
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGACGGATATTTTAGCAGAAGAGTTTAGAATTCCTAAATTTAGCATTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTCAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_25
AAAAAAGAACTTATTATACATGATAACTTGGTAC
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448178

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_25_36_1.fq
	 the 2nd reads: clpA_25_36_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_25_36_1.aln
	 the 2nd reads: clpA_25_36_2.aln

  SAM Alignment File:
	clpA_25_36_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448178

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_109_36_1.fq
	 the 2nd reads: clpA_109_36_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_109_36_1.aln
	 the 2nd reads: clpA_109_36_2.aln

  SAM Alignment File:
	clpA_109_36_.sam

TTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_25_36_
clpA_25_36_reference.fa
art_illumina -ss HS25 -sam -i clpA_25_36_reference.fa -p -l 76 -c 30 -m 200 -s 30 -o clpA_25_36_
['', 'clpA_109']
>clpA_135
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGTCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGAAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_160
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGACGGATATTTTAGCAGAAGAGTTTAGAATTCCTAAATTTAGCATTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTCAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_25
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_109
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_109_36_
clpA_109_36_reference.fa
art_illumina -ss HS25 -sam -i clpA_109_36_reference.fa -p -l 76 -c 59 -m 200 -s 30 -o clpA_109_36_
['', 'clpA_136']
>clpA_135
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGTCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGAAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_160
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGACGGATATTTTAGCAGAAGAGTTTAGAATTCCTAAATTTAGCATTAACATGGGTGAGTATAATGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448178

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_136_36_1.fq
	 the 2nd reads: clpA_136_36_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_136_36_1.aln
	 the 2nd reads: clpA_136_36_2.aln

  SAM Alignment File:
	clpA_136_36_.sam

Settings:
  Output files: "ClpA_36_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_36.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 723
Using parameters --bmax 543 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 543 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 361 (target: 542)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 443
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 444
Getting block 2 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 378
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 379
Getting block 3 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 170
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 171
Getting block 4 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 457
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 458
Getting block 5 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 225
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 226
Getting block 6 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 395
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 396
Getting block 7 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 291
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 292
Getting block 8 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 529
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 530
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 989
fchr[G]: 1235
fchr[T]: 1766
fchr[$]: 2895
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195469 bytes to primary EBWT file: ClpA_36_bowtie.1.ebwt
Wrote 368 bytes to secondary EBWT file: ClpA_36_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2895
    bwtLen: 2896
    sz: 724
    bwtSz: 724
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 91
    offsSz: 364
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 7
    numSides: 14
    numLines: 14
    ebwtTotLen: 896
    ebwtTotSz: 896
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 723
Using parameters --bmax 543 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 543 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 412.714 (target: 542)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 274
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 275
Getting block 2 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 437
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 438
Getting block 3 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 529
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 530
Getting block 4 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 446
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 447
Getting block 5 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 510
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 511
Getting block 6 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 280
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 281
Getting block 7 of 7
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 413
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 414
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 989
fchr[G]: 1235
fchr[T]: 1766
fchr[$]: 2895
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195469 bytes to primary EBWT file: ClpA_36_bowtie.rev.1.ebwt
Wrote 368 bytes to secondary EBWT file: ClpA_36_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2895
    bwtLen: 2896
    sz: 724
    bwtSz: 724
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 91
    offsSz: 364
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 7
    numSides: 14
    numLines: 14
    ebwtTotLen: 896
    ebwtTotSz: 896
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_36 done.

Mapping ClpA_36 sequence to ClpA_36 done.
length variant dictionary is: 5
length read dictionary is: 388
length k_j dictionary is: 388
length proportion dictionary is: 5
total sum is: 388.0
computing proportions of ClpA_36 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448179

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_211_37_1.fq
	 the 2nd reads: clpA_211_37_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_211_37_1.aln
	 the 2nd reads: clpA_211_37_2.aln

  SAM Alignment File:
	clpA_211_37_.sam

TTTTTGAACAAATCTTCTAATTCTATTATTTTCTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTCAATAGCATTGGTTTTAAAAACAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_25
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_109
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAATCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_136
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATCCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_136_36_
clpA_136_36_reference.fa
art_illumina -ss HS25 -sam -i clpA_136_36_reference.fa -p -l 76 -c 58 -m 200 -s 30 -o clpA_136_36_
bash temp.sh ClpA_36 ClpA_36
[26, 27, 30, 59, 58]
[u'>clpA_211\n', u'>clpA_141\n', u'>clpA_200\n', u'>clpA_142\n', u'>clpA_52\n']
['', 'clpA_211']
>clpA_211
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGAAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_211_37_
clpA_211_37_reference.fa
art_illumina -ss HS25 -sam -i clpA_211_37_reference.fa -p -l 76 -c 42 -m 200 -s 30 -o clpA_211_37_
['', 'clpA_141']
>clpA_211
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGAAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_141
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATATTAAATATTAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGACTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448179

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_141_37_1.fq
	 the 2nd reads: clpA_141_37_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_141_37_1.aln
	 the 2nd reads: clpA_141_37_2.aln

  SAM Alignment File:
	clpA_141_37_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448179

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_200_37_1.fq
	 the 2nd reads: clpA_200_37_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_200_37_1.aln
	 the 2nd reads: clpA_200_37_2.aln

  SAM Alignment File:
	clpA_200_37_.sam

GGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTCTATTT

clpA_141_37_
clpA_141_37_reference.fa
art_illumina -ss HS25 -sam -i clpA_141_37_reference.fa -p -l 76 -c 35 -m 200 -s 30 -o clpA_141_37_
['', 'clpA_200']
>clpA_211
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGAAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_141
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATATTAAATATTAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGACTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTCTATTT
>clpA_200
AGGGAGCACATGATTATTGATGAAAAGCTTTTATCTGATTTGATATTAAACATAAAACTTTTAAGGATTAGATTTTTATTAAAAAATAACACTCTTGGTATTTTTATTTTAATGGGTTCCTCTGATATAAATAAGAGTAAACTTGTATCTATTTTATCAGAAGAGCTTAAGCTTCCTAAGCTTACTTTGGGAATGAGTGAGTATAGCGATTTTGATGGAATTAATCGATTAATAGGACCTGTATATGGAGCTGAGTTTTATGATGAACCTACTAAATTTTTTAAATTTTTGAGTAAATCATCAAGCTCAATTATTTTCCTAGCAGATTTTGACAAATCTCCAAAGAGAGTCATAGATTTTTTTTTTGAAGGATTTAATACTGGGAAACTTTTTGATAATTTTGGTAGAGGGGTGAGTTTGTCAGATAGTATAATAATAATAGATATTAATGTGGAACATGGAGAACTTAATGGTATTGGATTTAAAAATGAGACAGTAAATAGCAGGAACCTACTAGAAAAACGCTTTTCTAGTAGGTTCCTGGATTTAGTGGATCACATTTTTTTCTTT

clpA_200_37_
clpA_200_37_reference.fa
art_illumina -ss HS25 -sam -i clpA_200_37_reference.fa -p -l 76 -c 49 -m 200 -s 30 -o clpA_200_37_
['', 'clpA_142']
>clpA_211
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGAAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_141
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATATTAAATATTAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGACTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTCTATTT
>clpA_200
AGGGAGCACATGATTATTGATGAAAAGCTTTTATCTGATTTGATATTAAACATAAAACTTTTAAGGATTAGATTTTTATTAAAAAATAACACTCTTGGTATTTTTATTTTAATGGGTTCCTCTGATATAAATAAGAGTAAACTTGTATCTATTTTATCAGAAGAGCTTAAGCTTCCTAAGCTTACTTTGGGAATGAGTGAGTATAGCGATTTTGATGGAATTAATCGATTAATAGGACCTGTATATGGAGCTGAGTTTTATGATGAACCTACTAAATTTTTTAAATTTTTGAGTAAATCATCAAGCTCAATTATTTTCCTAGCAGATTTTGACAAATCTCCAAAGAGAGTCATAGATTTTTTTTTTGAAGGATTTAATACTGGGAAACTTTTTGATAATTTTGGTAGAGGGGTGAGTTTGTCAGATAGTATAATAATAATAGATATTAATGTGGAACATGGAGAACTTAATGGTATTGGATTTAAAAATGAGACAGTAAATAGCAGGAACCTACTAGAAAAACGCTTTTCTAGTAGGTTCCTGGATTTAGTGGATCACATTTTTTTCTTT
>clpA_142
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTAC
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448179

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_142_37_1.fq
	 the 2nd reads: clpA_142_37_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_142_37_1.aln
	 the 2nd reads: clpA_142_37_2.aln

  SAM Alignment File:
	clpA_142_37_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448179

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_52_37_1.fq
	 the 2nd reads: clpA_52_37_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_52_37_1.aln
	 the 2nd reads: clpA_52_37_2.aln

  SAM Alignment File:
	clpA_52_37_.sam

Settings:
  Output files: "ClpA_37_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_37.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 721
Using parameters --bmax 541 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 541 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 359.875 (target: 540)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 500
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 501
Getting block 2 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 137
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 138
Getting block 3 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 474
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 475
Getting block 4 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 290
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 291
Getting block 5 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 339
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 340
Getting block 6 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 350
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 351
Getting block 7 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 301
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 302
Getting block 8 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 488
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 489
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 995
fchr[G]: 1263
fchr[T]: 1778
fchr[$]: 2886
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195469 bytes to primary EBWT file: ClpA_37_bowtie.1.ebwt
Wrote 368 bytes to secondary EBWT file: ClpA_37_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2886
    bwtLen: 2887
    sz: 722
    bwtSz: 722
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 91
    offsSz: 364
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 7
    numSides: 14
    numLines: 14
    ebwtTotLen: 896
    ebwtTotSz: 896
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 721
Using parameters --bmax 541 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 541 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 359.875 (target: 540)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 196
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 197
Getting block 2 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 465
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 466
Getting block 3 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 245
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 246
Getting block 4 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 469
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 470
Getting block 5 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 291
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 292
Getting block 6 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 411
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 412
Getting block 7 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 526
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 527
Getting block 8 of 8
  Reserving size (541) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 276
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 277
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 995
fchr[G]: 1263
fchr[T]: 1778
fchr[$]: 2886
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195469 bytes to primary EBWT file: ClpA_37_bowtie.rev.1.ebwt
Wrote 368 bytes to secondary EBWT file: ClpA_37_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2886
    bwtLen: 2887
    sz: 722
    bwtSz: 722
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 91
    offsSz: 364
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 7
    numSides: 14
    numLines: 14
    ebwtTotLen: 896
    ebwtTotSz: 896
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_37 done.

Mapping ClpA_37 sequence to ClpA_37 done.
length variant dictionary is: 5
length read dictionary is: 382
length k_j dictionary is: 382
length proportion dictionary is: 5
total sum is: 382.0
computing proportions of ClpA_37 done

TTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCCCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGATTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_142_37_
clpA_142_37_reference.fa
art_illumina -ss HS25 -sam -i clpA_142_37_reference.fa -p -l 76 -c 52 -m 200 -s 30 -o clpA_142_37_
['', 'clpA_52']
>clpA_211
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAGCTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGGGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGAAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_141
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATATTAAATATTAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGACTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTGTTTTTCTATCAGATTTTGATAAATGTAACAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTCTATTT
>clpA_200
AGGGAGCACATGATTATTGATGAAAAGCTTTTATCTGATTTGATATTAAACATAAAACTTTTAAGGATTAGATTTTTATTAAAAAATAACACTCTTGGTATTTTTATTTTAATGGGTTCCTCTGATATAAATAAGAGTAAACTTGTATCTATTTTATCAGAAGAGCTTAAGCTTCCTAAGCTTACTTTGGGAATGAGTGAGTATAGCGATTTTGATGGAATTAATCGATTAATAGGACCTGTATATGGAGCTGAGTTTTATGATGAACCTACTAAATTTTTTAAATTTTTGAGTAAATCATCAAGCTCAATTATTTTCCTAGCAGATTTTGACAAATCTCCAAAGAGAGTCATAGATTTTTTTTTTGAAGGATTTAATACTGGGAAACTTTTTGATAATTTTGGTAGAGGGGTGAGTTTGTCAGATAGTATAATAATAATAGATATTAATGTGGAACATGGAGAACTTAATGGTATTGGATTTAAAAATGAGACAGTAAATAGCAGGAACCTACTAGAAAAACGCTTTTCTAGTAGGTTCCTGGATTTAGTGGATCACATTTTTTTCTTT
>clpA_142
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATAGCGATTTTAATTCCCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAACAAAAGGATTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_52
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGGTGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_52_37_
clpA_52_37_reference.fa
art_illumina -ss HS25 -sam -i clpA_52_37_reference.fa -p -l 76 -c 20 -m 200 -s 30 -o clpA_52_37_
bash temp.sh ClpA_37 ClpA_37
[42, 35, 49, 52, 20]
[u'>clpA_133\n', u'>clpA_198\n', u'>clpA_15\n', u'>clpA_9\n', u'>clpA_147\n']
['', 'clpA_133']
>clpA_133
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448179

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_133_38_1.fq
	 the 2nd reads: clpA_133_38_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_133_38_1.aln
	 the 2nd reads: clpA_133_38_2.aln

  SAM Alignment File:
	clpA_133_38_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448179

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_198_38_1.fq
	 the 2nd reads: clpA_198_38_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_198_38_1.aln
	 the 2nd reads: clpA_198_38_2.aln

  SAM Alignment File:
	clpA_198_38_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448179

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_15_38_1.fq
	 the 2nd reads: clpA_15_38_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_15_38_1.aln
	 the 2nd reads: clpA_15_38_2.aln

  SAM Alignment File:
	clpA_15_38_.sam

TTTTAATTCTCTTGATAGATTAATTGGGCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_133_38_
clpA_133_38_reference.fa
art_illumina -ss HS25 -sam -i clpA_133_38_reference.fa -p -l 76 -c 83 -m 200 -s 30 -o clpA_133_38_
['', 'clpA_198']
>clpA_133
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGGCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_198
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTGTTT

clpA_198_38_
clpA_198_38_reference.fa
art_illumina -ss HS25 -sam -i clpA_198_38_reference.fa -p -l 76 -c 15 -m 200 -s 30 -o clpA_198_38_
['', 'clpA_15']
>clpA_133
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGGCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_198
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTGTTT
>clpA_15
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGCCTTAACATGGGTGAGTATAATGATTTTAATTCCCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_15_38_
clpA_15_38_reference.fa
art_illumina -ss HS25 -sam -i clpA_15_38_reference.fa -p -l 76 -c 2 -m 200 -s 30 -o clpA_15_38_
['', 'clpA_9']
>clpA_133
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGGCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448179

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_9_38_1.fq
	 the 2nd reads: clpA_9_38_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_9_38_1.aln
	 the 2nd reads: clpA_9_38_2.aln

  SAM Alignment File:
	clpA_9_38_.sam

ATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_198
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTGTTT
>clpA_15
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGCCTTAACATGGGTGAGTATAATGATTTTAATTCCCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_9
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGAATATTTGCCTTTATTGGTGCTTATGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT

clpA_9_38_
clpA_9_38_reference.fa
art_illumina -ss HS25 -sam -i clpA_9_38_reference.fa -p -l 76 -c 53 -m 200 -s 30 -o clpA_9_38_
['', 'clpA_147']
>clpA_133
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAACTTTTAAAATTTAATTTACTTGTCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGGCCTATTTTGAATAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAAGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATGGCAGAGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_198
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGCCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTGTTT
>clpA_15
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATGTTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTATTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCTAAATTTAGCCTTAACATGGGTGAGTATAATGATTTTAATTCCCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAGAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_9
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTGATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGAATATTTGCCTTTATTGGTGCTTATGGGTCAGGAAA
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448179

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_147_38_1.fq
	 the 2nd reads: clpA_147_38_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_147_38_1.aln
	 the 2nd reads: clpA_147_38_2.aln

  SAM Alignment File:
	clpA_147_38_.sam

Settings:
  Output files: "ClpA_38_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_38.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 723
Using parameters --bmax 543 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 543 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 361 (target: 542)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 351
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 352
Getting block 2 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 478
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 479
Getting block 3 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 168
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 169
Getting block 4 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 505
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 506
Getting block 5 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 218
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 219
Getting block 6 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 355
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 356
Getting block 7 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 469
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 470
Getting block 8 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 344
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 345
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 993
fchr[G]: 1236
fchr[T]: 1766
fchr[$]: 2895
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195467 bytes to primary EBWT file: ClpA_38_bowtie.1.ebwt
Wrote 368 bytes to secondary EBWT file: ClpA_38_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2895
    bwtLen: 2896
    sz: 724
    bwtSz: 724
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 91
    offsSz: 364
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 7
    numSides: 14
    numLines: 14
    ebwtTotLen: 896
    ebwtTotSz: 896
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 723
Using parameters --bmax 543 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 543 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 361 (target: 542)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 301
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 302
Getting block 2 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 407
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 408
Getting block 3 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 272
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 273
Getting block 4 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 447
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 448
Getting block 5 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 260
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 261
Getting block 6 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 508
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 509
Getting block 7 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 271
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 272
Getting block 8 of 8
  Reserving size (543) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 422
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 423
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 993
fchr[G]: 1236
fchr[T]: 1766
fchr[$]: 2895
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195467 bytes to primary EBWT file: ClpA_38_bowtie.rev.1.ebwt
Wrote 368 bytes to secondary EBWT file: ClpA_38_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2895
    bwtLen: 2896
    sz: 724
    bwtSz: 724
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 91
    offsSz: 364
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 7
    numSides: 14
    numLines: 14
    ebwtTotLen: 896
    ebwtTotSz: 896
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_38 done.

Mapping ClpA_38 sequence to ClpA_38 done.
length variant dictionary is: 5
length read dictionary is: 374
length k_j dictionary is: 374
length proportion dictionary is: 5
total sum is: 374.0
computing proportions of ClpA_38 done


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448180

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_83_39_1.fq
	 the 2nd reads: clpA_83_39_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_83_39_1.aln
	 the 2nd reads: clpA_83_39_2.aln

  SAM Alignment File:
	clpA_83_39_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448180

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_81_39_1.fq
	 the 2nd reads: clpA_81_39_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_81_39_1.aln
	 the 2nd reads: clpA_81_39_2.aln

  SAM Alignment File:
	clpA_81_39_.sam

ATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGAGTTAATAGATCATGTGTTTGTATTT
>clpA_147
AAAAAAGAGCTTATTATACACGATAGTTTAGTATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGTATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAGTATGGCGATTTTAATTCTCTTGATAGGTTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAATGCAAGTTTATCAGAAAGTTTAATAGTAATAAGTATTAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_147_38_
clpA_147_38_reference.fa
art_illumina -ss HS25 -sam -i clpA_147_38_reference.fa -p -l 76 -c 46 -m 200 -s 30 -o clpA_147_38_
bash temp.sh ClpA_38 ClpA_38
[83, 15, 2, 53, 46]
[u'>clpA_83\n', u'>clpA_81\n', u'>clpA_135\n', u'>clpA_106\n']
['', 'clpA_83']
>clpA_83
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTATTATTGGTTTGTTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGGTTTTTCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT

clpA_83_39_
clpA_83_39_reference.fa
art_illumina -ss HS25 -sam -i clpA_83_39_reference.fa -p -l 76 -c 60 -m 200 -s 30 -o clpA_83_39_
['', 'clpA_81']
>clpA_83
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTATTATTGGTTTGTTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGGTTTTTCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_81
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGAATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAGACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCTAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT

clpA_81_39_
clpA_81_39_reference.fa
art_illumina -ss HS25 -sam -i clpA_81_39_reference.fa -p -l 76 -c 44 -m 200 -s 30 -o clpA_81_39_
['', 'clpA_135']
>clpA_83
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTATTATTGGTTTGTTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGGTTTTTCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_81
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGC
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448180

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_135_39_1.fq
	 the 2nd reads: clpA_135_39_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_135_39_1.aln
	 the 2nd reads: clpA_135_39_2.aln

  SAM Alignment File:
	clpA_135_39_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448180

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_106_39_1.fq
	 the 2nd reads: clpA_106_39_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_106_39_1.aln
	 the 2nd reads: clpA_106_39_2.aln

  SAM Alignment File:
	clpA_106_39_.sam

Settings:
  Output files: "ClpA_39_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_39.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 579
Using parameters --bmax 435 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 435 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 330 (target: 434)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 294
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 295
Getting block 2 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 217
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 218
Getting block 3 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 295
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 296
Getting block 4 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 396
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 397
Getting block 5 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 278
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 279
Getting block 6 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 405
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 406
Getting block 7 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 425
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 426
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 795
fchr[G]: 986
fchr[T]: 1418
fchr[$]: 2316
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195315 bytes to primary EBWT file: ClpA_39_bowtie.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_39_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2316
    bwtLen: 2317
    sz: 579
    bwtSz: 580
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 579
Using parameters --bmax 435 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 435 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 330 (target: 434)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 249
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 250
Getting block 2 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 329
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 330
Getting block 3 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 379
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 380
Getting block 4 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 395
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 396
Getting block 5 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 410
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 411
Getting block 6 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 234
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 235
Getting block 7 of 7
  Reserving size (435) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 314
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 315
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 795
fchr[G]: 986
fchr[T]: 1418
fchr[$]: 2316
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4195315 bytes to primary EBWT file: ClpA_39_bowtie.rev.1.ebwt
Wrote 296 bytes to secondary EBWT file: ClpA_39_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2316
    bwtLen: 2317
    sz: 579
    bwtSz: 580
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 73
    offsSz: 292
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 6
    numSides: 12
    numLines: 12
    ebwtTotLen: 768
    ebwtTotSz: 768
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_39 done.

Mapping ClpA_39 sequence to ClpA_39 done.
length variant dictionary is: 4
length read dictionary is: 384
length k_j dictionary is: 384
length proportion dictionary is: 4
total sum is: 384.0
computing proportions of ClpA_39 done

TGGAAAATGCAAATTGACGAATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAGACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCTAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_135
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGTCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGAAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_135_39_
clpA_135_39_reference.fa
art_illumina -ss HS25 -sam -i clpA_135_39_reference.fa -p -l 76 -c 64 -m 200 -s 30 -o clpA_135_39_
['', 'clpA_106']
>clpA_83
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTATTATTGGTTTGTTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGGATATTTTATCGGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTAATTTTATATTAAAGAAAAGGTTTTTCAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_81
AAAAAAGAACTTATTATAGAGGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTGCTTGCCAATAGAAGTACTATTGGTTTATTTGCCTTTATTGGTGCTTCTGGGGCTGGAAAATGCAAATTGACGAATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGCCTTAATATGAGTGAATATAGCGATTTTAATGCTCTTGATAGATTGATTGGGCCTGTGTTAAGTAATGAGGGATATTACGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATCATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGAATTTTTTTTGGAGGGGTTTAAAACAGGCAGACTTTTTGATGGTCTTGGTAAAAAGGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTAAATGCTGAGGGCAATGAGCTTAATAGCATCGGCTTTAAAAATAAAATAGCAGAAAGAAATGATGTTGATTTTATATTAAAGAAAAGGTTTCCTAATGAATTTTTAGATTTAATAGATCATGTGTTTGTATTT
>clpA_135
AAAAAAGAATTCATTATACATGATAGTTTAGTATTTGATTTGATATTAAATATAAAATTATTAAAATTCAATTTACTTGCCAATAGAAGTACTATTGGCATATTTGCTTTTATTGGTGCTTCTGGAGCGGAAAAATGCAAATTGACGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAATCTTAATATGGGCGAGTATAGTGATTTTACTTCTCTTGATAGATTGATTGGTCCTGTTTTAAGTAATGATGGGTATTATGAATCTACTAGATTTTTCAAATTTTTAAACAAGTCTTCTAATTCTATTATTTTCCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAGAACTGGCAAGCTTTTTGATGGTCTTGGAAAAAAGGTGAGCTTGTCAGAAAGTTTAATAGTAATAAGTGTCAATGCTGAGAGTAATGAGCTTAATAGTATTGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTGATCTTATCTTAGAGAAGAGATTTCCCAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT
>clpA_106
AAAAAAGAACTTATTATACATGATAACTTGGTACTTGATTTAATATTAAATATTAAATTATTAAAATTCAATTTGCTTGCCAATAGAAGTACTGTTGGAATATTTGCCTTTATTGGTGCTTCTGGGTCAGGAAAATGCAAATTGATGGATATTTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAACATGGGTGAGTATAGTGATTTTAATTCTCTTGATAGATTGATTGGGCCTGTTTTAAGTAATGAAGGATATTATGAATCTACCAGATTTTTTAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTTTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAGATTTTTTTTTAGAGGGGTTTAAAACAGGTAAACTTTTTGATGGTCTTGGAAAAAAGGTAAGCTTATCAGAAAGTTTAATAGTAATAAGTATCAATGCTGAGAGCAAAGAGCTTAATAGCATTGGTTTTAAAAATAAAATGGCGGGGGAAAATGATTTTAACTTTATATTAAAGAAGAGATTGCCCAATGAGTTTTTAGACTTAATAGATCATGTGTTTGTATTT

clpA_106_39_
clpA_106_39_reference.fa
art_illumina -ss HS25 -sam -i clpA_106_39_reference.fa -p -l 76 -c 31 -m 200 -s 30 -o clpA_106_39_
bash temp.sh ClpA_39 ClpA_39
[60, 44, 64, 31]
[u'>clpA_40\n', u'>clpA_27\n']
['', 'clpA_40']
>clpA_40
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTT
    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448180

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_40_40_1.fq
	 the 2nd reads: clpA_40_40_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_40_40_1.aln
	 the 2nd reads: clpA_40_40_2.aln

  SAM Alignment File:
	clpA_40_40_.sam


    ====================ART====================
             ART_Illumina (2008-2016)          
          Q Version 2.5.8 (June 7, 2016)       
     Contact: Weichun Huang <whduke@gmail.com> 
    -------------------------------------------

                  Paired-end sequencing simulation

Total CPU time used: 0

The random seed for the run: 1486448180

Parameters used during run
	Read Length:	76
	Genome masking 'N' cutoff frequency: 	1 in 76
	Fold Coverage:            0X
	Mean Fragment Length:     200
	Standard Deviation:       30
	Profile Type:             Combined
	ID Tag:                   

Quality Profile(s)
	First Read:   HiSeq 2500 Length 126 R1 (built-in profile) 
	First Read:   HiSeq 2500 Length 126 R2 (built-in profile) 

Output files

  FASTQ Sequence Files:
	 the 1st reads: clpA_27_40_1.fq
	 the 2nd reads: clpA_27_40_2.fq

  ALN Alignment Files:
	 the 1st reads: clpA_27_40_1.aln
	 the 2nd reads: clpA_27_40_2.aln

  SAM Alignment File:
	clpA_27_40_.sam

Settings:
  Output files: "ClpA_40_bowtie.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./ClpA_40.fas
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 289
Using parameters --bmax 217 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 217 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 164.571 (target: 216)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 196
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 197
Getting block 2 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 208
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 209
Getting block 3 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 198
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 199
Getting block 4 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 165
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 166
Getting block 5 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 80
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 81
Getting block 6 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 196
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 197
Getting block 7 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 109
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 110
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 402
fchr[G]: 500
fchr[T]: 703
fchr[$]: 1158
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194881 bytes to primary EBWT file: ClpA_40_bowtie.1.ebwt
Wrote 152 bytes to secondary EBWT file: ClpA_40_bowtie.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1158
    bwtLen: 1159
    sz: 290
    bwtSz: 290
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 37
    offsSz: 148
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 3
    numSides: 6
    numLines: 6
    ebwtTotLen: 384
    ebwtTotSz: 384
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 289
Using parameters --bmax 217 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 217 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 164.571 (target: 216)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 122
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 123
Getting block 2 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 160
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 161
Getting block 3 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 203
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 204
Getting block 4 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 183
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 184
Getting block 5 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 205
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 206
Getting block 6 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 123
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 124
Getting block 7 of 7
  Reserving size (217) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 156
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 157
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 402
fchr[G]: 500
fchr[T]: 703
fchr[$]: 1158
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194881 bytes to primary EBWT file: ClpA_40_bowtie.rev.1.ebwt
Wrote 152 bytes to secondary EBWT file: ClpA_40_bowtie.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1158
    bwtLen: 1159
    sz: 290
    bwtSz: 290
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 37
    offsSz: 148
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 3
    numSides: 6
    numLines: 6
    ebwtTotLen: 384
    ebwtTotSz: 384
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00
Building index for ClpA_40 done.

Mapping ClpA_40 sequence to ClpA_40 done.
length variant dictionary is: 2
length read dictionary is: 364
length k_j dictionary is: 364
length proportion dictionary is: 2
total sum is: 364.0
computing proportions of ClpA_40 done

CTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT

clpA_40_40_
clpA_40_40_reference.fa
art_illumina -ss HS25 -sam -i clpA_40_40_reference.fa -p -l 76 -c 65 -m 200 -s 30 -o clpA_40_40_
['', 'clpA_27']
>clpA_40
AAAAAAGAACTTATTATACATGATAGTTTAATATTTGATTTGATACTAAATATAAAACTATTAAAATTTAATTTACTTGCCAACAGAAGTACTATTGGCATATTTGCCTTTATTGGTCCTTCTGGAGCGGGAAAATGCAAATTGACGGATATTTTATCAGAAGAGCTTGGAATTCAAAAATTTAGTCTTAATATGGGCGAATATAGCGATTTTAATTCTCTTGATAGATTGATTGGACCTGTTTTAAGTAATGAAGGGTATTATGAATCTACTAGATTTTTTAATTTTTTAAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAATGTAATAAAAGGGTTTTAAATTTTTTTTTGGAAGGATTTAAAACAGGCAAGCTTTTTGATGGTCTTGGGAAAAAGGCAAGTTTATCAGAAAGTTTAATAGTAATAAGCGTTAATGCTGAGAGCAATGAGCTTAATAGTATTGGCTTTAAAAACAAAATGACAGGGGAAAATGATTTTAATCTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTTCTTTTATTT
>clpA_27
AAAAAAGAACTTCTTATACATGATAGTTTGGTATTTGATTTGATATTAAATATTAAATTATTAAAATTTAATTTACTTTCCAATAGAAGTACTATTGGCATATTTGTCTTTATTGGTGCTTCTGGAGTAGGAAAATGCAAATTGACAGATATCTTATCAGAAGAGTTTAAAATTCCGAAATTTAGTCTTAATATGGGTGAGTATTGTGATTTTAATTCTCTTGATAGATTAATTGGTCCTATTTTGAGTAATGAAGGGCATTATGAATCTACTAGATTTTTCAAATTTTTGAACAAATCTTCTAATTCTATTATTTTTCTATCAGATTTTGATAAGTGTAATAAAAGGGTTTTAGATTTTTTTCTTGAGGGGTTTAAAACAGGCAAACTTTTTGATGGTCTTGGGAAAAAAGTAAGTTTATCAGAAAGTTTAATAGTAATAAGTGTTAATGTTGAGGGCAATGAGCTTAATAGTATCGGCTTTAAAAATAAAATGGCAGGGGAAAATGATTTTAATTTTATATTAGAGAAGAGATTTCCTAATGAATTTTTAGAGTTAATAGATTATGTGTTTGTATTT

clpA_27_40_
clpA_27_40_reference.fa
art_illumina -ss HS25 -sam -i clpA_27_40_reference.fa -p -l 76 -c 133 -m 200 -s 30 -o clpA_27_40_
bash temp.sh ClpA_40 ClpA_40
[65, 133]
